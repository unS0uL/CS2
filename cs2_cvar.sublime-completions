{
"scope": "source.cs2 - string - comment - variable.other.php",
"completions":
[
"php",
{
"trigger": "_fov",
"contents": "_fov \"${1:value}\"",
"kind": "snippet",
"details": "Automates fov command to server. "
},
{
"trigger": "adsp_alley_min",
"contents": "adsp_alley_min \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 122"
},
{
"trigger": "adsp_courtyard_min",
"contents": "adsp_courtyard_min \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 126"
},
{
"trigger": "adsp_debug",
"contents": "adsp_debug \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "adsp_door_height",
"contents": "adsp_door_height \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 112"
},
{
"trigger": "adsp_duct_min",
"contents": "adsp_duct_min \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 106"
},
{
"trigger": "adsp_hall_min",
"contents": "adsp_hall_min \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 110"
},
{
"trigger": "adsp_low_ceiling",
"contents": "adsp_low_ceiling \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 108"
},
{
"trigger": "adsp_opencourtyard_min",
"contents": "adsp_opencourtyard_min \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 126"
},
{
"trigger": "adsp_openspace_min",
"contents": "adsp_openspace_min \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 130"
},
{
"trigger": "adsp_openstreet_min",
"contents": "adsp_openstreet_min \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 118"
},
{
"trigger": "adsp_openwall_min",
"contents": "adsp_openwall_min \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 130"
},
{
"trigger": "adsp_room_min",
"contents": "adsp_room_min \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 102"
},
{
"trigger": "adsp_street_min",
"contents": "adsp_street_min \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 118"
},
{
"trigger": "adsp_tunnel_min",
"contents": "adsp_tunnel_min \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 114"
},
{
"trigger": "adsp_wall_height",
"contents": "adsp_wall_height \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 128"
},
{
"trigger": "ai_debug_dyninteractions",
"contents": "ai_debug_dyninteractions \"${1:value}\"",
"kind": "snippet",
"details": "Debug the NPC dynamic interaction system. "
},
{
"trigger": "ai_debug_los",
"contents": "ai_debug_los \"${1:value}\"",
"kind": "snippet",
"details": "NPC Line-Of-Sight debug mode. If 1, solid entities that block NPC LOC will be highlighted with white bounding boxes. If 2, it'll show non-solid entities that would do it if they were solid. "
},
{
"trigger": "ai_debug_off_nav",
"contents": "ai_debug_off_nav \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "ai_debug_ragdoll_magnets",
"contents": "ai_debug_ragdoll_magnets \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "ai_debug_shoot_positions",
"contents": "ai_debug_shoot_positions \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "ai_debug_soundent",
"contents": "ai_debug_soundent \"${1:value}\"",
"kind": "snippet",
"details": "Reports sounds being entered into the AI sound list. Set to 1 to see all sounds, set to 2 to only see DANGER sounds. "
},
{
"trigger": "ai_debug_soundent_duration",
"contents": "ai_debug_soundent_duration \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.1. Length of time to display ai_debug_soundent visual displays. "
},
{
"trigger": "ai_debug_speech",
"contents": "ai_debug_speech \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "ai_disabled",
"contents": "ai_disabled \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "ai_expression_frametime",
"contents": "ai_expression_frametime \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.05. Maximum frametime to still play background expressions. "
},
{
"trigger": "ai_expression_optimization",
"contents": "ai_expression_optimization \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Disable npc background expressions when you can't see them. "
},
{
"trigger": "ai_force_serverside_ragdoll",
"contents": "ai_force_serverside_ragdoll \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "ai_sequence_debug",
"contents": "ai_sequence_debug \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "ai_show_current_nav",
"contents": "ai_show_current_nav \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "ai_use_visibility_cache",
"contents": "ai_use_visibility_cache \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Sets whether or not NPCs can cache their Visibility checks against other entities. If set to 2, also tests to make sure that NPC->Target results match that of Target->NPC. "
},
{
"trigger": "ammo_338mag_headshot_mult",
"contents": "ammo_338mag_headshot_mult \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. You must enable tweaking via tweak_ammo_impulses to use this value. "
},
{
"trigger": "ammo_338mag_impulse",
"contents": "ammo_338mag_impulse \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2800. You must enable tweaking via tweak_ammo_impulses to use this value. "
},
{
"trigger": "ammo_338mag_max",
"contents": "ammo_338mag_max \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 30"
},
{
"trigger": "ammo_357sig_headshot_mult",
"contents": "ammo_357sig_headshot_mult \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. You must enable tweaking via tweak_ammo_impulses to use this value. "
},
{
"trigger": "ammo_357sig_impulse",
"contents": "ammo_357sig_impulse \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2000. You must enable tweaking via tweak_ammo_impulses to use this value. "
},
{
"trigger": "ammo_357sig_max",
"contents": "ammo_357sig_max \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 52"
},
{
"trigger": "ammo_357sig_min_max",
"contents": "ammo_357sig_min_max \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 12"
},
{
"trigger": "ammo_357sig_p250_max",
"contents": "ammo_357sig_p250_max \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 26"
},
{
"trigger": "ammo_357sig_small_max",
"contents": "ammo_357sig_small_max \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 24"
},
{
"trigger": "ammo_45acp_headshot_mult",
"contents": "ammo_45acp_headshot_mult \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. You must enable tweaking via tweak_ammo_impulses to use this value. "
},
{
"trigger": "ammo_45acp_impulse",
"contents": "ammo_45acp_impulse \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2100. You must enable tweaking via tweak_ammo_impulses to use this value. "
},
{
"trigger": "ammo_45acp_max",
"contents": "ammo_45acp_max \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 100"
},
{
"trigger": "ammo_50AE_headshot_mult",
"contents": "ammo_50AE_headshot_mult \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. You must enable tweaking via tweak_ammo_impulses to use this value. "
},
{
"trigger": "ammo_50AE_impulse",
"contents": "ammo_50AE_impulse \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2400. You must enable tweaking via tweak_ammo_impulses to use this value. "
},
{
"trigger": "ammo_50AE_max",
"contents": "ammo_50AE_max \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 35"
},
{
"trigger": "ammo_556mm_box_headshot_mult",
"contents": "ammo_556mm_box_headshot_mult \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. You must enable tweaking via tweak_ammo_impulses to use this value. "
},
{
"trigger": "ammo_556mm_box_impulse",
"contents": "ammo_556mm_box_impulse \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2400. You must enable tweaking via tweak_ammo_impulses to use this value. "
},
{
"trigger": "ammo_556mm_box_max",
"contents": "ammo_556mm_box_max \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 200"
},
{
"trigger": "ammo_556mm_headshot_mult",
"contents": "ammo_556mm_headshot_mult \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. You must enable tweaking via tweak_ammo_impulses to use this value. "
},
{
"trigger": "ammo_556mm_impulse",
"contents": "ammo_556mm_impulse \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2400. You must enable tweaking via tweak_ammo_impulses to use this value. "
},
{
"trigger": "ammo_556mm_max",
"contents": "ammo_556mm_max \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 90"
},
{
"trigger": "ammo_556mm_small_max",
"contents": "ammo_556mm_small_max \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 40"
},
{
"trigger": "ammo_57mm_headshot_mult",
"contents": "ammo_57mm_headshot_mult \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. You must enable tweaking via tweak_ammo_impulses to use this value. "
},
{
"trigger": "ammo_57mm_impulse",
"contents": "ammo_57mm_impulse \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2000. You must enable tweaking via tweak_ammo_impulses to use this value. "
},
{
"trigger": "ammo_57mm_max",
"contents": "ammo_57mm_max \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 100"
},
{
"trigger": "ammo_762mm_headshot_mult",
"contents": "ammo_762mm_headshot_mult \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. You must enable tweaking via tweak_ammo_impulses to use this value. "
},
{
"trigger": "ammo_762mm_impulse",
"contents": "ammo_762mm_impulse \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2400. You must enable tweaking via tweak_ammo_impulses to use this value. "
},
{
"trigger": "ammo_762mm_max",
"contents": "ammo_762mm_max \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 90"
},
{
"trigger": "ammo_9mm_headshot_mult",
"contents": "ammo_9mm_headshot_mult \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. You must enable tweaking via tweak_ammo_impulses to use this value. "
},
{
"trigger": "ammo_9mm_impulse",
"contents": "ammo_9mm_impulse \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2000. You must enable tweaking via tweak_ammo_impulses to use this value. "
},
{
"trigger": "ammo_9mm_max",
"contents": "ammo_9mm_max \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 120"
},
{
"trigger": "ammo_buckshot_headshot_mult",
"contents": "ammo_buckshot_headshot_mult \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. You must enable tweaking via tweak_ammo_impulses to use this value. "
},
{
"trigger": "ammo_buckshot_impulse",
"contents": "ammo_buckshot_impulse \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 600. You must enable tweaking via tweak_ammo_impulses to use this value. "
},
{
"trigger": "ammo_buckshot_max",
"contents": "ammo_buckshot_max \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 32"
},
{
"trigger": "ammo_grenade_limit_breachcharge",
"contents": "ammo_grenade_limit_breachcharge \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3"
},
{
"trigger": "ammo_grenade_limit_bumpmine",
"contents": "ammo_grenade_limit_bumpmine \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3"
},
{
"trigger": "ammo_grenade_limit_default",
"contents": "ammo_grenade_limit_default \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "ammo_grenade_limit_flashbang",
"contents": "ammo_grenade_limit_flashbang \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "ammo_grenade_limit_snowballs",
"contents": "ammo_grenade_limit_snowballs \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3"
},
{
"trigger": "ammo_grenade_limit_total",
"contents": "ammo_grenade_limit_total \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3"
},
{
"trigger": "ammo_grenade_limit_tripwirefire",
"contents": "ammo_grenade_limit_tripwirefire \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "ammo_item_limit_adrenaline",
"contents": "ammo_item_limit_adrenaline \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 5"
},
{
"trigger": "ammo_item_limit_healthshot",
"contents": "ammo_item_limit_healthshot \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 4"
},
{
"trigger": "anim_damped_move_speed_timewindow",
"contents": "anim_damped_move_speed_timewindow \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.2"
},
{
"trigger": "anim_dampedaccel16_scale",
"contents": "anim_dampedaccel16_scale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.85"
},
{
"trigger": "anim_dampedaccel16_timewindow",
"contents": "anim_dampedaccel16_timewindow \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.25"
},
{
"trigger": "anim_decode_forcewritealltransforms",
"contents": "anim_decode_forcewritealltransforms \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Force BatchAnimationDecode to write transformations for all bones "
},
{
"trigger": "anim_disable",
"contents": "anim_disable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "anim_resetclientsideframe_old_behavior",
"contents": "anim_resetclientsideframe_old_behavior \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "anim_resource_validate_on_load",
"contents": "anim_resource_validate_on_load \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Validates the animation group channel list against the animations on load for every animation "
},
{
"trigger": "anim_scale_wasd_input_arm_pump",
"contents": "anim_scale_wasd_input_arm_pump \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.5"
},
{
"trigger": "anim_scale_wasd_input_hip_dip",
"contents": "anim_scale_wasd_input_hip_dip \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.5"
},
{
"trigger": "anim_scale_wasd_input_hip_swivel",
"contents": "anim_scale_wasd_input_hip_swivel \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.25"
},
{
"trigger": "animated_material_attributes",
"contents": "animated_material_attributes \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "animgraph_debug",
"contents": "animgraph_debug \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Debug animation graph "
},
{
"trigger": "animgraph_debug_animevents",
"contents": "animgraph_debug_animevents \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Print info about animevents emitted by AnimGraph "
},
{
"trigger": "animgraph_debug_entindex",
"contents": "animgraph_debug_entindex \"${1:value}\"",
"kind": "snippet",
"details": "The entity to specifically debug "
},
{
"trigger": "animgraph_debug_filterent",
"contents": "animgraph_debug_filterent \"${1:value}\"",
"kind": "snippet",
"details": "Filter setting for animgraph_debug_variables output. If set to -1, show debug for all entities. If set to 0, show debug for any NPCs that have been npc_selected. If set to >0, something other than 0, show debug for the entity with the matching entindex. "
},
{
"trigger": "animgraph_debug_max_poseop_count",
"contents": "animgraph_debug_max_poseop_count \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "animgraph_debug_set_filter_params",
"contents": "animgraph_debug_set_filter_params \"${1:value}\"",
"kind": "snippet",
"details": "Comma separated list of params to filter against when drawing debug text overlays "
},
{
"trigger": "animgraph_debug_tags",
"contents": "animgraph_debug_tags \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "animgraph_debug_variables",
"contents": "animgraph_debug_variables \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Turn on to see animgraph variable changes for entities passing animgraph_debug_filterent. "
},
{
"trigger": "animgraph_debug_variables_ignore_missing",
"contents": "animgraph_debug_variables_ignore_missing \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. If set, animgraph_debug_variables won't show debug for warnings about sets to missing variables. "
},
{
"trigger": "animgraph_debug_variables_ignore_nonchanges",
"contents": "animgraph_debug_variables_ignore_nonchanges \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. If set, animgraph_debug_variables won't show debug for variable sets that don't change the value. "
},
{
"trigger": "animgraph_draw_traces",
"contents": "animgraph_draw_traces \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "animgraph_enable",
"contents": "animgraph_enable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Enable animation graph "
},
{
"trigger": "animgraph_enable_dirty_netvar_optimization",
"contents": "animgraph_enable_dirty_netvar_optimization \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "animgraph_enable_parallel_update",
"contents": "animgraph_enable_parallel_update \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "animgraph_footlock_auto_ledge_detection",
"contents": "animgraph_footlock_auto_ledge_detection \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Attempt to detect when the foot is partially hanging off a ledge and stop it tilting to reach the bottom "
},
{
"trigger": "animgraph_footlock_auto_stair_detection",
"contents": "animgraph_footlock_auto_stair_detection \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Attempt to detect when the foot is on a stair and will stop it from tilting to reach the next step "
},
{
"trigger": "animgraph_footlock_calculate_tilt",
"contents": "animgraph_footlock_calculate_tilt \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "animgraph_footlock_debug_foot_index",
"contents": "animgraph_footlock_debug_foot_index \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "animgraph_footlock_debug_type",
"contents": "animgraph_footlock_debug_type \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2"
},
{
"trigger": "animgraph_footlock_draw_footbase",
"contents": "animgraph_footlock_draw_footbase \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "animgraph_footlock_enabled",
"contents": "animgraph_footlock_enabled \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. A master convar that effectively disables the entire footlock node. "
},
{
"trigger": "animgraph_footlock_ground_roll",
"contents": "animgraph_footlock_ground_roll \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "animgraph_footlock_hip_offset_enable",
"contents": "animgraph_footlock_hip_offset_enable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "animgraph_footlock_ik_enable",
"contents": "animgraph_footlock_ik_enable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Enable IK. "
},
{
"trigger": "animgraph_footlock_tilt_mode",
"contents": "animgraph_footlock_tilt_mode \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "animgraph_footlock_trace_ground_enabled",
"contents": "animgraph_footlock_trace_ground_enabled \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Convar for toggling foot lock ground tracking. "
},
{
"trigger": "animgraph_footlock_use_hip_shift",
"contents": "animgraph_footlock_use_hip_shift \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "animgraph_force_full_network_updates",
"contents": "animgraph_force_full_network_updates \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "animgraph_force_tick_all_graphs",
"contents": "animgraph_force_tick_all_graphs \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "animgraph_ik_debug",
"contents": "animgraph_ik_debug \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "animgraph_motionmatching_print_compressionstats",
"contents": "animgraph_motionmatching_print_compressionstats \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "animgraph_network_enable",
"contents": "animgraph_network_enable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Enable animation graph networking. The setting is only read at graph creation time; to use please set on the command line. "
},
{
"trigger": "animgraph_record_all",
"contents": "animgraph_record_all \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Automatically start recording AnimGraphs when they get created, and save them to disk when they are destroyed "
},
{
"trigger": "animgraph_slope_draw_raycasts",
"contents": "animgraph_slope_draw_raycasts \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "animgraph_slope_enable",
"contents": "animgraph_slope_enable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "animgraph_slowdownonslopes_enabled",
"contents": "animgraph_slowdownonslopes_enabled \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "animgraph_trace_ignore_prop_physics",
"contents": "animgraph_trace_ignore_prop_physics \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "animgraph_trace_static_only",
"contents": "animgraph_trace_static_only \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "animgraph_verify_dirty_netvar_optimization",
"contents": "animgraph_verify_dirty_netvar_optimization \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "async_serialize",
"contents": "async_serialize \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Force async reads to serialize for profiling "
},
{
"trigger": "autosave_fully_async",
"contents": "autosave_fully_async \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Set to 1 to have autosaves execute completely on the save thread, forces 'render only' mode while the save completes "
},
{
"trigger": "battery_saver",
"contents": "battery_saver \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. OBSOLETE replaced by mobile_fps_* - Battery saver mode. 0=off, 1=on "
},
{
"trigger": "blink_duration",
"contents": "blink_duration \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.5. How many seconds an eye blink will last. "
},
{
"trigger": "bot_allow_grenades",
"contents": "bot_allow_grenades \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. If nonzero, bots may use grenades. "
},
{
"trigger": "bot_allow_machine_guns",
"contents": "bot_allow_machine_guns \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. If nonzero, bots may use the machine gun. "
},
{
"trigger": "bot_allow_pistols",
"contents": "bot_allow_pistols \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. If nonzero, bots may use pistols. "
},
{
"trigger": "bot_allow_rifles",
"contents": "bot_allow_rifles \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. If nonzero, bots may use rifles. "
},
{
"trigger": "bot_allow_rogues",
"contents": "bot_allow_rogues \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. If nonzero, bots may occasionally go 'rogue'. Rogue bots do not obey radio commands, nor pursue scenario goals. "
},
{
"trigger": "bot_allow_shotguns",
"contents": "bot_allow_shotguns \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. If nonzero, bots may use shotguns. "
},
{
"trigger": "bot_allow_snipers",
"contents": "bot_allow_snipers \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. If nonzero, bots may use sniper rifles. "
},
{
"trigger": "bot_allow_sub_machine_guns",
"contents": "bot_allow_sub_machine_guns \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. If nonzero, bots may use sub-machine guns. "
},
{
"trigger": "bot_auto_follow",
"contents": "bot_auto_follow \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. If nonzero, bots with high co-op may automatically follow a nearby human player. "
},
{
"trigger": "bot_auto_vacate",
"contents": "bot_auto_vacate \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. If nonzero, bots will automatically leave to make room for human players. "
},
{
"trigger": "bot_autodifficulty_threshold_high",
"contents": "bot_autodifficulty_threshold_high \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 5. Upper bound above Average Human Contribution Score that a bot must be above to change its difficultyMin: -20 Max: 20"
},
{
"trigger": "bot_autodifficulty_threshold_low",
"contents": "bot_autodifficulty_threshold_low \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -2. Lower bound below Average Human Contribution Score that a bot must be below to change its difficultyMin: -20 Max: 20"
},
{
"trigger": "bot_chatter",
"contents": "bot_chatter \"${1:value}\"",
"kind": "snippet",
"details": "Control how bots talk. Allowed values: 'off', 'radio', 'minimal', or 'normal'. "
},
{
"trigger": "bot_chatter_use_rr",
"contents": "bot_chatter_use_rr \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. 0 = Use old bot chatter system, 1 = Use response rules "
},
{
"trigger": "bot_controllable",
"contents": "bot_controllable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Determines whether bots can be controlled by players "
},
{
"trigger": "bot_coop_force_throw_grenade_chance",
"contents": "bot_coop_force_throw_grenade_chance \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.3"
},
{
"trigger": "bot_coop_idle_max_vision_distance",
"contents": "bot_coop_idle_max_vision_distance \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1400. Max distance bots can see targets (in coop) when they are idle, dormant, hiding or asleep.Min: -1 "
},
{
"trigger": "bot_crouch",
"contents": "bot_crouch \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "bot_debug",
"contents": "bot_debug \"${1:value}\"",
"kind": "snippet",
"details": "For internal testing purposes. "
},
{
"trigger": "bot_debug_target",
"contents": "bot_debug_target \"${1:value}\"",
"kind": "snippet",
"details": "For internal testing purposes. "
},
{
"trigger": "bot_defer_to_human_goals",
"contents": "bot_defer_to_human_goals \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. If nonzero and there is a human on the team, the bots will not do the scenario tasks. "
},
{
"trigger": "bot_defer_to_human_items",
"contents": "bot_defer_to_human_items \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. If nonzero and there is a human on the team, the bots will not get scenario items. "
},
{
"trigger": "bot_difficulty",
"contents": "bot_difficulty \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Defines the skill of bots joining the game. Values are: 0=easy, 1=normal, 2=hard, 3=expert. "
},
{
"trigger": "bot_dont_shoot",
"contents": "bot_dont_shoot \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. If nonzero, bots will not fire weapons (for debugging). "
},
{
"trigger": "bot_eco_limit",
"contents": "bot_eco_limit \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2000. If nonzero, bots will not buy if their money falls below this amount. "
},
{
"trigger": "bot_flipout",
"contents": "bot_flipout \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. If nonzero, bots use no CPU for AI. Instead, they run around randomly. "
},
{
"trigger": "bot_force_duck",
"contents": "bot_force_duck \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "bot_freeze",
"contents": "bot_freeze \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "bot_ignore_enemies",
"contents": "bot_ignore_enemies \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. If nonzero, bots will ignore enemies (for debugging). "
},
{
"trigger": "bot_ignore_players",
"contents": "bot_ignore_players \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Bots will not see non-bot players. "
},
{
"trigger": "bot_join_after_player",
"contents": "bot_join_after_player \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. If nonzero, bots wait until a player joins before entering the game. "
},
{
"trigger": "bot_join_delay",
"contents": "bot_join_delay \"${1:value}\"",
"kind": "snippet",
"details": "Prevents bots from joining the server for this many seconds after a map change. "
},
{
"trigger": "bot_join_in_warmup",
"contents": "bot_join_in_warmup \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Prevents bots from joining the server while warmup phase is active. "
},
{
"trigger": "bot_join_team",
"contents": "bot_join_team \"${1:value}\"",
"kind": "snippet",
"details": "Determines the team bots will join into. Allowed values: 'any', 'T', or 'CT'. "
},
{
"trigger": "bot_loadout",
"contents": "bot_loadout \"${1:value}\"",
"kind": "snippet",
"details": "bots are given these items at round start "
},
{
"trigger": "bot_max_visible_smoke_length",
"contents": "bot_max_visible_smoke_length \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 200. Bots will see players through smoke clouds up to this length. "
},
{
"trigger": "bot_max_vision_distance_override",
"contents": "bot_max_vision_distance_override \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. Max distance bots can see targets.Min: -1 "
},
{
"trigger": "bot_mimic",
"contents": "bot_mimic \"${1:value}\"",
"kind": "snippet",
"details": "Bot uses usercmd of player by index. "
},
{
"trigger": "bot_mimic_spec_buttons",
"contents": "bot_mimic_spec_buttons \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. +attack, +jump etc are used for spectator control instead of being passed on to spectated bot "
},
{
"trigger": "bot_mimic_yaw_offset",
"contents": "bot_mimic_yaw_offset \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 180"
},
{
"trigger": "bot_prefix",
"contents": "bot_prefix \"${1:value}\"",
"kind": "snippet",
"details": "This string is prefixed to the name of all bots that join the game. will be replaced with the bot's difficulty. will be replaced with the bot's desired weapon class. will be replaced with a 0-100 representation of the bot's skill. "
},
{
"trigger": "bot_quota",
"contents": "bot_quota \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 10. Determines the total number of bots in the game. "
},
{
"trigger": "bot_quota_mode",
"contents": "bot_quota_mode \"${1:value}\"",
"kind": "snippet",
"details": "Determines the type of quota. Allowed values: 'normal', 'fill', and 'match'. If 'fill', the server will adjust bots to keep N players in the game, where N is bot_quota. If 'match', the server will maintain a 1:N ratio of humans to bots, where N is bot_quota. "
},
{
"trigger": "bot_randombuy",
"contents": "bot_randombuy \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. should bots ignore their prefered weapons and just buy weapons at random? "
},
{
"trigger": "bot_show_battlefront",
"contents": "bot_show_battlefront \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Show areas where rushing players will initially meet. "
},
{
"trigger": "bot_show_nav",
"contents": "bot_show_nav \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. For internal testing purposes. "
},
{
"trigger": "bot_show_occupy_time",
"contents": "bot_show_occupy_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Show when each nav area can first be reached by each team. "
},
{
"trigger": "bot_stop",
"contents": "bot_stop \"${1:value}\"",
"kind": "snippet",
"details": "bot_stop <1|all> | | | "
},
{
"trigger": "bot_traceview",
"contents": "bot_traceview \"${1:value}\"",
"kind": "snippet",
"details": "For internal testing purposes. "
},
{
"trigger": "bot_walk",
"contents": "bot_walk \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. If nonzero, bots can only walk, not run. "
},
{
"trigger": "bot_zombie",
"contents": "bot_zombie \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. If nonzero, bots will stay in idle mode and not attack. "
},
{
"trigger": "break_damage_inherit_scale",
"contents": "break_damage_inherit_scale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "break_invulnerable_spawn_duration",
"contents": "break_invulnerable_spawn_duration \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.5"
},
{
"trigger": "breakable_multiplayer",
"contents": "breakable_multiplayer \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "buddha",
"contents": "buddha \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Player takes damage but won't die "
},
{
"trigger": "buddha_ignore_bots",
"contents": "buddha_ignore_bots \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Bots always buddha 0 "
},
{
"trigger": "buddha_reset_hp",
"contents": "buddha_reset_hp \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. HP to set when damaged below zero in Buddha Mode "
},
{
"trigger": "bug_submitter_override",
"contents": "bug_submitter_override \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "buildcubemaps_renderdoc_capture",
"contents": "buildcubemaps_renderdoc_capture \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. Capture a specific cubemap with RenderDoc during buildcubemaps. "
},
{
"trigger": "c_csgo_itempreview_demo_scene",
"contents": "c_csgo_itempreview_demo_scene \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "c_maxdistance",
"contents": "c_maxdistance \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 200"
},
{
"trigger": "c_maxpitch",
"contents": "c_maxpitch \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 90"
},
{
"trigger": "c_maxyaw",
"contents": "c_maxyaw \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 135"
},
{
"trigger": "c_mindistance",
"contents": "c_mindistance \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 30"
},
{
"trigger": "c_minpitch",
"contents": "c_minpitch \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "c_minyaw",
"contents": "c_minyaw \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -135"
},
{
"trigger": "c_orthoheight",
"contents": "c_orthoheight \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 100"
},
{
"trigger": "c_orthowidth",
"contents": "c_orthowidth \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 100"
},
{
"trigger": "c_thirdpersonshoulder",
"contents": "c_thirdpersonshoulder \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "c_thirdpersonshoulderaimdist",
"contents": "c_thirdpersonshoulderaimdist \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 120"
},
{
"trigger": "c_thirdpersonshoulderdist",
"contents": "c_thirdpersonshoulderdist \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 40"
},
{
"trigger": "c_thirdpersonshoulderheight",
"contents": "c_thirdpersonshoulderheight \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 5"
},
{
"trigger": "c_thirdpersonshoulderoffset",
"contents": "c_thirdpersonshoulderoffset \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 20"
},
{
"trigger": "cachedvalue_count_partybrowser",
"contents": "cachedvalue_count_partybrowser \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cachedvalue_count_teammates",
"contents": "cachedvalue_count_teammates \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cam_collision",
"contents": "cam_collision \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. When in thirdperson and cam_collision is set to 1, an attempt is made to keep the camera from passing though walls. "
},
{
"trigger": "cam_head_constraint_debug",
"contents": "cam_head_constraint_debug \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Show camera head constraint debug info "
},
{
"trigger": "cam_head_constraint_distance",
"contents": "cam_head_constraint_distance \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 12. Distance to constrain first/thirdperson camera and head "
},
{
"trigger": "cam_head_constraint_soft_transition",
"contents": "cam_head_constraint_soft_transition \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 4. Constraint soft transition distance "
},
{
"trigger": "cam_idealdelta",
"contents": "cam_idealdelta \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 4. Controls the speed when matching offset to ideal angles in thirdperson view "
},
{
"trigger": "cam_idealdist",
"contents": "cam_idealdist \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 150"
},
{
"trigger": "cam_ideallag",
"contents": "cam_ideallag \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 4. Amount of lag used when matching offset to ideal angles in thirdperson view "
},
{
"trigger": "cam_idealpitch",
"contents": "cam_idealpitch \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cam_idealyaw",
"contents": "cam_idealyaw \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cam_showangles",
"contents": "cam_showangles \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. When in thirdperson, print viewangles/idealangles/cameraoffsets to the console. "
},
{
"trigger": "cam_snapto",
"contents": "cam_snapto \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "camera_datadriven_debug",
"contents": "camera_datadriven_debug \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "camera_datadriven_disable_cache",
"contents": "camera_datadriven_disable_cache \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cash_player_bomb_defused",
"contents": "cash_player_bomb_defused \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 300"
},
{
"trigger": "cash_player_bomb_planted",
"contents": "cash_player_bomb_planted \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 300"
},
{
"trigger": "cash_player_damage_hostage",
"contents": "cash_player_damage_hostage \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -30"
},
{
"trigger": "cash_player_get_killed",
"contents": "cash_player_get_killed \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cash_player_interact_with_hostage",
"contents": "cash_player_interact_with_hostage \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 150"
},
{
"trigger": "cash_player_killed_enemy_default",
"contents": "cash_player_killed_enemy_default \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 300"
},
{
"trigger": "cash_player_killed_enemy_factor",
"contents": "cash_player_killed_enemy_factor \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "cash_player_killed_hostage",
"contents": "cash_player_killed_hostage \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1000"
},
{
"trigger": "cash_player_killed_teammate",
"contents": "cash_player_killed_teammate \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -300"
},
{
"trigger": "cash_player_rescued_hostage",
"contents": "cash_player_rescued_hostage \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1000"
},
{
"trigger": "cash_player_respawn_amount",
"contents": "cash_player_respawn_amount \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cash_team_bonus_shorthanded",
"contents": "cash_team_bonus_shorthanded \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cash_team_elimination_bomb_map",
"contents": "cash_team_elimination_bomb_map \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3250"
},
{
"trigger": "cash_team_elimination_hostage_map_ct",
"contents": "cash_team_elimination_hostage_map_ct \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2000"
},
{
"trigger": "cash_team_elimination_hostage_map_t",
"contents": "cash_team_elimination_hostage_map_t \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1000"
},
{
"trigger": "cash_team_hostage_alive",
"contents": "cash_team_hostage_alive \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cash_team_hostage_interaction",
"contents": "cash_team_hostage_interaction \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 500"
},
{
"trigger": "cash_team_loser_bonus",
"contents": "cash_team_loser_bonus \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1400"
},
{
"trigger": "cash_team_loser_bonus_consecutive_rounds",
"contents": "cash_team_loser_bonus_consecutive_rounds \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 500"
},
{
"trigger": "cash_team_planted_bomb_but_defused",
"contents": "cash_team_planted_bomb_but_defused \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 800"
},
{
"trigger": "cash_team_rescued_hostage",
"contents": "cash_team_rescued_hostage \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cash_team_survive_guardian_wave",
"contents": "cash_team_survive_guardian_wave \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1000"
},
{
"trigger": "cash_team_terrorist_win_bomb",
"contents": "cash_team_terrorist_win_bomb \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3500"
},
{
"trigger": "cash_team_win_by_defusing_bomb",
"contents": "cash_team_win_by_defusing_bomb \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3250"
},
{
"trigger": "cash_team_win_by_hostage_rescue",
"contents": "cash_team_win_by_hostage_rescue \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3500"
},
{
"trigger": "cash_team_win_by_time_running_out_bomb",
"contents": "cash_team_win_by_time_running_out_bomb \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3250"
},
{
"trigger": "cash_team_win_by_time_running_out_hostage",
"contents": "cash_team_win_by_time_running_out_hostage \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3250"
},
{
"trigger": "cash_team_winner_bonus_consecutive_rounds",
"contents": "cash_team_winner_bonus_consecutive_rounds \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cc_captiontrace",
"contents": "cc_captiontrace \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Show missing closecaptions (0 = no, 1 = devconsole, 2 = show in hud) "
},
{
"trigger": "cc_delay_time",
"contents": "cc_delay_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.25. Close caption delay before showing caption. "
},
{
"trigger": "cc_lang",
"contents": "cc_lang \"${1:value}\"",
"kind": "snippet",
"details": "Current close caption language (emtpy = use game UI language) "
},
{
"trigger": "cc_linger_time",
"contents": "cc_linger_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Close caption linger time. "
},
{
"trigger": "cc_log",
"contents": "cc_log \"${1:value}\"",
"kind": "snippet",
"details": "Log caption names and contents (0 = off, 1 = found captions, 2 = unfound captions, 3 = all captions) "
},
{
"trigger": "cc_norepeat",
"contents": "cc_norepeat \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 5. In multiplayer games, don't repeat captions more often than this many seconds. "
},
{
"trigger": "cc_showmissing",
"contents": "cc_showmissing \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Show missing closecaption entries. "
},
{
"trigger": "cc_spectator_only",
"contents": "cc_spectator_only \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cc_subtitles",
"contents": "cc_subtitles \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. If set, don't show sound effect captions, just voice overs (i.e., won't help hearing impaired players). "
},
{
"trigger": "cc_vr_caption_catchup_interval",
"contents": "cc_vr_caption_catchup_interval \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.3. Duration it takes for attached caption to ideal pointMin: 0.01 "
},
{
"trigger": "cc_vr_caption_speed",
"contents": "cc_vr_caption_speed \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. 0 = slow, 1 = medium (default), 2 = fast0 Max: 2"
},
{
"trigger": "cc_vr_debug",
"contents": "cc_vr_debug \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Debug visualization of VR closed caption placement "
},
{
"trigger": "cc_vr_depth_test",
"contents": "cc_vr_depth_test \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Have closed caption Panorama panel perform depth testing against the scene "
},
{
"trigger": "cc_vr_epsilon",
"contents": "cc_vr_epsilon \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2.5. Epsilon to trigger movement of VR subtitle panel in world space "
},
{
"trigger": "cc_vr_font_size",
"contents": "cc_vr_font_size \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. 0 = small, 1 = med (default), 2 = large0 Max: 2"
},
{
"trigger": "cc_vr_forward_offset",
"contents": "cc_vr_forward_offset \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 30. Subtitle offset distance (forward, in front of player) "
},
{
"trigger": "cc_vr_vertical_offset",
"contents": "cc_vr_vertical_offset \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -6.5. Subtitle vertical offset distance (positive is up) "
},
{
"trigger": "cc_vr_width",
"contents": "cc_vr_width \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. 0 = narrow, 1 = med (default), 2 = wide0 Max: 2"
},
{
"trigger": "character_patches",
"contents": "character_patches \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "check_transmit_dump_ents",
"contents": "check_transmit_dump_ents \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "chet_debug_idle",
"contents": "chet_debug_idle \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. If set one, many debug prints to help track down the TLK_IDLE issue. Set two for super verbose info "
},
{
"trigger": "cl_access_all_missions",
"contents": "cl_access_all_missions \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_aggregate_particles",
"contents": "cl_aggregate_particles \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_allow_animated_avatars",
"contents": "cl_allow_animated_avatars \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Whether or not to allow animated avatars "
},
{
"trigger": "cl_anglespeedkey",
"contents": "cl_anglespeedkey \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.67"
},
{
"trigger": "cl_anim_queue_changes",
"contents": "cl_anim_queue_changes \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_animgraph_history_force_temporal_consistency",
"contents": "cl_animgraph_history_force_temporal_consistency \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "cl_async_client_shatter",
"contents": "cl_async_client_shatter \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. spawn client glass shards asynchronously during demos or when remotely connected. "
},
{
"trigger": "cl_auto_cursor_scale",
"contents": "cl_auto_cursor_scale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Automatic cursor size scaling. "
},
{
"trigger": "cl_autobuy",
"contents": "cl_autobuy \"${1:value}\"",
"kind": "snippet",
"details": "The order in which autobuy will attempt to purchase items "
},
{
"trigger": "cl_autohelp",
"contents": "cl_autohelp \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Auto-help "
},
{
"trigger": "cl_borrow_music_from_player_slot",
"contents": "cl_borrow_music_from_player_slot \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "cl_boxmove",
"contents": "cl_boxmove \"${1:value}\"",
"kind": "snippet",
"details": "run in a square, # represents how many usercommands to run before turning. "
},
{
"trigger": "cl_boxmove_speed",
"contents": "cl_boxmove_speed \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. how fast to run (1 to use player max run speed). "
},
{
"trigger": "cl_buywheel_donate_key",
"contents": "cl_buywheel_donate_key \"${1:value}\"",
"kind": "snippet",
"details": "Set the key to use for donation in the buy menu. 0: Left Control; 1: Left Alt; 2: Left Shift. "
},
{
"trigger": "cl_buywheel_nonumberpurchasing",
"contents": "cl_buywheel_nonumberpurchasing \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Set non-zero to prevent buy wheel from purchasing via number keys "
},
{
"trigger": "cl_cache_sendtable",
"contents": "cl_cache_sendtable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Cache sendtables "
},
{
"trigger": "cl_cameraoverride_fade_in_amount",
"contents": "cl_cameraoverride_fade_in_amount \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cl_cameraoverride_shadow_depth_bias",
"contents": "cl_cameraoverride_shadow_depth_bias \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.006"
},
{
"trigger": "cl_cameraoverride_shadow_end",
"contents": "cl_cameraoverride_shadow_end \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.8"
},
{
"trigger": "cl_change_callback_limit",
"contents": "cl_change_callback_limit \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.2. change callback msec warning limit "
},
{
"trigger": "cl_chat_active",
"contents": "cl_chat_active \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cl_chatfilters",
"contents": "cl_chatfilters \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 63. Stores the chat filter settings "
},
{
"trigger": "cl_clanid",
"contents": "cl_clanid \"${1:value}\"",
"kind": "snippet",
"details": "Current clan ID for name decoration "
},
{
"trigger": "cl_clock_correction",
"contents": "cl_clock_correction \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Enable/disable clock correction on the client. "
},
{
"trigger": "cl_clock_correction_adjustment_max_amount",
"contents": "cl_clock_correction_adjustment_max_amount \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 200. Sets the maximum number of milliseconds per second it is allowed to correct the client clock. It will only correct this amount if the difference between the client and server clock is equal to or larger than cl_clock_correction_adjustment_max_offset. "
},
{
"trigger": "cl_clock_correction_adjustment_max_offset",
"contents": "cl_clock_correction_adjustment_max_offset \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 90. As the clock offset goes from cl_clock_correction_adjustment_min_offset to this value (in milliseconds), it moves towards applying cl_clock_correction_adjustment_max_amount of adjustment. That way, the response is small when the offset is small. "
},
{
"trigger": "cl_clock_correction_adjustment_min_offset",
"contents": "cl_clock_correction_adjustment_min_offset \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 10. If the clock offset is less than this amount (in milliseconds), then no clock correction is applied. "
},
{
"trigger": "cl_clock_correction_force_server_tick",
"contents": "cl_clock_correction_force_server_tick \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 999. Force clock correction to match the server tick + this offset (-999 disables it). "
},
{
"trigger": "cl_clock_showdebuginfo",
"contents": "cl_clock_showdebuginfo \"${1:value}\"",
"kind": "snippet",
"details": "Show debugging info about the clock drift, 1= resets, 2=adjustments, 3=verbose "
},
{
"trigger": "cl_clock_unhook",
"contents": "cl_clock_unhook \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_clockdbg",
"contents": "cl_clockdbg \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_clockdrift_max_ticks",
"contents": "cl_clockdrift_max_ticks \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3. Maximum number of ticks the clock is allowed to drift before the client snaps its clock to the server's. "
},
{
"trigger": "cl_clutch_mode",
"contents": "cl_clutch_mode \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Silence voice and other distracting sounds until the end of round or next death. "
},
{
"trigger": "cl_color",
"contents": "cl_color \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 4. Preferred teammate color0 Max: 4"
},
{
"trigger": "cl_connectionretrytime_p2p",
"contents": "cl_connectionretrytime_p2p \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 20. Number of seconds over which to spread retry attempts for P2P. "
},
{
"trigger": "cl_cq_min_queue",
"contents": "cl_cq_min_queue \"${1:value}\"",
"kind": "snippet",
"details": "Allows client to disable (=-1), defer to server (=0), or request a certain min-command queue size for games that support the command queue (IsUsingCommandQueue()) for CUserCmds. "
},
{
"trigger": "cl_crosshair_drawoutline",
"contents": "cl_crosshair_drawoutline \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Draws a black outline around the crosshair for better visibility "
},
{
"trigger": "cl_crosshair_dynamic_maxdist_splitratio",
"contents": "cl_crosshair_dynamic_maxdist_splitratio \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. If using cl_crosshairstyle 2, this is the ratio used to determine how long the inner and outer xhair pips will be. [inner = cl_crosshairsize*(1-cl_crosshair_dynamic_maxdist_splitratio), outer = cl_crosshairsize*cl_crosshair_dynamic_maxdist_splitratio] [0 - 1]0 Max: 1"
},
{
"trigger": "cl_crosshair_dynamic_splitalpha_innermod",
"contents": "cl_crosshair_dynamic_splitalpha_innermod \"${1:value}\"",
"kind": "snippet",
"details": "If using cl_crosshairstyle 2, this is the alpha modification that will be used for the INNER crosshair pips once they've split. [0 - 1]0 Max: 1"
},
{
"trigger": "cl_crosshair_dynamic_splitalpha_outermod",
"contents": "cl_crosshair_dynamic_splitalpha_outermod \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. If using cl_crosshairstyle 2, this is the alpha modification that will be used for the OUTER crosshair pips once they've split. [0.3 - 1]Min: 0.3 Max: 1"
},
{
"trigger": "cl_crosshair_dynamic_splitdist",
"contents": "cl_crosshair_dynamic_splitdist \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3. If using cl_crosshairstyle 2, this is the distance that the crosshair pips will split into 2. (default is 7) "
},
{
"trigger": "cl_crosshair_friendly_warning",
"contents": "cl_crosshair_friendly_warning \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. 0: off, 1: on0 Max: 1"
},
{
"trigger": "cl_crosshair_outlinethickness",
"contents": "cl_crosshair_outlinethickness \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Set how thick you want your crosshair outline to draw (0-3)0 Max: 3"
},
{
"trigger": "cl_crosshair_recoil",
"contents": "cl_crosshair_recoil \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "cl_crosshair_sniper_show_normal_inaccuracy",
"contents": "cl_crosshair_sniper_show_normal_inaccuracy \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Include standing inaccuracy when determining sniper crosshair blur "
},
{
"trigger": "cl_crosshair_sniper_width",
"contents": "cl_crosshair_sniper_width \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. If >1 sniper scope cross lines gain extra width (1 for single-pixel hairline) "
},
{
"trigger": "cl_crosshair_t",
"contents": "cl_crosshair_t \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. T style crosshair "
},
{
"trigger": "cl_crosshairalpha",
"contents": "cl_crosshairalpha \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 200. 0 Max: 255"
},
{
"trigger": "cl_crosshaircolor",
"contents": "cl_crosshaircolor \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 5. Set crosshair color as defined in game_options.consoles.txt "
},
{
"trigger": "cl_crosshaircolor_b",
"contents": "cl_crosshaircolor_b \"${1:value}\"",
"kind": "snippet",
"details": "0 Max: 255"
},
{
"trigger": "cl_crosshaircolor_g",
"contents": "cl_crosshaircolor_g \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 255. 0 Max: 255"
},
{
"trigger": "cl_crosshaircolor_r",
"contents": "cl_crosshaircolor_r \"${1:value}\"",
"kind": "snippet",
"details": "0 Max: 255"
},
{
"trigger": "cl_crosshairdot",
"contents": "cl_crosshairdot \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_crosshairgap",
"contents": "cl_crosshairgap \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -2.2"
},
{
"trigger": "cl_crosshairgap_useweaponvalue",
"contents": "cl_crosshairgap_useweaponvalue \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. If set to 1, the gap will update dynamically based on which weapon is currently equipped "
},
{
"trigger": "cl_crosshairsize",
"contents": "cl_crosshairsize \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3.9"
},
{
"trigger": "cl_crosshairstyle",
"contents": "cl_crosshairstyle \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2. 0 = DEFAULT (DISABLED), 1 = DEFAULT STATIC (DISABLED), 2 = DEFAULT (accurate recoil/spread feedback with a fixed inner part), 3 = ACCURATE DYNAMIC (DISABLED) (accurate recoil/spread feedback), 4 = DEFAULT STATIC, 5 = LEGACY (fake recoil - inaccurate feedback) "
},
{
"trigger": "cl_crosshairthickness",
"contents": "cl_crosshairthickness \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.6"
},
{
"trigger": "cl_crosshairusealpha",
"contents": "cl_crosshairusealpha \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "cl_csgo_shoot_debugvis_rdp_text_l",
"contents": "cl_csgo_shoot_debugvis_rdp_text_l \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 10"
},
{
"trigger": "cl_csgo_shoot_debugvis_rdp_text_x",
"contents": "cl_csgo_shoot_debugvis_rdp_text_x \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 45"
},
{
"trigger": "cl_csgo_shoot_debugvis_show_los",
"contents": "cl_csgo_shoot_debugvis_show_los \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Show line of last shot. "
},
{
"trigger": "cl_csgo_shoot_debugvis_show_rdp",
"contents": "cl_csgo_shoot_debugvis_show_rdp \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_csgo_shoot_trim_input_frames",
"contents": "cl_csgo_shoot_trim_input_frames \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "cl_cursor_scale",
"contents": "cl_cursor_scale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Cursor size scaling factor. "
},
{
"trigger": "cl_dangerzone_approaching_sound_radius",
"contents": "cl_dangerzone_approaching_sound_radius \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 700"
},
{
"trigger": "cl_dangerzone_moving_sound_volume",
"contents": "cl_dangerzone_moving_sound_volume \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.5"
},
{
"trigger": "cl_dangerzone_sound_volume",
"contents": "cl_dangerzone_sound_volume \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.2"
},
{
"trigger": "cl_death_anim_viewmodel_drop_rate",
"contents": "cl_death_anim_viewmodel_drop_rate \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 50"
},
{
"trigger": "cl_death_anim_viewmodel_pitch_rate",
"contents": "cl_death_anim_viewmodel_pitch_rate \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 60"
},
{
"trigger": "cl_deathcam_audio_mix_phase1_fade_amount",
"contents": "cl_deathcam_audio_mix_phase1_fade_amount \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.15. Sets the amount of ducking to do on death cam fade out. When set to 1, full DeathFadeLayer is applied. "
},
{
"trigger": "cl_deathcam_audio_mix_phase1_fade_time",
"contents": "cl_deathcam_audio_mix_phase1_fade_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2. Sets the amount of time we fade out over. "
},
{
"trigger": "cl_deathcam_audio_mix_phase2_fade_amount",
"contents": "cl_deathcam_audio_mix_phase2_fade_amount \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.5. Sets the amount of ducking to do on death cam fade out. When set to 1, full DeathFadeLayer is applied. "
},
{
"trigger": "cl_deathcam_audio_mix_phase2_fade_time",
"contents": "cl_deathcam_audio_mix_phase2_fade_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.4. Sets the amount of time we fade out over. "
},
{
"trigger": "cl_deathcampanel_position_dynamic",
"contents": "cl_deathcampanel_position_dynamic \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Turn on/off deathcam's kill panel dynamic Y movement "
},
{
"trigger": "cl_debounce_zoom",
"contents": "cl_debounce_zoom \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Whether or not to disable holding secondary fire to cycle zoom levels "
},
{
"trigger": "cl_debug_client_gamestats",
"contents": "cl_debug_client_gamestats \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "cl_debug_duck",
"contents": "cl_debug_duck \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2"
},
{
"trigger": "cl_debug_overlay_fullposition",
"contents": "cl_debug_overlay_fullposition \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_debug_overlays_broadcast",
"contents": "cl_debug_overlays_broadcast \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Render debug overlays from server. "
},
{
"trigger": "cl_debug_round_stat_submission",
"contents": "cl_debug_round_stat_submission \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_demo_steadycam_blendframes",
"contents": "cl_demo_steadycam_blendframes \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 5. blend over this many frames "
},
{
"trigger": "cl_demo_steadycam_deflection",
"contents": "cl_demo_steadycam_deflection \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 5. if camera orientation changes this much update orientation "
},
{
"trigger": "cl_demo_steadycam_enable",
"contents": "cl_demo_steadycam_enable \"${1:value}\"",
"kind": "snippet",
"details": "Stabilize camera orientation/position during demo playback. 1 == remove roll, 2 == steadycam "
},
{
"trigger": "cl_demo_steadycam_radius",
"contents": "cl_demo_steadycam_radius \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 16. if camera moves this much from last anchor update anchor "
},
{
"trigger": "cl_demo_view_offset_left",
"contents": "cl_demo_view_offset_left \"${1:value}\"",
"kind": "snippet",
"details": "View offset during demo playback (+/- 1.25 is a good default for human average left/right eye offset) "
},
{
"trigger": "cl_demoviewoverride",
"contents": "cl_demoviewoverride \"${1:value}\"",
"kind": "snippet",
"details": "Override view during demo playback "
},
{
"trigger": "cl_disable_deathcam_audio_mix_fade_out",
"contents": "cl_disable_deathcam_audio_mix_fade_out \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. When set to true, disables audio being silenced while the death cam fades out. "
},
{
"trigger": "cl_disable_ragdolls",
"contents": "cl_disable_ragdolls \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_disable_round_end_report",
"contents": "cl_disable_round_end_report \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_disconnect_soundevent",
"contents": "cl_disconnect_soundevent \"${1:value}\"",
"kind": "snippet",
"details": "This soundevent is called to stop the desired soundevents when the game is disconnected. "
},
{
"trigger": "cl_disconnect_voice_fade",
"contents": "cl_disconnect_voice_fade \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. This is a fade of current voices that is called when the game is disconnected. -1.f for no fade on disconnect "
},
{
"trigger": "cl_display_flashbang_values",
"contents": "cl_display_flashbang_values \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_display_game_events",
"contents": "cl_display_game_events \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_display_player_visibilty",
"contents": "cl_display_player_visibilty \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_dm_buyrandomweapons",
"contents": "cl_dm_buyrandomweapons \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Player will automatically receive a random weapon on spawn in deathmatch if this is set to 1 (otherwise, they will receive the last weapon) "
},
{
"trigger": "cl_dormant_spew",
"contents": "cl_dormant_spew \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Spew state on when client entities become dormant or active. "
},
{
"trigger": "cl_draw_only_deathnotices",
"contents": "cl_draw_only_deathnotices \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. For drawing only the crosshair and death notices (used for moviemaking) "
},
{
"trigger": "cl_draw_simulating_entities",
"contents": "cl_draw_simulating_entities \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_draw_simulating_entities_distance",
"contents": "cl_draw_simulating_entities_distance \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_drawhud",
"contents": "cl_drawhud \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Enable the rendering of the hud "
},
{
"trigger": "cl_drawhud_force_deathnotices",
"contents": "cl_drawhud_force_deathnotices \"${1:value}\"",
"kind": "snippet",
"details": "0: default; 1: draw deathnotices even if hud disabled; -1: force no deathnotices "
},
{
"trigger": "cl_drawhud_force_radar",
"contents": "cl_drawhud_force_radar \"${1:value}\"",
"kind": "snippet",
"details": "0: default; 1: draw radar even if hud disabled; -1: force no radar "
},
{
"trigger": "cl_drawhud_force_teamid_overhead",
"contents": "cl_drawhud_force_teamid_overhead \"${1:value}\"",
"kind": "snippet",
"details": "0: default; 1: draw teamid even if hud disabled; -1: force no teamid "
},
{
"trigger": "cl_drawhud_specvote",
"contents": "cl_drawhud_specvote \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. 1: default; 0: disables vote UI for spectators "
},
{
"trigger": "cl_embedded_stream_audio_volume",
"contents": "cl_embedded_stream_audio_volume \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 60. Embedded stream audio volume0 Max: 100"
},
{
"trigger": "cl_embedded_stream_audio_volume_xmaster",
"contents": "cl_embedded_stream_audio_volume_xmaster \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Whether embedded stream audio volume gets multiplied by master volume "
},
{
"trigger": "cl_embedded_stream_video_playing",
"contents": "cl_embedded_stream_video_playing \"${1:value}\"",
"kind": "snippet",
"details": "Embedded stream video playing state "
},
{
"trigger": "cl_enable_eye_occlusion",
"contents": "cl_enable_eye_occlusion \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "cl_ent_joint_axis_size",
"contents": "cl_ent_joint_axis_size \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 4"
},
{
"trigger": "cl_ent_joint_filter_substring",
"contents": "cl_ent_joint_filter_substring \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cl_ent_joint_names",
"contents": "cl_ent_joint_names \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "cl_ent_joint_only_ik_joints",
"contents": "cl_ent_joint_only_ik_joints \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_ent_joint_use_bind_pose",
"contents": "cl_ent_joint_use_bind_pose \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_ent_pivot_size",
"contents": "cl_ent_pivot_size \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 20"
},
{
"trigger": "cl_ent_show_contexts",
"contents": "cl_ent_show_contexts \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Show entity contexts in ent_text display "
},
{
"trigger": "cl_ent_showonlyattachment",
"contents": "cl_ent_showonlyattachment \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cl_ent_showonlyhitbox",
"contents": "cl_ent_showonlyhitbox \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "cl_ent_skeleton_only_ik_joints",
"contents": "cl_ent_skeleton_only_ik_joints \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_ent_text_flags_active",
"contents": "cl_ent_text_flags_active \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "cl_ent_text_no_name_really_i_mean_it",
"contents": "cl_ent_text_no_name_really_i_mean_it \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_error_report_time",
"contents": "cl_error_report_time \"${1:value}\"",
"kind": "snippet",
"details": "Minimum time in seconds that must elapse before printing prediction error summary. 0 to disable. "
},
{
"trigger": "cl_extrapolate",
"contents": "cl_extrapolate \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Enable/disable extrapolation if interpolation history runs out. "
},
{
"trigger": "cl_extrapolate_amount",
"contents": "cl_extrapolate_amount \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.25. Set how many seconds the client will extrapolate entities for. "
},
{
"trigger": "cl_eye_occlusion_debug",
"contents": "cl_eye_occlusion_debug \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_eye_sin_wave",
"contents": "cl_eye_sin_wave \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_eye_target_override",
"contents": "cl_eye_target_override \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cl_eye_yaw_multiplier",
"contents": "cl_eye_yaw_multiplier \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "cl_fake_timeout",
"contents": "cl_fake_timeout \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_fasttempentcollision",
"contents": "cl_fasttempentcollision \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 5"
},
{
"trigger": "cl_firstperson_legs",
"contents": "cl_firstperson_legs \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "cl_fixedcrosshairgap",
"contents": "cl_fixedcrosshairgap \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3. For crosshair style 1: How big to make the gap between the pips in the fixed crosshair "
},
{
"trigger": "cl_flushentitypacket",
"contents": "cl_flushentitypacket \"${1:value}\"",
"kind": "snippet",
"details": "For debugging. Force the engine to flush an entity packet. "
},
{
"trigger": "cl_globallight_debug",
"contents": "cl_globallight_debug \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_globallight_depth_bias",
"contents": "cl_globallight_depth_bias \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -999"
},
{
"trigger": "cl_globallight_expansion",
"contents": "cl_globallight_expansion \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 200"
},
{
"trigger": "cl_globallight_freeze",
"contents": "cl_globallight_freeze \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_globallight_orig_calc_frustum",
"contents": "cl_globallight_orig_calc_frustum \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "cl_globallight_shadow_mode",
"contents": "cl_globallight_shadow_mode \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2"
},
{
"trigger": "cl_globallight_slope_scale_depth_bias",
"contents": "cl_globallight_slope_scale_depth_bias \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -999"
},
{
"trigger": "cl_globallight_use_alt_focus_region",
"contents": "cl_globallight_use_alt_focus_region \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_globallight_use_optimized_calc_frustum",
"contents": "cl_globallight_use_optimized_calc_frustum \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "cl_globallight_use_shaadow_near_offset",
"contents": "cl_globallight_use_shaadow_near_offset \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "cl_globallight_world_bottom_height",
"contents": "cl_globallight_world_bottom_height \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cl_globallight_world_top_height",
"contents": "cl_globallight_world_top_height \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 4096"
},
{
"trigger": "cl_glow_brightness",
"contents": "cl_glow_brightness \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Brightness of player halos "
},
{
"trigger": "cl_glow_item_far_b",
"contents": "cl_glow_item_far_b \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "cl_glow_item_far_g",
"contents": "cl_glow_item_far_g \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.4"
},
{
"trigger": "cl_glow_item_far_r",
"contents": "cl_glow_item_far_r \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.3"
},
{
"trigger": "cl_gunlowerangle",
"contents": "cl_gunlowerangle \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2"
},
{
"trigger": "cl_gunlowerspeed",
"contents": "cl_gunlowerspeed \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.1"
},
{
"trigger": "cl_hide_avatar_images",
"contents": "cl_hide_avatar_images \"${1:value}\"",
"kind": "snippet",
"details": "Hide avatar images for other players. 0 - Off. 1 - Block All 2 - Block all but friends "
},
{
"trigger": "cl_hitbox_debug",
"contents": "cl_hitbox_debug \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_hold_game_events_force_delay_ticks",
"contents": "cl_hold_game_events_force_delay_ticks \"${1:value}\"",
"kind": "snippet",
"details": "Debugging convar to force late dispatch of game events. "
},
{
"trigger": "cl_hold_game_events_until_server_tick",
"contents": "cl_hold_game_events_until_server_tick \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Holds game events until client has received the tick the event was fired on. "
},
{
"trigger": "cl_http_log_enable",
"contents": "cl_http_log_enable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Allows sending HTTP log from client main menu. "
},
{
"trigger": "cl_hud_color",
"contents": "cl_hud_color \"${1:value}\"",
"kind": "snippet",
"details": "0 = team color, 1 = white, 2 = bright white, 3 = light blue, 4 = blue, 5 = purple, 6 = red, 7 = orange, 8 = yellow, 9 = green, 10 = aqua, 11 = pink. "
},
{
"trigger": "cl_hud_radar_scale",
"contents": "cl_hud_radar_scale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Min: 0.8 Max: 1.3"
},
{
"trigger": "cl_ignore_campaign_completion_requirements",
"contents": "cl_ignore_campaign_completion_requirements \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Ignores campaign progression requirements when granting quests. "
},
{
"trigger": "cl_ignorepackets",
"contents": "cl_ignorepackets \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Force client to ignore packets (for debugging). "
},
{
"trigger": "cl_import_csgo_config",
"contents": "cl_import_csgo_config \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "cl_instant_death_anim",
"contents": "cl_instant_death_anim \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_interp_all",
"contents": "cl_interp_all \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Disable interpolation list optimizations. "
},
{
"trigger": "cl_interp_animationvars",
"contents": "cl_interp_animationvars \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Interpolate LATCH_ANIMATION_BIT vars if interpolation interval is greater than simulation interval "
},
{
"trigger": "cl_interp_hermite",
"contents": "cl_interp_hermite \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Set to zero do disable hermite interpolation. "
},
{
"trigger": "cl_interp_npcs",
"contents": "cl_interp_npcs \"${1:value}\"",
"kind": "snippet",
"details": "Interpolate NPC positions starting this many seconds in past (or cl_interp, if greater) "
},
{
"trigger": "cl_interp_simulationvars",
"contents": "cl_interp_simulationvars \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Interpolate LATCH_SIMULATION_BIT vars if interpolation interval is greater than animation interval "
},
{
"trigger": "cl_interp_threadmodeticks",
"contents": "cl_interp_threadmodeticks \"${1:value}\"",
"kind": "snippet",
"details": "Additional interpolation ticks to use when interpolating with threaded engine mode set. "
},
{
"trigger": "cl_interpolate",
"contents": "cl_interpolate \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Interpolate entities on the client. "
},
{
"trigger": "cl_interpolate_report",
"contents": "cl_interpolate_report \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Enable to show interpolation profile timing "
},
{
"trigger": "cl_inventory_debug_tooltip",
"contents": "cl_inventory_debug_tooltip \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_inventory_radial_immediate_select",
"contents": "cl_inventory_radial_immediate_select \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. In inventory selection radials. Select weapons the moment the cursor highlights them. Otherwise, only select the selected item on exit. "
},
{
"trigger": "cl_inventory_radial_tap_to_cycle",
"contents": "cl_inventory_radial_tap_to_cycle \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. In inventory selection radials. Select weapons the moment the cursor highlights them. Otherwise, only select the selected item on exit. "
},
{
"trigger": "cl_inventory_saved_filter2",
"contents": "cl_inventory_saved_filter2 \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cl_inventory_saved_sort2",
"contents": "cl_inventory_saved_sort2 \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cl_invites_only_friends",
"contents": "cl_invites_only_friends \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. If turned on, will ignore in-game invites from recent teammates or other non-friends "
},
{
"trigger": "cl_invites_only_mainmenu",
"contents": "cl_invites_only_mainmenu \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. If turned on, will ignore all invites when user is playing a match "
},
{
"trigger": "cl_itemimages_dynamically_generated",
"contents": "cl_itemimages_dynamically_generated \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2. 2: use render-targets, fallback to cache and disk; 1: no render targets, but use cache and fallback to disk; 0: disk assets only "
},
{
"trigger": "cl_jiggle_bone_debug",
"contents": "cl_jiggle_bone_debug \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Display physics-based 'jiggle bone' debugging information "
},
{
"trigger": "cl_jiggle_bone_debug_pitch_constraints",
"contents": "cl_jiggle_bone_debug_pitch_constraints \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Display physics-based 'jiggle bone' debugging information "
},
{
"trigger": "cl_jiggle_bone_debug_yaw_constraints",
"contents": "cl_jiggle_bone_debug_yaw_constraints \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Display physics-based 'jiggle bone' debugging information "
},
{
"trigger": "cl_jiggle_bone_invert",
"contents": "cl_jiggle_bone_invert \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_jiggle_bone_sanity",
"contents": "cl_jiggle_bone_sanity \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Prevent jiggle bones from pointing directly away from their target in case of numerical instability. "
},
{
"trigger": "cl_join_advertise",
"contents": "cl_join_advertise \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Advertise joinable game in progress to Steam friends, otherwise need a Steam invite (2: all servers, 1: official servers, 0: none) "
},
{
"trigger": "cl_lagcompensation",
"contents": "cl_lagcompensation \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Perform server side lag compensation of weapon firing events. "
},
{
"trigger": "cl_lagcompensation_test_auto_target",
"contents": "cl_lagcompensation_test_auto_target \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Auto-pick value of cl_lagcompensation_test_target. "
},
{
"trigger": "cl_lagcompensation_test_target",
"contents": "cl_lagcompensation_test_target \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. Player whose head is tracked to test lag compensation. "
},
{
"trigger": "cl_language",
"contents": "cl_language \"${1:value}\"",
"kind": "snippet",
"details": "Language "
},
{
"trigger": "cl_latch_report",
"contents": "cl_latch_report \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Enable to output stats about latching "
},
{
"trigger": "cl_leveloverview",
"contents": "cl_leveloverview \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cl_lightquery_debug",
"contents": "cl_lightquery_debug \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_loadout_saved_sort",
"contents": "cl_loadout_saved_sort \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cl_lock_camera",
"contents": "cl_lock_camera \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_log_tick",
"contents": "cl_log_tick \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Log when a tick is received "
},
{
"trigger": "cl_log_tick_skips",
"contents": "cl_log_tick_skips \"${1:value}\"",
"kind": "snippet",
"details": "Log when the tick delta >= this "
},
{
"trigger": "cl_mantle_gunloweramt",
"contents": "cl_mantle_gunloweramt \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 20"
},
{
"trigger": "cl_mantle_gunlowerspeed",
"contents": "cl_mantle_gunlowerspeed \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1.4"
},
{
"trigger": "cl_map_preview_debug_jitter",
"contents": "cl_map_preview_debug_jitter \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_massreport",
"contents": "cl_massreport \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_matchlist_controlroom_aid",
"contents": "cl_matchlist_controlroom_aid \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cl_min_china_movie_time",
"contents": "cl_min_china_movie_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 6"
},
{
"trigger": "cl_min_ct",
"contents": "cl_min_ct \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Controls which CT model is used when cl_minmodels is set to 1. "
},
{
"trigger": "cl_min_movie_time",
"contents": "cl_min_movie_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 4"
},
{
"trigger": "cl_min_t",
"contents": "cl_min_t \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Controls which Terrorist model is used when cl_minmodels is set to 1. "
},
{
"trigger": "cl_minmodels",
"contents": "cl_minmodels \"${1:value}\"",
"kind": "snippet",
"details": "Uses one player model for each team. Set this value to -1 to allow unapproved / in progress player models to be used. "
},
{
"trigger": "cl_mouselook",
"contents": "cl_mouselook \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Set to 1 to use mouse for look, 0 for keyboard look. Cannot be set while connected to a server. "
},
{
"trigger": "cl_mute_all_but_friends_and_party",
"contents": "cl_mute_all_but_friends_and_party \"${1:value}\"",
"kind": "snippet",
"details": "Only allow communication from friends and matchmaking party members. Set to 1 to apply the in non-competitive game modes. Set to 2 will apply the setting in all modes. "
},
{
"trigger": "cl_mute_enemy_team",
"contents": "cl_mute_enemy_team \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Block all communication from players on the enemy team. "
},
{
"trigger": "cl_mute_player_after_reporting_abuse",
"contents": "cl_mute_player_after_reporting_abuse \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Mute players reported for abuse automatically. "
},
{
"trigger": "cl_names_debug",
"contents": "cl_names_debug \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_net_showeventlisteners",
"contents": "cl_net_showeventlisteners \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Show listening addition/removals "
},
{
"trigger": "cl_net_showevents",
"contents": "cl_net_showevents \"${1:value}\"",
"kind": "snippet",
"details": "Dump game events to console (1=client only, 2=all). "
},
{
"trigger": "cl_new_user_phase",
"contents": "cl_new_user_phase \"${1:value}\"",
"kind": "snippet",
"details": "0: Not Started, 1: Needs Training, 2: Training Complete, -1: Disabled "
},
{
"trigger": "cl_obs_interp_angle_progress_headstart",
"contents": "cl_obs_interp_angle_progress_headstart \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.025"
},
{
"trigger": "cl_obs_interp_dist_to_turn_to_face",
"contents": "cl_obs_interp_dist_to_turn_to_face \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 500. Changing to a target further than this will cause the camera to face the direction of travel "
},
{
"trigger": "cl_obs_interp_enable",
"contents": "cl_obs_interp_enable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Enables interpolation between observer targets "
},
{
"trigger": "cl_obs_interp_obstruction_behavior",
"contents": "cl_obs_interp_obstruction_behavior \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2"
},
{
"trigger": "cl_obs_interp_pos_halflife",
"contents": "cl_obs_interp_pos_halflife \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.26"
},
{
"trigger": "cl_obs_interp_pos_rate",
"contents": "cl_obs_interp_pos_rate \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.27"
},
{
"trigger": "cl_obs_interp_settle_dist",
"contents": "cl_obs_interp_settle_dist \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 16"
},
{
"trigger": "cl_obs_interp_snap_dist",
"contents": "cl_obs_interp_snap_dist \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.01"
},
{
"trigger": "cl_obs_interp_turn_to_face_end_frac",
"contents": "cl_obs_interp_turn_to_face_end_frac \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.65"
},
{
"trigger": "cl_obs_interp_turn_to_face_start_frac",
"contents": "cl_obs_interp_turn_to_face_start_frac \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.1"
},
{
"trigger": "cl_observed_bot_crosshair",
"contents": "cl_observed_bot_crosshair \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2. Control the crosshair shown when observing a bot. 0: Show player crosshair. 1: Show player crosshair only when bot can be taken over, otherwise show default.. 2: Always show default crosshair for bots. "
},
{
"trigger": "cl_paintkit_override",
"contents": "cl_paintkit_override \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cl_panel_freeze_time_after_press",
"contents": "cl_panel_freeze_time_after_press \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.5. time to freeze mouse/pointer motion after a mouse button press "
},
{
"trigger": "cl_parallel_readpacketentities",
"contents": "cl_parallel_readpacketentities \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Set to 1 to use threading snapshot reading (if game supports and server is sending bitcounts). "
},
{
"trigger": "cl_parallel_readpacketentities_threshold",
"contents": "cl_parallel_readpacketentities_threshold \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 8. Use parallel processing of snapshot reading if above this many entries. "
},
{
"trigger": "cl_parallel_readpacketentities_type",
"contents": "cl_parallel_readpacketentities_type \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. -1 = use default (parallel controller split) 0 = single threaded combined (i.e., ReadFieldList and Decode combined into one call) 1 = single threaded split (first pass ReadFieldList, second pass Decode) 2 = worker thread for decode (main thread does ReadFieldList, worker thread does Decode) 3 = parallel combined (threadpool does read/decode on work items in parallel) 4 = parallel split 5 = parallel controller combined (like parallel, but uses a parallelcontroller so each thread in pool can share a single SerializedEntity 6 = parallel controller split Min: -1 Max: 6"
},
{
"trigger": "cl_particle_batch_mode",
"contents": "cl_particle_batch_mode \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "cl_particle_fallback_base",
"contents": "cl_particle_fallback_base \"${1:value}\"",
"kind": "snippet",
"details": "Base for falling back to cheaper effects under load. "
},
{
"trigger": "cl_particle_fallback_multiplier",
"contents": "cl_particle_fallback_multiplier \"${1:value}\"",
"kind": "snippet",
"details": "Multiplier for falling back to cheaper effects under load. "
},
{
"trigger": "cl_particle_log_creates",
"contents": "cl_particle_log_creates \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Print debug message every time a particle collection is created "
},
{
"trigger": "cl_particle_max_count",
"contents": "cl_particle_max_count \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cl_particle_retire_cost",
"contents": "cl_particle_retire_cost \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cl_particle_sim_fallback_base_multiplier",
"contents": "cl_particle_sim_fallback_base_multiplier \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 5. How aggressive the switch to fallbacks will be depending on how far over the cl_particle_sim_fallback_threshold_ms the sim time is. Higher numbers are more aggressive. "
},
{
"trigger": "cl_particle_sim_fallback_threshold_ms",
"contents": "cl_particle_sim_fallback_threshold_ms \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 6. Amount of simulation time that can elapse before new systems start falling back to cheaper versions "
},
{
"trigger": "cl_particle_simulate",
"contents": "cl_particle_simulate \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Enables/Disables Particle Simulation "
},
{
"trigger": "cl_pclass",
"contents": "cl_pclass \"${1:value}\"",
"kind": "snippet",
"details": "Dump entity by prediction classname. "
},
{
"trigger": "cl_pdump",
"contents": "cl_pdump \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. Dump info about this entity to screen. "
},
{
"trigger": "cl_phys_animated_hierarchy",
"contents": "cl_phys_animated_hierarchy \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "cl_phys_block_dist",
"contents": "cl_phys_block_dist \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "cl_phys_block_fraction",
"contents": "cl_phys_block_fraction \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.1"
},
{
"trigger": "cl_phys_debug_callback_entities",
"contents": "cl_phys_debug_callback_entities \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Print all entities that get touch callbacks. Each entity is printed only once. "
},
{
"trigger": "cl_phys_enabled",
"contents": "cl_phys_enabled \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Enable all physics simulation "
},
{
"trigger": "cl_phys_networked_start_sleep",
"contents": "cl_phys_networked_start_sleep \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_phys_sleep_enable",
"contents": "cl_phys_sleep_enable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Enable sleeping for dynamic physics bodies. "
},
{
"trigger": "cl_phys_stop_at_collision",
"contents": "cl_phys_stop_at_collision \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cl_phys_timescale",
"contents": "cl_phys_timescale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Scale time for physics "
},
{
"trigger": "cl_phys_visualize_awake",
"contents": "cl_phys_visualize_awake \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_ping_fade_deadzone",
"contents": "cl_ping_fade_deadzone \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 60. Distance from the crosshair over which the ping is completely invisible "
},
{
"trigger": "cl_ping_fade_distance",
"contents": "cl_ping_fade_distance \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 300. Distance from the crosshair over which the ping fades "
},
{
"trigger": "cl_pitchdown",
"contents": "cl_pitchdown \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 89"
},
{
"trigger": "cl_pitchspeed",
"contents": "cl_pitchspeed \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 225"
},
{
"trigger": "cl_pitchup",
"contents": "cl_pitchup \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 89"
},
{
"trigger": "cl_playback_screenshots",
"contents": "cl_playback_screenshots \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Allows the client to playback screenshot and jpeg commands in demos. "
},
{
"trigger": "cl_player_lighting_origin_offset",
"contents": "cl_player_lighting_origin_offset \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 32"
},
{
"trigger": "cl_player_ping_mute",
"contents": "cl_player_ping_mute \"${1:value}\"",
"kind": "snippet",
"details": "If 1, player pinging will make a sound, if 0, pings will be silent "
},
{
"trigger": "cl_player_proximity_debug",
"contents": "cl_player_proximity_debug \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_player_ragdolls_collide",
"contents": "cl_player_ragdolls_collide \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_player_visibility_far",
"contents": "cl_player_visibility_far \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 700. distance at which proxy scale is maximized "
},
{
"trigger": "cl_player_visibility_far_scale",
"contents": "cl_player_visibility_far_scale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1.3. proxy scale multiplier at max dist (is 1.0 at mindist) "
},
{
"trigger": "cl_player_visibility_near",
"contents": "cl_player_visibility_near \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 200. cull characters nearer than this "
},
{
"trigger": "cl_player_visibility_stencil_bloat_amount_box",
"contents": "cl_player_visibility_stencil_bloat_amount_box \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2.5"
},
{
"trigger": "cl_player_visibility_stencil_bloat_amount_ellipsoid",
"contents": "cl_player_visibility_stencil_bloat_amount_ellipsoid \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1.3"
},
{
"trigger": "cl_player_visibility_stencil_proxy_min_dist_box",
"contents": "cl_player_visibility_stencil_proxy_min_dist_box \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "cl_player_visibility_stencil_proxy_type",
"contents": "cl_player_visibility_stencil_proxy_type \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. 0 - box, 1 - dodecahedron "
},
{
"trigger": "cl_player_visiblity_show_stencil_proxy",
"contents": "cl_player_visiblity_show_stencil_proxy \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_player_visiblity_stencil_proxy_min_dist",
"contents": "cl_player_visiblity_stencil_proxy_min_dist \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3"
},
{
"trigger": "cl_playerspray_auto_apply",
"contents": "cl_playerspray_auto_apply \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Automatically apply graffiti when graffiti menu closes "
},
{
"trigger": "cl_playerspraydisable",
"contents": "cl_playerspraydisable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Disable player sprays. "
},
{
"trigger": "cl_pred_build_verbose",
"contents": "cl_pred_build_verbose \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Verbose spew when building prediction optimized data runs. "
},
{
"trigger": "cl_pred_checkstuck",
"contents": "cl_pred_checkstuck \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Perform the additional 'stuck' traces on the client side during prediction. "
},
{
"trigger": "cl_pred_optimize",
"contents": "cl_pred_optimize \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2. Optimize for not copying data if didn't receive a network update (1), and also for not repredicting if there were no errors (2). "
},
{
"trigger": "cl_pred_parallel_postnetwork",
"contents": "cl_pred_parallel_postnetwork \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "cl_predict",
"contents": "cl_predict \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Perform client side prediction. "
},
{
"trigger": "cl_predict_after_every_createmove",
"contents": "cl_predict_after_every_createmove \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. run prediction after every CreateMove instead of only after CreateMove for the final tick in a frame. "
},
{
"trigger": "cl_predict_bomb_defusal",
"contents": "cl_predict_bomb_defusal \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "cl_predict_weapon_drop",
"contents": "cl_predict_weapon_drop \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "cl_predictioncopy_runs",
"contents": "cl_predictioncopy_runs \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "cl_predictweapons",
"contents": "cl_predictweapons \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Perform client side prediction of weapon effects. "
},
{
"trigger": "cl_profilereadpacketentities",
"contents": "cl_profilereadpacketentities \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_promoted_settings_acknowledged",
"contents": "cl_promoted_settings_acknowledged \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cl_quickinventory_filename",
"contents": "cl_quickinventory_filename \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cl_quickinventory_lastinv",
"contents": "cl_quickinventory_lastinv \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "cl_quickinventory_line_update_speed",
"contents": "cl_quickinventory_line_update_speed \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 65"
},
{
"trigger": "cl_radar_always_centered",
"contents": "cl_radar_always_centered \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. If set to 0, the radar is maximally used. Otherwise the player is always centered, even at map extents. "
},
{
"trigger": "cl_radar_fast_transforms",
"contents": "cl_radar_fast_transforms \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Faster way of placing icons on the mini map. "
},
{
"trigger": "cl_radar_icon_scale_min",
"contents": "cl_radar_icon_scale_min \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.6. Sets the minimum icon scale. Valid values are 0.4 to 1.25.Min: 0.4 Max: 1.25"
},
{
"trigger": "cl_radar_rotate",
"contents": "cl_radar_rotate \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. 1 "
},
{
"trigger": "cl_radar_scale",
"contents": "cl_radar_scale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.7. Sets the radar scale. Valid values are 0.25 to 1.0.Min: 0.25 Max: 1"
},
{
"trigger": "cl_radar_square_with_scoreboard",
"contents": "cl_radar_square_with_scoreboard \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. If set, the radar will toggle to square when the scoreboard is visible. "
},
{
"trigger": "cl_radial_coyote_time",
"contents": "cl_radial_coyote_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.15. Selection lenience: How long in seconds the last selected radial segment is used if no segment is selected. "
},
{
"trigger": "cl_radial_menu_icon_radius",
"contents": "cl_radial_menu_icon_radius \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 200"
},
{
"trigger": "cl_radial_menu_tap_duration",
"contents": "cl_radial_menu_tap_duration \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.2. If nothing in a radial menu is selected, and the button engaging the radial menu is released within this duration, fallback on the radial's tap functionality "
},
{
"trigger": "cl_radial_radio_tab",
"contents": "cl_radial_radio_tab \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cl_radial_radio_tab_0_text_1",
"contents": "cl_radial_radio_tab_0_text_1 \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cl_radial_radio_tab_0_text_2",
"contents": "cl_radial_radio_tab_0_text_2 \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cl_radial_radio_tab_0_text_3",
"contents": "cl_radial_radio_tab_0_text_3 \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cl_radial_radio_tab_0_text_4",
"contents": "cl_radial_radio_tab_0_text_4 \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cl_radial_radio_tab_0_text_5",
"contents": "cl_radial_radio_tab_0_text_5 \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cl_radial_radio_tab_0_text_6",
"contents": "cl_radial_radio_tab_0_text_6 \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cl_radial_radio_tab_0_text_7",
"contents": "cl_radial_radio_tab_0_text_7 \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cl_radial_radio_tab_0_text_8",
"contents": "cl_radial_radio_tab_0_text_8 \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cl_radial_radio_tab_1_text_1",
"contents": "cl_radial_radio_tab_1_text_1 \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cl_radial_radio_tab_1_text_2",
"contents": "cl_radial_radio_tab_1_text_2 \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cl_radial_radio_tab_1_text_3",
"contents": "cl_radial_radio_tab_1_text_3 \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cl_radial_radio_tab_1_text_4",
"contents": "cl_radial_radio_tab_1_text_4 \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cl_radial_radio_tab_1_text_5",
"contents": "cl_radial_radio_tab_1_text_5 \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cl_radial_radio_tab_1_text_6",
"contents": "cl_radial_radio_tab_1_text_6 \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cl_radial_radio_tab_1_text_7",
"contents": "cl_radial_radio_tab_1_text_7 \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cl_radial_radio_tab_1_text_8",
"contents": "cl_radial_radio_tab_1_text_8 \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cl_radial_radio_tab_2_text_1",
"contents": "cl_radial_radio_tab_2_text_1 \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cl_radial_radio_tab_2_text_2",
"contents": "cl_radial_radio_tab_2_text_2 \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cl_radial_radio_tab_2_text_3",
"contents": "cl_radial_radio_tab_2_text_3 \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cl_radial_radio_tab_2_text_4",
"contents": "cl_radial_radio_tab_2_text_4 \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cl_radial_radio_tab_2_text_5",
"contents": "cl_radial_radio_tab_2_text_5 \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cl_radial_radio_tab_2_text_6",
"contents": "cl_radial_radio_tab_2_text_6 \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cl_radial_radio_tab_2_text_7",
"contents": "cl_radial_radio_tab_2_text_7 \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cl_radial_radio_tab_2_text_8",
"contents": "cl_radial_radio_tab_2_text_8 \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cl_radial_radio_tap_to_ping",
"contents": "cl_radial_radio_tap_to_ping \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. When tapping the radial radio button, leave a ping if nothing is selected within the time in seconds set in cl_radial_menu_tap_duration "
},
{
"trigger": "cl_radial_radio_version_reset",
"contents": "cl_radial_radio_version_reset \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2"
},
{
"trigger": "cl_radialmenu_deadzone_size",
"contents": "cl_radialmenu_deadzone_size \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.4. 0 Max: 1"
},
{
"trigger": "cl_radialmenu_deadzone_size_joystick",
"contents": "cl_radialmenu_deadzone_size_joystick \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.17. 0 Max: 1"
},
{
"trigger": "cl_ragdoll_default_scale",
"contents": "cl_ragdoll_default_scale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "cl_ragdoll_limit",
"contents": "cl_ragdoll_limit \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 20. Maximum number of ragdolls to show (-1 disables limit) "
},
{
"trigger": "cl_ragdoll_lru_debug",
"contents": "cl_ragdoll_lru_debug \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_ragdoll_physics_enable",
"contents": "cl_ragdoll_physics_enable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Enable/disable ragdoll physics. "
},
{
"trigger": "cl_ragdoll_reload",
"contents": "cl_ragdoll_reload \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_ragdoll_workaround_threshold",
"contents": "cl_ragdoll_workaround_threshold \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 4. Mainly cosmetic, client-only effect: when client doesn't know the last position of another player that spawns a ragdoll, the ragdoll creation is simplified and ragdoll is created in the right place. If you increase this significantly, ragdoll positions on your client may be dramatically wrong, but it won't affect other clients "
},
{
"trigger": "cl_random_taser_bone_y",
"contents": "cl_random_taser_bone_y \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. The Y position used for the random taser force. "
},
{
"trigger": "cl_random_taser_force_y",
"contents": "cl_random_taser_force_y \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. The Y position used for the random taser force. "
},
{
"trigger": "cl_random_taser_power",
"contents": "cl_random_taser_power \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 4000. Power used when applying the taser effect. "
},
{
"trigger": "cl_rebuy",
"contents": "cl_rebuy \"${1:value}\"",
"kind": "snippet",
"details": "The order in which rebuy will attempt to repurchase items "
},
{
"trigger": "cl_redemption_reset_timestamp",
"contents": "cl_redemption_reset_timestamp \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cl_resend",
"contents": "cl_resend \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.5. Delay in seconds before the client will resend the 'connect' attemptMin: 0.1 Max: 2"
},
{
"trigger": "cl_retire_low_priority_lights",
"contents": "cl_retire_low_priority_lights \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Low priority dlights are replaced by high priority ones "
},
{
"trigger": "cl_sanitize_muted_players",
"contents": "cl_sanitize_muted_players \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Hide names and avatars of muted players. "
},
{
"trigger": "cl_sanitize_player_names",
"contents": "cl_sanitize_player_names \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Replace names of other players with something non-offensive. "
},
{
"trigger": "cl_sceneentity_debug",
"contents": "cl_sceneentity_debug \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Display all thinking scene entities and its data. "
},
{
"trigger": "cl_scoreboard_mouse_enable_binding",
"contents": "cl_scoreboard_mouse_enable_binding \"${1:value}\"",
"kind": "snippet",
"details": "Name of the binding to enable mouse selection in the scoreboard "
},
{
"trigger": "cl_scoreboard_survivors_always_on",
"contents": "cl_scoreboard_survivors_always_on \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_scoreboard_toggle_enable",
"contents": "cl_scoreboard_toggle_enable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_screenmessage_notifytime",
"contents": "cl_screenmessage_notifytime \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 8. How long to display screen message text "
},
{
"trigger": "cl_script_attach_debugger_at_startup",
"contents": "cl_script_attach_debugger_at_startup \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_script_break_in_native_debugger_on_error",
"contents": "cl_script_break_in_native_debugger_on_error \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_search_key_token",
"contents": "cl_search_key_token \"${1:value}\"",
"kind": "snippet",
"details": "Development search key token. "
},
{
"trigger": "cl_sendtable_cache_filename",
"contents": "cl_sendtable_cache_filename \"${1:value}\"",
"kind": "snippet",
"details": "Send tables cache file "
},
{
"trigger": "cl_sequence_debug",
"contents": "cl_sequence_debug \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "cl_sequence_debug2",
"contents": "cl_sequence_debug2 \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "cl_sequence_model_substring",
"contents": "cl_sequence_model_substring \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cl_server_graphic1_enable",
"contents": "cl_server_graphic1_enable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. When enabled, 360x60 (<16kb) image file will be displayed to on-server spectators. "
},
{
"trigger": "cl_server_graphic2_enable",
"contents": "cl_server_graphic2_enable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. When enabled, 220x45 (<16kb) image file will be displayed to on-server spectators. "
},
{
"trigger": "cl_session",
"contents": "cl_session \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cl_show_camera_position",
"contents": "cl_show_camera_position \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_show_clan_in_death_notice",
"contents": "cl_show_clan_in_death_notice \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Is set, the clan name will show next to player names in the death notices. "
},
{
"trigger": "cl_show_enemy_avatar_colors",
"contents": "cl_show_enemy_avatar_colors \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "cl_show_equipment_value",
"contents": "cl_show_equipment_value \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_show_equipped_character_for_player_avatars",
"contents": "cl_show_equipped_character_for_player_avatars \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_show_head_trajectory",
"contents": "cl_show_head_trajectory \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cl_show_matchmaking_stat_spew",
"contents": "cl_show_matchmaking_stat_spew \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_show_observer_crosshair",
"contents": "cl_show_observer_crosshair \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2. Show the crosshair of the player being observed. 0: off 1: friends and party 2: everyone "
},
{
"trigger": "cl_show_playernames_max_chars_console",
"contents": "cl_show_playernames_max_chars_console \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Shows all player names (including bots) as 16 W's. "
},
{
"trigger": "cl_show_quest_info",
"contents": "cl_show_quest_info \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_show_splashes",
"contents": "cl_show_splashes \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "cl_ShowBoneSetupEnts",
"contents": "cl_ShowBoneSetupEnts \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Show which entities are having their bones setup each frame. "
},
{
"trigger": "cl_showdemooverlay",
"contents": "cl_showdemooverlay \"${1:value}\"",
"kind": "snippet",
"details": "How often to flash demo recording/playback overlay (0 - disable overlay, -1 - show always) "
},
{
"trigger": "cl_showerror",
"contents": "cl_showerror \"${1:value}\"",
"kind": "snippet",
"details": "Show prediction errors, 2 for above plus detailed field deltas, 3 to filter out serverside known prediction errors, -entindex for specific entity. "
},
{
"trigger": "cl_showfps",
"contents": "cl_showfps \"${1:value}\"",
"kind": "snippet",
"details": "Draw fps meter at top of screen (1 = fps, 2 = smooth fps, 3 = server MS, 4 = Show FPS and Log to file ) "
},
{
"trigger": "cl_showloadout",
"contents": "cl_showloadout \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Toggles display of current loadout. "
},
{
"trigger": "cl_showmem",
"contents": "cl_showmem \"${1:value}\"",
"kind": "snippet",
"details": "Draw approximate memory use at top of screen "
},
{
"trigger": "cl_showpos",
"contents": "cl_showpos \"${1:value}\"",
"kind": "snippet",
"details": "Draw current position at top of screen "
},
{
"trigger": "cl_showtextmsg",
"contents": "cl_showtextmsg \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Enable/disable text messages printing on the screen. "
},
{
"trigger": "cl_showusercmd",
"contents": "cl_showusercmd \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Show user command encoding "
},
{
"trigger": "cl_silencer_mode",
"contents": "cl_silencer_mode \"${1:value}\"",
"kind": "snippet",
"details": "0: cannot detach; 1: press secondary fire to detach "
},
{
"trigger": "cl_simulate_dormant_entities",
"contents": "cl_simulate_dormant_entities \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "cl_skel_constraints_enable",
"contents": "cl_skel_constraints_enable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "cl_skeleton_instance_smear_boneflags",
"contents": "cl_skeleton_instance_smear_boneflags \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Smear boneflags across the model. Costs computation, but tests to make sure your bone flags are consistent. "
},
{
"trigger": "cl_skip_update_animations",
"contents": "cl_skip_update_animations \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Enable to skip game animations "
},
{
"trigger": "cl_smoke_edge_feather",
"contents": "cl_smoke_edge_feather \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 21"
},
{
"trigger": "cl_smoke_lower_speed",
"contents": "cl_smoke_lower_speed \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "cl_smoke_origin_height",
"contents": "cl_smoke_origin_height \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 68"
},
{
"trigger": "cl_smoke_player_particle_effect",
"contents": "cl_smoke_player_particle_effect \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "cl_smoke_torus_ring_radius",
"contents": "cl_smoke_torus_ring_radius \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 61"
},
{
"trigger": "cl_smoke_torus_ring_subradius",
"contents": "cl_smoke_torus_ring_subradius \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 88"
},
{
"trigger": "cl_smoke_volume_growth",
"contents": "cl_smoke_volume_growth \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "cl_smoke_volumeprop",
"contents": "cl_smoke_volumeprop \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "cl_smooth",
"contents": "cl_smooth \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Smooth view/eye origin after prediction errors "
},
{
"trigger": "cl_smoothtime",
"contents": "cl_smoothtime \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.2. Smooth client's view after prediction error over this many secondsMin: 0.01 Max: 2"
},
{
"trigger": "cl_snd_cast_clear",
"contents": "cl_snd_cast_clear \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "cl_snd_cast_retrigger",
"contents": "cl_snd_cast_retrigger \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "cl_snd_new_visualize",
"contents": "cl_snd_new_visualize \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Displays soundevent name played at it's 3d position "
},
{
"trigger": "cl_sniper_auto_rezoom",
"contents": "cl_sniper_auto_rezoom \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Auto-rezoom snipers after a shot "
},
{
"trigger": "cl_sniper_delay_unscope",
"contents": "cl_sniper_delay_unscope \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_spawngroup_log",
"contents": "cl_spawngroup_log \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Dump the contents of the next spawngroup manifest to file. "
},
{
"trigger": "cl_spawngroup_spewresources",
"contents": "cl_spawngroup_spewresources \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Spew all manifest add/updates. "
},
{
"trigger": "cl_spec_show_bindings",
"contents": "cl_spec_show_bindings \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Toggle the visibility of the spectator bindings. "
},
{
"trigger": "cl_spec_stats",
"contents": "cl_spec_stats \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "cl_spec_swapplayersides",
"contents": "cl_spec_swapplayersides \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Toggle set the player names and team names to the opposite side in which they are are on the spectator panel. "
},
{
"trigger": "cl_spec_use_tournament_content_standards",
"contents": "cl_spec_use_tournament_content_standards \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_streams_image_sfurl",
"contents": "cl_streams_image_sfurl \"${1:value}\"",
"kind": "snippet",
"details": "Format of Scaleform image representing the stream "
},
{
"trigger": "cl_streams_mytwitchtv_channel",
"contents": "cl_streams_mytwitchtv_channel \"${1:value}\"",
"kind": "snippet",
"details": "Twitch.tv account channel URL "
},
{
"trigger": "cl_streams_mytwitchtv_nolink",
"contents": "cl_streams_mytwitchtv_nolink \"${1:value}\"",
"kind": "snippet",
"details": "Twitch.tv account linking URL "
},
{
"trigger": "cl_streams_refresh_interval",
"contents": "cl_streams_refresh_interval \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 300. How often to refresh streams list "
},
{
"trigger": "cl_streams_request_accept",
"contents": "cl_streams_request_accept \"${1:value}\"",
"kind": "snippet",
"details": "Header for api request "
},
{
"trigger": "cl_streams_request_url",
"contents": "cl_streams_request_url \"${1:value}\"",
"kind": "snippet",
"details": "Number of streams requested for display "
},
{
"trigger": "cl_streams_write_response_file",
"contents": "cl_streams_write_response_file \"${1:value}\"",
"kind": "snippet",
"details": "When set will save streams info file for diagnostics "
},
{
"trigger": "cl_teamid_overhead_colors_show",
"contents": "cl_teamid_overhead_colors_show \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Show team overhead id in teammate color "
},
{
"trigger": "cl_teamid_overhead_maxdist",
"contents": "cl_teamid_overhead_maxdist \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 6000. max distance at which the overhead team id icons will show "
},
{
"trigger": "cl_teamid_overhead_maxdist_spec",
"contents": "cl_teamid_overhead_maxdist_spec \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 4000. max distance at which the overhead team id icons will show when a spectator "
},
{
"trigger": "cl_teamid_overhead_mode",
"contents": "cl_teamid_overhead_mode \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2. Always show team id over teammates. 1 = pips; 2 = pips, name, and equipment "
},
{
"trigger": "cl_teammate_color_1",
"contents": "cl_teammate_color_1 \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cl_teammate_color_2",
"contents": "cl_teammate_color_2 \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cl_teammate_color_3",
"contents": "cl_teammate_color_3 \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cl_teammate_color_4",
"contents": "cl_teammate_color_4 \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cl_teammate_color_5",
"contents": "cl_teammate_color_5 \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cl_teammate_colors_show",
"contents": "cl_teammate_colors_show \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. In competitive, 1 = show teammates as separate colors in the radar, scoreboard, etc., 2 = show colors and letters "
},
{
"trigger": "cl_timeout",
"contents": "cl_timeout \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 30. After this many seconds without receiving a packet from the server, the client will disconnect itself "
},
{
"trigger": "cl_tracer_frequency_override",
"contents": "cl_tracer_frequency_override \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Override tracer frequency (-1 to disable) "
},
{
"trigger": "cl_tracer_whiz_distance",
"contents": "cl_tracer_whiz_distance \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 72"
},
{
"trigger": "cl_tracer_whiz_infront_distance",
"contents": "cl_tracer_whiz_infront_distance \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 32"
},
{
"trigger": "cl_track_aim_head_log_closest",
"contents": "cl_track_aim_head_log_closest \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Log when closest distance to head was reached and what it was "
},
{
"trigger": "cl_track_aim_head_threshold",
"contents": "cl_track_aim_head_threshold \"${1:value}\"",
"kind": "snippet",
"details": "Notify render device when rendering a frame with enemy head within threshold distance "
},
{
"trigger": "cl_track_render_eye_angles",
"contents": "cl_track_render_eye_angles \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Spew render eye angles "
},
{
"trigger": "cl_use_entity_as_targetid",
"contents": "cl_use_entity_as_targetid \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "cl_use_old_wearable_shoulddraw",
"contents": "cl_use_old_wearable_shoulddraw \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_use_opens_buy_menu",
"contents": "cl_use_opens_buy_menu \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Pressing the +use key will open the buy menu if in a buy zone (just as if you pressed the 'buy' key). "
},
{
"trigger": "cl_usercmd_dbg",
"contents": "cl_usercmd_dbg \"${1:value}\"",
"kind": "snippet",
"details": "show usercmd payload sizing info for packets with more than this many usercmds "
},
{
"trigger": "cl_usercmd_maxcount",
"contents": "cl_usercmd_maxcount \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 4. max number of CUserCmds to send in one packetMin: 4 "
},
{
"trigger": "cl_usercmd_showsize",
"contents": "cl_usercmd_showsize \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_versus_intro",
"contents": "cl_versus_intro \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "cl_view_near_hud_player_eye_dist",
"contents": "cl_view_near_hud_player_eye_dist \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 20"
},
{
"trigger": "cl_view_near_other_player_eye_dist",
"contents": "cl_view_near_other_player_eye_dist \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 16"
},
{
"trigger": "cl_viewmodelsclonedasworld",
"contents": "cl_viewmodelsclonedasworld \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "cl_viewtarget_clamp",
"contents": "cl_viewtarget_clamp \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "cl_voiceenabled",
"contents": "cl_voiceenabled \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "cl_voip_lobby_audio_volume",
"contents": "cl_voip_lobby_audio_volume \"${1:value}\"",
"kind": "snippet",
"details": "Lobby voip stream audio volume0 Max: 100"
},
{
"trigger": "cl_vprof_scope_entity_gamephys",
"contents": "cl_vprof_scope_entity_gamephys \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_wallbang_heavy_threshold",
"contents": "cl_wallbang_heavy_threshold \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 22. The Threshold where to switch from Light to Heavy Wallbang tracer "
},
{
"trigger": "cl_weapon_clip_thinwalls",
"contents": "cl_weapon_clip_thinwalls \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "cl_weapon_clip_thinwalls_debug",
"contents": "cl_weapon_clip_thinwalls_debug \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_weapon_clip_thinwalls_lock",
"contents": "cl_weapon_clip_thinwalls_lock \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_weapon_debug_print_accuracy",
"contents": "cl_weapon_debug_print_accuracy \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cl_weapon_debug_show_accuracy",
"contents": "cl_weapon_debug_show_accuracy \"${1:value}\"",
"kind": "snippet",
"details": "Draws a circle representing the effective range with every shot. "
},
{
"trigger": "cl_weapon_debug_show_accuracy_duration",
"contents": "cl_weapon_debug_show_accuracy_duration \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 10"
},
{
"trigger": "cl_weapon_pickup_lerp",
"contents": "cl_weapon_pickup_lerp \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2"
},
{
"trigger": "cl_wpn_sway_interp",
"contents": "cl_wpn_sway_interp \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.1"
},
{
"trigger": "cl_wpn_sway_scale",
"contents": "cl_wpn_sway_scale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "cl_yawspeed",
"contents": "cl_yawspeed \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 210"
},
{
"trigger": "clDrawTargetIDTrace",
"contents": "clDrawTargetIDTrace \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. visualizing line trace for target ID "
},
{
"trigger": "clientport",
"contents": "clientport \"${1:value}\"",
"kind": "snippet",
"details": "If non-zero, client binds port to specific address. Usually you should leave this blank to use a different random system-assigned port for each connection. "
},
{
"trigger": "closecaption",
"contents": "closecaption \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Enable close captioning. "
},
{
"trigger": "cloth_approximate_collide",
"contents": "cloth_approximate_collide \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "cloth_batch",
"contents": "cloth_batch \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 32"
},
{
"trigger": "cloth_damping_bias",
"contents": "cloth_damping_bias \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cloth_damping_multiplier",
"contents": "cloth_damping_multiplier \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "cloth_debug",
"contents": "cloth_debug \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cloth_debug_draw",
"contents": "cloth_debug_draw \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cloth_debug_draw_nodepth_alpha",
"contents": "cloth_debug_draw_nodepth_alpha \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 16"
},
{
"trigger": "cloth_dry_drag",
"contents": "cloth_dry_drag \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cloth_dry_drag_soften",
"contents": "cloth_dry_drag_soften \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "cloth_ground_offset",
"contents": "cloth_ground_offset \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cloth_ground_plane_thickness",
"contents": "cloth_ground_plane_thickness \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3"
},
{
"trigger": "cloth_guard_threshold",
"contents": "cloth_guard_threshold \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1000"
},
{
"trigger": "cloth_interpolation_strategy",
"contents": "cloth_interpolation_strategy \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cloth_iv_dump",
"contents": "cloth_iv_dump \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 4"
},
{
"trigger": "cloth_iv_store_back",
"contents": "cloth_iv_store_back \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cloth_legacy_stretch_force",
"contents": "cloth_legacy_stretch_force \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.95"
},
{
"trigger": "cloth_legacy_support",
"contents": "cloth_legacy_support \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "cloth_max_ticks_per_frame",
"contents": "cloth_max_ticks_per_frame \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 8"
},
{
"trigger": "cloth_node_debug_axis_length",
"contents": "cloth_node_debug_axis_length \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "cloth_quad_smooth_iterations",
"contents": "cloth_quad_smooth_iterations \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "cloth_quad_smooth_rate",
"contents": "cloth_quad_smooth_rate \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "cloth_quasistatic_iters",
"contents": "cloth_quasistatic_iters \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cloth_reload_immediately",
"contents": "cloth_reload_immediately \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cloth_resim_after",
"contents": "cloth_resim_after \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.5"
},
{
"trigger": "cloth_rigid_update",
"contents": "cloth_rigid_update \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cloth_rod_smooth_iterations",
"contents": "cloth_rod_smooth_iterations \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "cloth_rod_smooth_rate",
"contents": "cloth_rod_smooth_rate \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "cloth_sim_on_tick",
"contents": "cloth_sim_on_tick \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "cloth_simulate",
"contents": "cloth_simulate \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "cloth_sleep_threshold",
"contents": "cloth_sleep_threshold \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 30"
},
{
"trigger": "cloth_step",
"contents": "cloth_step \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "cloth_step_variability",
"contents": "cloth_step_variability \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.05"
},
{
"trigger": "cloth_update",
"contents": "cloth_update \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "cloth_update_bones_on_ticks",
"contents": "cloth_update_bones_on_ticks \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "cloth_watch",
"contents": "cloth_watch \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "cloth_wind",
"contents": "cloth_wind \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "cloth_wind_pitch",
"contents": "cloth_wind_pitch \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "clTaserShakeFreqMax",
"contents": "clTaserShakeFreqMax \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.7. how often the shake is applied (max time) "
},
{
"trigger": "clTaserShakeFreqMin",
"contents": "clTaserShakeFreqMin \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.2. how often the shake is applied (min time) "
},
{
"trigger": "clTaserShakeTimeTotal",
"contents": "clTaserShakeTimeTotal \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 7. time the taser shake is applied. "
},
{
"trigger": "cojob_lock_hold_warning_threshold_ms",
"contents": "cojob_lock_hold_warning_threshold_ms \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 10000. How long in milliseconds before we warn about lock hold duration "
},
{
"trigger": "cojob_max_no_yield_time_us",
"contents": "cojob_max_no_yield_time_us \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3000. Will spew if a job takes longer than the specified number of microseconds "
},
{
"trigger": "commentary",
"contents": "commentary \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Desired commentary mode state. "
},
{
"trigger": "commentary_available",
"contents": "commentary_available \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Automatically set by the game when a commentary file is available for the current map. "
},
{
"trigger": "commentary_node_use_viewfacing",
"contents": "commentary_node_use_viewfacing \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "composite_material_cache_count_max",
"contents": "composite_material_cache_count_max \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 16"
},
{
"trigger": "composite_material_dump_images",
"contents": "composite_material_dump_images \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "composite_material_use_gpu",
"contents": "composite_material_use_gpu \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "composite_material_use_gpu_endpoint_optimization",
"contents": "composite_material_use_gpu_endpoint_optimization \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "composite_material_use_gpu_perceptual_error_metric",
"contents": "composite_material_use_gpu_perceptual_error_metric \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "compositematerial_showdebugwindow",
"contents": "compositematerial_showdebugwindow \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Source2/Composite Material Debug "
},
{
"trigger": "con_enable",
"contents": "con_enable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Allows the console to be activated. "
},
{
"trigger": "con_logfile_suffix",
"contents": "con_logfile_suffix \"${1:value}\"",
"kind": "snippet",
"details": "Suffix to append to the console log, may be changed to reopen the log "
},
{
"trigger": "connect_lobby",
"contents": "connect_lobby \"${1:value}\"",
"kind": "snippet",
"details": "Sets the lobby ID to connect to on start. "
},
{
"trigger": "contributionscore_assist",
"contents": "contributionscore_assist \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. amount of contribution score added for an assist "
},
{
"trigger": "contributionscore_bomb_defuse_major",
"contents": "contributionscore_bomb_defuse_major \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3. amount of contribution score for defusing a bomb while at least one enemy remains alive "
},
{
"trigger": "contributionscore_bomb_defuse_minor",
"contents": "contributionscore_bomb_defuse_minor \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. amount of contribution score for defusing a bomb after eliminating enemy team "
},
{
"trigger": "contributionscore_bomb_exploded",
"contents": "contributionscore_bomb_exploded \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. amount of contribution score awarded to bomb planter and terrorists remaining alive if bomb explosion wins the round "
},
{
"trigger": "contributionscore_bomb_planted",
"contents": "contributionscore_bomb_planted \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2. amount of contribution score for planting a bomb "
},
{
"trigger": "contributionscore_cash_bundle",
"contents": "contributionscore_cash_bundle \"${1:value}\"",
"kind": "snippet",
"details": "amount of contribution score for picking up a cash bundle "
},
{
"trigger": "contributionscore_crate_break",
"contents": "contributionscore_crate_break \"${1:value}\"",
"kind": "snippet",
"details": "amount of contribution score for breaking an item crate "
},
{
"trigger": "contributionscore_hostage_kill",
"contents": "contributionscore_hostage_kill \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -2. amount of contribution score for killing a hostage, normally negative "
},
{
"trigger": "contributionscore_hostage_rescue_major",
"contents": "contributionscore_hostage_rescue_major \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3. amount of contribution score added to rescuer per hostage rescued "
},
{
"trigger": "contributionscore_hostage_rescue_minor",
"contents": "contributionscore_hostage_rescue_minor \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. amount of contribution score added to all alive CTs per hostage rescued "
},
{
"trigger": "contributionscore_kill",
"contents": "contributionscore_kill \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2. amount of contribution score added for a kill "
},
{
"trigger": "contributionscore_kill_factor",
"contents": "contributionscore_kill_factor \"${1:value}\"",
"kind": "snippet",
"details": "percentage of victim's contribution score to award to their killer as a bonus "
},
{
"trigger": "contributionscore_objective_kill",
"contents": "contributionscore_objective_kill \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3. amount of contribution score added for an objective related kill "
},
{
"trigger": "contributionscore_suicide",
"contents": "contributionscore_suicide \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -2. amount of contribution score for a suicide, normally negative "
},
{
"trigger": "contributionscore_team_kill",
"contents": "contributionscore_team_kill \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -2. amount of contribution score for a team kill, normally negative "
},
{
"trigger": "convars_echo_toggle_changes",
"contents": "convars_echo_toggle_changes \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Echo to the console changes caused by toggling. "
},
{
"trigger": "cpu_level",
"contents": "cpu_level \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2. CPU Level - Default: High "
},
{
"trigger": "cq_adjust_deadzone_ticks",
"contents": "cq_adjust_deadzone_ticks \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.75. don't adjust rate faster/slower if average queue is this close to goal.0 "
},
{
"trigger": "cq_buffer_bloat_msecs",
"contents": "cq_buffer_bloat_msecs \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 150. max buffer bloat before we reset and discard buffered user commands. "
},
{
"trigger": "cq_debug",
"contents": "cq_debug \"${1:value}\"",
"kind": "snippet",
"details": "Verbose command queue logging. "
},
{
"trigger": "cq_dilation_percentage",
"contents": "cq_dilation_percentage \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 5. When speeding up slowing down, this is how muchMin: 0.1 Max: 10"
},
{
"trigger": "cq_dropped_command_msecs",
"contents": "cq_dropped_command_msecs \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1000. max msecs of starved usercmds to queue before dropping any additional.Min: 0.1 "
},
{
"trigger": "cq_enable",
"contents": "cq_enable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Run one usercmd per server tick and maintain a buffer. Client speeds up/slows down it's usercmd tick rate to maintain server command queue buffering. "
},
{
"trigger": "cq_fake_starve",
"contents": "cq_fake_starve \"${1:value}\"",
"kind": "snippet",
"details": "if set, starve this many commands by discarding during process usercmds. "
},
{
"trigger": "cq_force_percent",
"contents": "cq_force_percent \"${1:value}\"",
"kind": "snippet",
"details": "debugging, force client tick rate faster/slower by specified percentage. "
},
{
"trigger": "cq_logging",
"contents": "cq_logging \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. command queue logging of events. "
},
{
"trigger": "cq_logging_interval",
"contents": "cq_logging_interval \"${1:value}\"",
"kind": "snippet",
"details": "command queue logging per player stats every N seconds, 0 to disable. "
},
{
"trigger": "cq_min_queue_size",
"contents": "cq_min_queue_size \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. min buffer queue target size.Min: 1 "
},
{
"trigger": "cq_netgraph",
"contents": "cq_netgraph \"${1:value}\"",
"kind": "snippet",
"details": "Display command queue statistics on the hud "
},
{
"trigger": "cq_queue_sample_count",
"contents": "cq_queue_sample_count \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 20. how many frames of samples to store in the buffer sample queue.Min: 1 "
},
{
"trigger": "cq_resolve_commands_per_second",
"contents": "cq_resolve_commands_per_second \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.5. once cq_starve_hold_time elapses, we return to cq_min_queue_size over this many commands per second.Min: 0.1 "
},
{
"trigger": "cq_runtests",
"contents": "cq_runtests \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cq_runtests_broadcast_info",
"contents": "cq_runtests_broadcast_info \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. send message to remote client console when tests change. "
},
{
"trigger": "cq_runtests_interval",
"contents": "cq_runtests_interval \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 30"
},
{
"trigger": "cq_starve_hold_msecs",
"contents": "cq_starve_hold_msecs \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 400. if we starve, we hold the faster time dilation for at least this many msecs.0 "
},
{
"trigger": "cq_starve_increment_msecs",
"contents": "cq_starve_increment_msecs \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1000. if we starve, we increment target queue only this often, 0 to disable.0 "
},
{
"trigger": "crosshair",
"contents": "crosshair \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "crowbar_impact_damage_mass",
"contents": "crowbar_impact_damage_mass \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 8"
},
{
"trigger": "crowbar_impact_damage_scale",
"contents": "crowbar_impact_damage_scale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "cs_AssistDamageThreshold",
"contents": "cs_AssistDamageThreshold \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 25. cs_AssistDamageThreshold defines the amount of damage needed to score an assist "
},
{
"trigger": "cs_enable_player_physics_box",
"contents": "cs_enable_player_physics_box \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "cs_hostage_near_rescue_music_distance",
"contents": "cs_hostage_near_rescue_music_distance \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2000"
},
{
"trigger": "cs_logtouchexpansion",
"contents": "cs_logtouchexpansion \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -2. cs_logtouchexpansion . Log player touch expansion component. "
},
{
"trigger": "cs_minimap_create_output_size",
"contents": "cs_minimap_create_output_size \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 512. Size of minimap texture generated with cs_minimap_create (512 default) "
},
{
"trigger": "cs_ShowStateTransitions",
"contents": "cs_ShowStateTransitions \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -2. cs_ShowStateTransitions . Show player state transitions. "
},
{
"trigger": "CS_WarnFriendlyDamageInterval",
"contents": "CS_WarnFriendlyDamageInterval \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3. Defines how frequently the server notifies clients that a player damaged a friend "
},
{
"trigger": "csgo_3d_skybox",
"contents": "csgo_3d_skybox \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "csgo_demoui_playbeck_timestep_value",
"contents": "csgo_demoui_playbeck_timestep_value \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 15. Number of seconds to seek when using TimeStep buttons on demo playback controller. "
},
{
"trigger": "csgo_demoui_player_death_seek_lead_up_time",
"contents": "csgo_demoui_player_death_seek_lead_up_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Seek to a moment this amount of seconds leading up to a player death instead of the exact time of the death. "
},
{
"trigger": "csgo_demoui_previous_event_search_offset",
"contents": "csgo_demoui_previous_event_search_offset \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2. Do not consider events that happened in the last specified number of seconds when a user clicks 'previous' on the UI. "
},
{
"trigger": "csgo_disable_preview_maps",
"contents": "csgo_disable_preview_maps \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "csgo_fatdemo_enable",
"contents": "csgo_fatdemo_enable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "csgo_fatdemo_output",
"contents": "csgo_fatdemo_output \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "csgo_map_preview_scale",
"contents": "csgo_map_preview_scale \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "csgo_nav_jump_link_detour_threshold",
"contents": "csgo_nav_jump_link_detour_threshold \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1500. don't traverse a jump link if there's a detour that costs less than this amount "
},
{
"trigger": "csgo_use_fullsort_for_opaque",
"contents": "csgo_use_fullsort_for_opaque \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. fullsort the opaque pass when there wasn't a depth prepass "
},
{
"trigger": "csgo_vanity_defer_teleport",
"contents": "csgo_vanity_defer_teleport \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3"
},
{
"trigger": "csm_bias_override_0",
"contents": "csm_bias_override_0 \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "csm_bias_override_1",
"contents": "csm_bias_override_1 \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "csm_bias_override_2",
"contents": "csm_bias_override_2 \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "csm_bias_override_3",
"contents": "csm_bias_override_3 \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "csm_cascade_viewdir_shadow_bias_scale",
"contents": "csm_cascade_viewdir_shadow_bias_scale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2"
},
{
"trigger": "csm_cascade0_override_dist",
"contents": "csm_cascade0_override_dist \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "csm_cascade1_override_dist",
"contents": "csm_cascade1_override_dist \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "csm_cascade2_override_dist",
"contents": "csm_cascade2_override_dist \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "csm_cascade3_override_dist",
"contents": "csm_cascade3_override_dist \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "csm_max_num_cascades_override",
"contents": "csm_max_num_cascades_override \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. Number of cascades in sunlight shadow "
},
{
"trigger": "csm_max_shadow_dist_override",
"contents": "csm_max_shadow_dist_override \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "csm_res_override_0",
"contents": "csm_res_override_0 \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "csm_res_override_1",
"contents": "csm_res_override_1 \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "csm_res_override_2",
"contents": "csm_res_override_2 \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "csm_res_override_3",
"contents": "csm_res_override_3 \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "csm_slope_scale_db_override",
"contents": "csm_slope_scale_db_override \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3"
},
{
"trigger": "csm_split_log_scalar",
"contents": "csm_split_log_scalar \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.85"
},
{
"trigger": "csm_viewdir_shadow_bias",
"contents": "csm_viewdir_shadow_bias \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "csm_viewmodel_farz",
"contents": "csm_viewmodel_farz \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 30"
},
{
"trigger": "csm_viewmodel_max_shadow_dist",
"contents": "csm_viewmodel_max_shadow_dist \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 21"
},
{
"trigger": "csm_viewmodel_max_visible_dist",
"contents": "csm_viewmodel_max_visible_dist \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1000"
},
{
"trigger": "csm_viewmodel_shadows",
"contents": "csm_viewmodel_shadows \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "custom_bot_difficulty",
"contents": "custom_bot_difficulty \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2. Bot difficulty for offline play. "
},
{
"trigger": "cv_bot_ai_bt_debug_target",
"contents": "cv_bot_ai_bt_debug_target \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. Draw the behavior tree of the given bot. "
},
{
"trigger": "cv_bot_ai_bt_hiding_spot_show",
"contents": "cv_bot_ai_bt_hiding_spot_show \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Draw hiding spots. "
},
{
"trigger": "cv_bot_ai_bt_moveto_show_next_hiding_spot",
"contents": "cv_bot_ai_bt_moveto_show_next_hiding_spot \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Draw the hiding spot the bot will check next. "
},
{
"trigger": "d3d_max_feature_level",
"contents": "d3d_max_feature_level \"${1:value}\"",
"kind": "snippet",
"details": "Report the maximum D3D feature level available. "
},
{
"trigger": "damage_impact_heavy",
"contents": "damage_impact_heavy \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 40. Damage ABOVE this value is considered heavy damage "
},
{
"trigger": "damage_impact_medium",
"contents": "damage_impact_medium \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 20. Damage BELOW this value is considered light damage "
},
{
"trigger": "death_chase_distance",
"contents": "death_chase_distance \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 76"
},
{
"trigger": "death_panel_delay_time",
"contents": "death_panel_delay_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.25"
},
{
"trigger": "death_panel_travel_time",
"contents": "death_panel_travel_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.25"
},
{
"trigger": "debug_aim_angle",
"contents": "debug_aim_angle \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "debug_chicken",
"contents": "debug_chicken \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Chicken debug info "
},
{
"trigger": "debug_draw_enable",
"contents": "debug_draw_enable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "debug_entity_outline_highlight",
"contents": "debug_entity_outline_highlight \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "debug_overlay_fullposition",
"contents": "debug_overlay_fullposition \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "debug_physimpact",
"contents": "debug_physimpact \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "debug_shared_random",
"contents": "debug_shared_random \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "debug_takedamage_summaries",
"contents": "debug_takedamage_summaries \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "debug_visibility_monitor",
"contents": "debug_visibility_monitor \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "debugoverlay_draw_current",
"contents": "debugoverlay_draw_current \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Tell debugoverlay to not draw any entries that have aged out by the time of rendering. Useful if sim runs more often than rendering. "
},
{
"trigger": "debugoverlay_force_respect_ttl",
"contents": "debugoverlay_force_respect_ttl \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Force respect TTL even when clearing scopes "
},
{
"trigger": "debugoverlay_ignore_source",
"contents": "debugoverlay_ignore_source \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Draw everything normal and ignore the source for rendering "
},
{
"trigger": "debugoverlay_show_text_outline",
"contents": "debugoverlay_show_text_outline \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Toggle display of box around text "
},
{
"trigger": "decalfrequency",
"contents": "decalfrequency \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 10"
},
{
"trigger": "default_fov",
"contents": "default_fov \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 90"
},
{
"trigger": "demo_allow_game_mismatch",
"contents": "demo_allow_game_mismatch \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Allow playback of demo even if game directories are not matched [may crash or fail to load]. "
},
{
"trigger": "demo_debug",
"contents": "demo_debug \"${1:value}\"",
"kind": "snippet",
"details": "Turn on demo debug spew. "
},
{
"trigger": "demo_flush",
"contents": "demo_flush \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Flush writing the demo file every network update "
},
{
"trigger": "demo_pauseatservertick",
"contents": "demo_pauseatservertick \"${1:value}\"",
"kind": "snippet",
"details": "Pauses demo playback at server tick "
},
{
"trigger": "demo_quitafterplayback",
"contents": "demo_quitafterplayback \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Quits game after demo playback. "
},
{
"trigger": "demo_recordcommands",
"contents": "demo_recordcommands \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Record commands typed at console into .dem files. "
},
{
"trigger": "demo_usefastgoto",
"contents": "demo_usefastgoto \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Use fast frame skipping when available for demo_goto commands. "
},
{
"trigger": "demo_writefullupdate_rate",
"contents": "demo_writefullupdate_rate \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 60. Interval time in seconds to write full updates to demo. "
},
{
"trigger": "dev_add_onground_on_spawn",
"contents": "dev_add_onground_on_spawn \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Should we mess with the ground flag when we spawn? (I don't think we should). If we don't hit the assert in CCSPlayer_MovementServices::ProcessMovement, we should remove this by Dec 2022. "
},
{
"trigger": "dev_create_bhop_reports",
"contents": "dev_create_bhop_reports \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Whether we should create bhop reports when you jump. Reports are created for the client and server and are numbered monotonically "
},
{
"trigger": "dev_create_move_report",
"contents": "dev_create_move_report \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Whether we should create move reports when you push movement keys. Reports are created for the server and are numbered monotonically "
},
{
"trigger": "dev_create_sensitivity_report",
"contents": "dev_create_sensitivity_report \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "dev_cs_force_disable_move",
"contents": "dev_cs_force_disable_move \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. forcibly prevent players from moving "
},
{
"trigger": "dev_cs_frame_firing_enable",
"contents": "dev_cs_frame_firing_enable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Enable that firing will pretend like it's happening on frames. "
},
{
"trigger": "dev_cs_frame_firing_insert_idle_pose_now",
"contents": "dev_cs_frame_firing_insert_idle_pose_now \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Should we insert the idle pose at this time to make the animation interpolation punchier? "
},
{
"trigger": "dev_cs_frame_firing_play_animevents",
"contents": "dev_cs_frame_firing_play_animevents \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Should we play the animevents that animgraph will skip over? "
},
{
"trigger": "dev_cs_frame_firing_skip_first_frame_enable",
"contents": "dev_cs_frame_firing_skip_first_frame_enable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Should we skip the first frame of shooting to make the animation punchier? "
},
{
"trigger": "dev_cs_frame_firing_tick_offset_enable",
"contents": "dev_cs_frame_firing_tick_offset_enable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Should we offset the current frame to the tick "
},
{
"trigger": "dev_cs_ragdoll_head_ankle_delta_z_threshold",
"contents": "dev_cs_ragdoll_head_ankle_delta_z_threshold \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 35"
},
{
"trigger": "dev_cs_ragdoll_nudge_intensity",
"contents": "dev_cs_ragdoll_nudge_intensity \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 500"
},
{
"trigger": "dev_cs_ragdoll_nudge_max_duration",
"contents": "dev_cs_ragdoll_nudge_max_duration \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1.5"
},
{
"trigger": "dev_cs_ragdoll_progress_check_interval",
"contents": "dev_cs_ragdoll_progress_check_interval \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.25"
},
{
"trigger": "dev_reportmoneychanges",
"contents": "dev_reportmoneychanges \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Displays money account changes for players in the console "
},
{
"trigger": "developer",
"contents": "developer \"${1:value}\"",
"kind": "snippet",
"details": "Set developer message level. "
},
{
"trigger": "devonly_chicken_blocktimer",
"contents": "devonly_chicken_blocktimer \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.2. Chicken blockertimer "
},
{
"trigger": "devonly_chicken_feeler_distance",
"contents": "devonly_chicken_feeler_distance \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 30. Chicken feeler distance "
},
{
"trigger": "devonly_chicken_feeler_height",
"contents": "devonly_chicken_feeler_height \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 5. Chicken feeler height "
},
{
"trigger": "diffcheck",
"contents": "diffcheck \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Activate diffcheck system. "
},
{
"trigger": "diffcheck_playerslot",
"contents": "diffcheck_playerslot \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "diffcheck_spew",
"contents": "diffcheck_spew \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Actually show diffcheck results. "
},
{
"trigger": "diffcheck_spew_diff_filter",
"contents": "diffcheck_spew_diff_filter \"${1:value}\"",
"kind": "snippet",
"details": "Show diff with matching filter substring only. "
},
{
"trigger": "diffcheck_spew_diff_only",
"contents": "diffcheck_spew_diff_only \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Show diff only. "
},
{
"trigger": "directional_blood_impacts",
"contents": "directional_blood_impacts \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. 1 means we calculate the direction outward from the hit players body in relation to local client "
},
{
"trigger": "disable_dynamic_prop_loading",
"contents": "disable_dynamic_prop_loading \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. If non-zero when a map loads, dynamic props won't be loaded "
},
{
"trigger": "display_game_events",
"contents": "display_game_events \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "dllverification_sendmessage",
"contents": "dllverification_sendmessage \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "dota_enable_spatial_audio",
"contents": "dota_enable_spatial_audio \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Flag to enable spatial audio in Dota 2. "
},
{
"trigger": "dota_overhead_on_received_item",
"contents": "dota_overhead_on_received_item \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Emit an overhead particle effect on receiving an item from an ally. "
},
{
"trigger": "dota_spatial_audio_mix",
"contents": "dota_spatial_audio_mix \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Mix value to blend spatial and non-spatial audio in Dota 2. "
},
{
"trigger": "dota_toast_manager_override_duration",
"contents": "dota_toast_manager_override_duration \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "dsp_automatic",
"contents": "dsp_automatic \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "dsp_db_min",
"contents": "dsp_db_min \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 80"
},
{
"trigger": "dsp_db_mixdrop",
"contents": "dsp_db_mixdrop \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.5"
},
{
"trigger": "dsp_dist_max",
"contents": "dsp_dist_max \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1440"
},
{
"trigger": "dsp_dist_min",
"contents": "dsp_dist_min \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "dsp_mix_max",
"contents": "dsp_mix_max \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.8"
},
{
"trigger": "dsp_mix_min",
"contents": "dsp_mix_min \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.2"
},
{
"trigger": "dsp_off",
"contents": "dsp_off \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "dsp_vol_2ch",
"contents": "dsp_vol_2ch \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "dsp_vol_4ch",
"contents": "dsp_vol_4ch \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.5"
},
{
"trigger": "dsp_vol_5ch",
"contents": "dsp_vol_5ch \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.5"
},
{
"trigger": "dsp_volume",
"contents": "dsp_volume \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.8"
},
{
"trigger": "econ_debug_loadout_ui",
"contents": "econ_debug_loadout_ui \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Show debug data when players change their loadout. "
},
{
"trigger": "econ_enable_inventory_images",
"contents": "econ_enable_inventory_images \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. allow inventory image rendering for use by scaleform "
},
{
"trigger": "econ_inventory_image_pinboard",
"contents": "econ_inventory_image_pinboard \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "enable_boneflex",
"contents": "enable_boneflex \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "engine_allow_multiple_simulates_per_frame",
"contents": "engine_allow_multiple_simulates_per_frame \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. When the client is catching up in low frame rate situations, should we run client simulate more than once a frame? "
},
{
"trigger": "engine_allow_multiple_ticks_per_frame",
"contents": "engine_allow_multiple_ticks_per_frame \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. When the client is catching up in low frame rate situations, should we run tick more than once a frame? "
},
{
"trigger": "engine_client_tick_pad_enable",
"contents": "engine_client_tick_pad_enable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "engine_cpu_info_extended",
"contents": "engine_cpu_info_extended \"${1:value}\"",
"kind": "snippet",
"details": "CPU the engine is running on. "
},
{
"trigger": "engine_low_latency_sleep_after_client_tick",
"contents": "engine_low_latency_sleep_after_client_tick \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. When r_low_latency is enabled, this moves the low latency sleep on tick frames to happen after client simulation. "
},
{
"trigger": "engine_max_resource_system_update_time",
"contents": "engine_max_resource_system_update_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 5"
},
{
"trigger": "engine_no_focus_sleep",
"contents": "engine_no_focus_sleep \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 20"
},
{
"trigger": "engine_no_focus_sleep_vconsole_suppress",
"contents": "engine_no_focus_sleep_vconsole_suppress \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. When VConsole is in the foreground, don't trigger engine_no_focus_sleep behavior "
},
{
"trigger": "engine_ostype",
"contents": "engine_ostype \"${1:value}\"",
"kind": "snippet",
"details": "OS type the engine is running on. "
},
{
"trigger": "engine_platform_name_extended",
"contents": "engine_platform_name_extended \"${1:value}\"",
"kind": "snippet",
"details": "Platform the engine is running on. "
},
{
"trigger": "engine_render_only",
"contents": "engine_render_only \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "engine_rendersystem_init",
"contents": "engine_rendersystem_init \"${1:value}\"",
"kind": "snippet",
"details": "Rendersystem option requested (changing this does not change the rendersystem). "
},
{
"trigger": "engine_rendersystem_shader_model",
"contents": "engine_rendersystem_shader_model \"${1:value}\"",
"kind": "snippet",
"details": "Rendersystem shader model in use (changing this does not change the shader model). "
},
{
"trigger": "engine_rendersystem_used",
"contents": "engine_rendersystem_used \"${1:value}\"",
"kind": "snippet",
"details": "Rendersystem option in use (changing this does not change the rendersystem). "
},
{
"trigger": "engine_show_frame_dispatch",
"contents": "engine_show_frame_dispatch \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. show frame dispatch names. "
},
{
"trigger": "engine_show_frame_multiple_ticks",
"contents": "engine_show_frame_multiple_ticks \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "engine_show_frame_pacing",
"contents": "engine_show_frame_pacing \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "engine_show_frame_ticks",
"contents": "engine_show_frame_ticks \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "engine_sse42",
"contents": "engine_sse42 \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. turn on sse4.2 optimizations in the engine "
},
{
"trigger": "engine_vr_max_ticks_to_simulate",
"contents": "engine_vr_max_ticks_to_simulate \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3. Max number of ticks to simulate per frame, after which simulation will start to slow down compared to real time. "
},
{
"trigger": "english",
"contents": "english \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. If set to 1, running the english language set of assets. "
},
{
"trigger": "ent_actornames_font",
"contents": "ent_actornames_font \"${1:value}\"",
"kind": "snippet",
"details": "ent_actornames font name "
},
{
"trigger": "ent_actornames_fontsize",
"contents": "ent_actornames_fontsize \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 24. ent_actornames font size "
},
{
"trigger": "ent_debug_draw_thinkers",
"contents": "ent_debug_draw_thinkers \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "ent_joint_axis_size",
"contents": "ent_joint_axis_size \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 4"
},
{
"trigger": "ent_joint_filter_substring",
"contents": "ent_joint_filter_substring \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "ent_joint_names",
"contents": "ent_joint_names \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "ent_joint_only_ik_joints",
"contents": "ent_joint_only_ik_joints \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "ent_joint_use_bind_pose",
"contents": "ent_joint_use_bind_pose \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "ent_messages_draw",
"contents": "ent_messages_draw \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Visualizes all entity input/output activity. "
},
{
"trigger": "ent_pivot_size",
"contents": "ent_pivot_size \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 20"
},
{
"trigger": "ent_revert_dormancy_change",
"contents": "ent_revert_dormancy_change \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "ent_show_contexts",
"contents": "ent_show_contexts \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Show entity contexts in ent_text display "
},
{
"trigger": "ent_showonlyattachment",
"contents": "ent_showonlyattachment \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "ent_skeleton_duration",
"contents": "ent_skeleton_duration \"${1:value}\"",
"kind": "snippet",
"details": "Duration of ent_skeleton display "
},
{
"trigger": "ent_skeleton_only_ik_joints",
"contents": "ent_skeleton_only_ik_joints \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "ent_steadystate_batchsize",
"contents": "ent_steadystate_batchsize \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 20. Max number of entities to transmit to player "
},
{
"trigger": "ent_steadystate_delay",
"contents": "ent_steadystate_delay \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 5. Time in seconds without network state changes until an entity is considered for trickle updates "
},
{
"trigger": "ent_steadystate_enable",
"contents": "ent_steadystate_enable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "ent_steadystate_interval",
"contents": "ent_steadystate_interval \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.1. Rate at which entities can be trickled to players "
},
{
"trigger": "ent_test_interpolation",
"contents": "ent_test_interpolation \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "ent_text_flags_active",
"contents": "ent_text_flags_active \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "ent_text_no_name_really_i_mean_it",
"contents": "ent_text_no_name_really_i_mean_it \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "entity_log_load_unserialize",
"contents": "entity_log_load_unserialize \"${1:value}\"",
"kind": "snippet",
"details": "Output unserialization of entities on map load. 0 - off, 1 - client/server, 2 - server, 3 - client "
},
{
"trigger": "execute_command_every_frame",
"contents": "execute_command_every_frame \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "fade_debug_splitscreen_slot",
"contents": "fade_debug_splitscreen_slot \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "ff_damage_bullet_penetration",
"contents": "ff_damage_bullet_penetration \"${1:value}\"",
"kind": "snippet",
"details": "If friendly fire is off, this will scale the penetration power and damage a bullet does when penetrating another friendly player0 Max: 1"
},
{
"trigger": "ff_damage_decoy_explosion",
"contents": "ff_damage_decoy_explosion \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Enables or disables team damage from decoy detonation "
},
{
"trigger": "ff_damage_reduction_bullets",
"contents": "ff_damage_reduction_bullets \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.1. How much to reduce damage done to teammates when shot. Range is from 0 - 1 (with 1 being damage equal to what is done to an enemy) "
},
{
"trigger": "ff_damage_reduction_grenade",
"contents": "ff_damage_reduction_grenade \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.25. How much to reduce damage done to teammates by a thrown grenade. Range is from 0 - 1 (with 1 being damage equal to what is done to an enemy) "
},
{
"trigger": "ff_damage_reduction_grenade_self",
"contents": "ff_damage_reduction_grenade_self \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. How much to damage a player does to himself with his own grenade. Range is from 0 - 1 (with 1 being damage equal to what is done to an enemy) "
},
{
"trigger": "ff_damage_reduction_other",
"contents": "ff_damage_reduction_other \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.25. How much to reduce damage done to teammates by things other than bullets and grenades. Range is from 0 - 1 (with 1 being damage equal to what is done to an enemy) "
},
{
"trigger": "filesystem_buffer_size",
"contents": "filesystem_buffer_size \"${1:value}\"",
"kind": "snippet",
"details": "Size of per file buffers. 0 for none "
},
{
"trigger": "filesystem_fake_latency",
"contents": "filesystem_fake_latency \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "filesystem_max_stdio_read",
"contents": "filesystem_max_stdio_read \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 16"
},
{
"trigger": "filesystem_native",
"contents": "filesystem_native \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Use native FS or STDIO "
},
{
"trigger": "filesystem_report_buffered_io",
"contents": "filesystem_report_buffered_io \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "filesystem_unbuffered_io",
"contents": "filesystem_unbuffered_io \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "filter_player_simulation_time",
"contents": "filter_player_simulation_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "fire_absorbrate",
"contents": "fire_absorbrate \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3"
},
{
"trigger": "fire_dmgbase",
"contents": "fire_dmgbase \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "fire_dmginterval",
"contents": "fire_dmginterval \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "fire_dmgscale",
"contents": "fire_dmgscale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.1"
},
{
"trigger": "fire_extabsorb",
"contents": "fire_extabsorb \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 5"
},
{
"trigger": "fire_extinguishes_under_water",
"contents": "fire_extinguishes_under_water \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "fire_extscale",
"contents": "fire_extscale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 12"
},
{
"trigger": "fire_growthrate",
"contents": "fire_growthrate \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "fire_heatscale",
"contents": "fire_heatscale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "fire_incomingheatscale",
"contents": "fire_incomingheatscale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.1"
},
{
"trigger": "fire_maxabsorb",
"contents": "fire_maxabsorb \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 50"
},
{
"trigger": "fire_use_modifier",
"contents": "fire_use_modifier \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "fish_debug",
"contents": "fish_debug \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Show debug info for fish "
},
{
"trigger": "fish_dormant",
"contents": "fish_dormant \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Turns off interactive fish behavior. Fish become immobile and unresponsive. "
},
{
"trigger": "fog_color",
"contents": "fog_color \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "fog_colorskybox",
"contents": "fog_colorskybox \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "fog_enable",
"contents": "fog_enable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Enable fog "
},
{
"trigger": "fog_enableskybox",
"contents": "fog_enableskybox \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "fog_end",
"contents": "fog_end \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "fog_endskybox",
"contents": "fog_endskybox \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "fog_hdrcolorscale",
"contents": "fog_hdrcolorscale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "fog_hdrcolorscaleskybox",
"contents": "fog_hdrcolorscaleskybox \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "fog_maxdensity",
"contents": "fog_maxdensity \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "fog_maxdensityskybox",
"contents": "fog_maxdensityskybox \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "fog_override",
"contents": "fog_override \"${1:value}\"",
"kind": "snippet",
"details": "Overrides the map's fog settings (-1 populates fog_ vars with map's values) "
},
{
"trigger": "fog_override_enable",
"contents": "fog_override_enable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Use fog_override convars instead of world fog data "
},
{
"trigger": "fog_override_end",
"contents": "fog_override_end \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3500"
},
{
"trigger": "fog_override_exponent",
"contents": "fog_override_exponent \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2"
},
{
"trigger": "fog_override_max_density",
"contents": "fog_override_max_density \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.4"
},
{
"trigger": "fog_override_start",
"contents": "fog_override_start \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1000"
},
{
"trigger": "fog_start",
"contents": "fog_start \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "fog_startskybox",
"contents": "fog_startskybox \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "fog_volume_debug",
"contents": "fog_volume_debug \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. If enabled, prints diagnostic information about the current fog volume "
},
{
"trigger": "font_show_glyph_miss",
"contents": "font_show_glyph_miss \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "footstep_audible_threshold",
"contents": "footstep_audible_threshold \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.55"
},
{
"trigger": "footstep_debug",
"contents": "footstep_debug \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "footstep_force_volume",
"contents": "footstep_force_volume \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "force_spectator_only_tools",
"contents": "force_spectator_only_tools \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "fov_cs_debug",
"contents": "fov_cs_debug \"${1:value}\"",
"kind": "snippet",
"details": "Sets the view fov if cheats are on. "
},
{
"trigger": "fov_cs_super_ultrawide_near_z",
"contents": "fov_cs_super_ultrawide_near_z \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "fov_cs_ultrawide_near_z",
"contents": "fov_cs_ultrawide_near_z \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 4"
},
{
"trigger": "fov_desired",
"contents": "fov_desired \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 75. Sets the base field-of-view.Min: 1 Max: 135"
},
{
"trigger": "fps_max",
"contents": "fps_max \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 400. Frame rate limiter. 0=no limit. Does not apply to dedicated server. "
},
{
"trigger": "fps_max_tools",
"contents": "fps_max_tools \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 120. Additional frame rate limit while in tools mode and a window other than the game window has focus. Note that fps_max still applies, this only allows the maximum frame rate for tools mode to be lower. 0=no tools specific limit. "
},
{
"trigger": "fps_max_ui",
"contents": "fps_max_ui \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 120. Frame rate limiter while the game UI is displayed. 0=no limit. Does not apply to dedicated server. "
},
{
"trigger": "frag_grenade_blip_frequency",
"contents": "frag_grenade_blip_frequency \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "freecamera_accel",
"contents": "freecamera_accel \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 5. Tweak this parameter to adjust Free Camera movement acceleration. "
},
{
"trigger": "freecamera_fog_end",
"contents": "freecamera_fog_end \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2500. Fog end for Free Camera. "
},
{
"trigger": "freecamera_fog_start",
"contents": "freecamera_fog_start \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1800. Fog start for Free Camera. "
},
{
"trigger": "freecamera_max_speed",
"contents": "freecamera_max_speed \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 500. Tweak this parameter to adjust Free Camera movement max speed. "
},
{
"trigger": "freecamera_rotation_multiplier",
"contents": "freecamera_rotation_multiplier \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 10. Tweak this parameter to adjust Free Camera mouse rotation. "
},
{
"trigger": "freecamera_zfar",
"contents": "freecamera_zfar \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 4500. Fog start for Free Camera. "
},
{
"trigger": "fs_async_threads",
"contents": "fs_async_threads \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. Number of IO threads in async filesystem (-1 == auto) "
},
{
"trigger": "fs_fake_read_delay_ms",
"contents": "fs_fake_read_delay_ms \"${1:value}\"",
"kind": "snippet",
"details": "Add N ms of delay to every low-level read operation, to simulate a slow disk "
},
{
"trigger": "fs_report_async_io",
"contents": "fs_report_async_io \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "fs_report_long_reads",
"contents": "fs_report_long_reads \"${1:value}\"",
"kind": "snippet",
"details": "0:Off, 1:All (for tracking accumulated duplicate read times), >1:Microsecond threashold "
},
{
"trigger": "fs_report_sync_opens",
"contents": "fs_report_sync_opens \"${1:value}\"",
"kind": "snippet",
"details": "0:Off, 1:Always, 2:Not during load "
},
{
"trigger": "fs_warning_mode",
"contents": "fs_warning_mode \"${1:value}\"",
"kind": "snippet",
"details": "0:Off, 1:Warn main thread, 2:Warn other threads "
},
{
"trigger": "func_break_max_pieces",
"contents": "func_break_max_pieces \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 15"
},
{
"trigger": "func_break_reduction_factor",
"contents": "func_break_reduction_factor \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.5"
},
{
"trigger": "func_breakdmg_bullet",
"contents": "func_breakdmg_bullet \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.5"
},
{
"trigger": "func_breakdmg_club",
"contents": "func_breakdmg_club \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1.5"
},
{
"trigger": "func_breakdmg_explosive",
"contents": "func_breakdmg_explosive \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1.25"
},
{
"trigger": "fx_drawmetalspark",
"contents": "fx_drawmetalspark \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Draw metal spark effects. "
},
{
"trigger": "g_debug_angularsensor",
"contents": "g_debug_angularsensor \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "g_debug_constraint_sounds",
"contents": "g_debug_constraint_sounds \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Enable debug printing about constraint sounds. "
},
{
"trigger": "g_debug_doors",
"contents": "g_debug_doors \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "g_debug_ragdoll_visualize",
"contents": "g_debug_ragdoll_visualize \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "g_debug_transitions",
"contents": "g_debug_transitions \"${1:value}\"",
"kind": "snippet",
"details": "Set to 1 and restart the map to be warned if the map has no trigger_transition volumes. Set to 2 to see a dump of all entities & associated results during a transition. "
},
{
"trigger": "g_ragdoll_fadespeed",
"contents": "g_ragdoll_fadespeed \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 600"
},
{
"trigger": "g_ragdoll_important_maxcount",
"contents": "g_ragdoll_important_maxcount \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2"
},
{
"trigger": "g_ragdoll_lvfadespeed",
"contents": "g_ragdoll_lvfadespeed \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 100"
},
{
"trigger": "g_ragdoll_maxcount",
"contents": "g_ragdoll_maxcount \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 5"
},
{
"trigger": "game_mode",
"contents": "game_mode \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. The current game mode (based on game type). See GameModes.txt. "
},
{
"trigger": "game_online",
"contents": "game_online \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. The current game is online. "
},
{
"trigger": "game_particle_manager_requeue_messages",
"contents": "game_particle_manager_requeue_messages \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "game_public",
"contents": "game_public \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. The current game is public. "
},
{
"trigger": "game_type",
"contents": "game_type \"${1:value}\"",
"kind": "snippet",
"details": "The current game type. See GameModes.txt. "
},
{
"trigger": "gameevents_showeventlisteners",
"contents": "gameevents_showeventlisteners \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Show listening addition/removals "
},
{
"trigger": "gameevents_showevents",
"contents": "gameevents_showevents \"${1:value}\"",
"kind": "snippet",
"details": "Dump game events to console. (1 = Show Signaling, 2 = Show Posting also). "
},
{
"trigger": "gameinstructor_enable",
"contents": "gameinstructor_enable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Display in game lessons that teach new players. "
},
{
"trigger": "gameinstructor_find_errors",
"contents": "gameinstructor_find_errors \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Set to 1 and the game instructor will run EVERY scripted command to uncover errors. "
},
{
"trigger": "gameinstructor_start_sound_cooldown",
"contents": "gameinstructor_start_sound_cooldown \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 4. Number of seconds forced between similar lesson start sounds. "
},
{
"trigger": "gameinstructor_verbose",
"contents": "gameinstructor_verbose \"${1:value}\"",
"kind": "snippet",
"details": "Set to 1 for standard debugging or 2 (in combo with gameinstructor_verbose_lesson) to show update actions. "
},
{
"trigger": "gameinstructor_verbose_lesson",
"contents": "gameinstructor_verbose_lesson \"${1:value}\"",
"kind": "snippet",
"details": "Display more verbose information for lessons have this name. "
},
{
"trigger": "gamestats_file_output_directory",
"contents": "gamestats_file_output_directory \"${1:value}\"",
"kind": "snippet",
"details": "When -gamestatsfileoutputonly is specified, file will be emitted here instead of to modpath "
},
{
"trigger": "gc_secret_key",
"contents": "gc_secret_key \"${1:value}\"",
"kind": "snippet",
"details": "Secret key for authenticating with the GC "
},
{
"trigger": "gl_clear",
"contents": "gl_clear \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "gl_clear_gray",
"contents": "gl_clear_gray \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Clear the back buffer to gray every frame. "
},
{
"trigger": "gl_clear_randomcolor",
"contents": "gl_clear_randomcolor \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Clear the back buffer to random colors every frame. Helps spot open seams in geometry. "
},
{
"trigger": "glow_outline_width",
"contents": "glow_outline_width \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 6. Width of glow outline effect in screen space. "
},
{
"trigger": "glow_use_tolerance",
"contents": "glow_use_tolerance \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.85"
},
{
"trigger": "gotv_theater_container",
"contents": "gotv_theater_container \"${1:value}\"",
"kind": "snippet",
"details": "Enables GOTV theater mode for the specified container, setting it to 'live' will play top live matches "
},
{
"trigger": "gpu_level",
"contents": "gpu_level \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3. GPU Level - Default: High "
},
{
"trigger": "gpu_mem_level",
"contents": "gpu_mem_level \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2. Memory Level - Default: High "
},
{
"trigger": "healthshot_allow_use_at_full",
"contents": "healthshot_allow_use_at_full \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "healthshot_health",
"contents": "healthshot_health \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 50"
},
{
"trigger": "healthshot_healthboost_damage_multiplier",
"contents": "healthshot_healthboost_damage_multiplier \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "healthshot_healthboost_speed_multiplier",
"contents": "healthshot_healthboost_speed_multiplier \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "healthshot_healthboost_time",
"contents": "healthshot_healthboost_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "hidehud",
"contents": "hidehud \"${1:value}\"",
"kind": "snippet",
"details": "bitmask: 1=weapon selection, 2=flashlight, 4=all, 8=health, 16=player dead, 32=needssuit, 64=misc, 128=chat, 256=crosshair, 512=vehicle crosshair, 1024=in vehicle "
},
{
"trigger": "hinttext_displaytime",
"contents": "hinttext_displaytime \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 4"
},
{
"trigger": "host_force_frametime_to_equal_tick_interval",
"contents": "host_force_frametime_to_equal_tick_interval \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "host_force_max_frametime_to_tick_interval",
"contents": "host_force_max_frametime_to_tick_interval \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "host_framerate",
"contents": "host_framerate \"${1:value}\"",
"kind": "snippet",
"details": "Set to lock per-frame time elapse. "
},
{
"trigger": "host_timescale",
"contents": "host_timescale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Prescale the clock by this amount. "
},
{
"trigger": "hostage_debug",
"contents": "hostage_debug \"${1:value}\"",
"kind": "snippet",
"details": "Show hostage AI debug information "
},
{
"trigger": "hostage_drop_time",
"contents": "hostage_drop_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Time for the hostage before it fully drops to ground "
},
{
"trigger": "hostage_is_silent",
"contents": "hostage_is_silent \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. When set, the hostage won't play any code driven response rules lines "
},
{
"trigger": "hostfile",
"contents": "hostfile \"${1:value}\"",
"kind": "snippet",
"details": "The HOST file to load. "
},
{
"trigger": "hostip",
"contents": "hostip \"${1:value}\"",
"kind": "snippet",
"details": "Host game server ip "
},
{
"trigger": "hostname",
"contents": "hostname \"${1:value}\"",
"kind": "snippet",
"details": "Hostname for server. "
},
{
"trigger": "hostname_in_client_status",
"contents": "hostname_in_client_status \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Show server hostname in client status. "
},
{
"trigger": "hostport",
"contents": "hostport \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 27015. Host game server port "
},
{
"trigger": "hud_fastswitch",
"contents": "hud_fastswitch \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "hud_scaling",
"contents": "hud_scaling \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Scales hud elementsMin: 0.9 Max: 1.1"
},
{
"trigger": "hud_showtargetid",
"contents": "hud_showtargetid \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Enables display of target names "
},
{
"trigger": "hullivr_edge_merge_tan",
"contents": "hullivr_edge_merge_tan \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.02. Should we try to straighten two faces connected to this edge? (tangent) "
},
{
"trigger": "hullivr_faceisland_merge_disp",
"contents": "hullivr_faceisland_merge_disp \"${1:value}\"",
"kind": "snippet",
"details": "Should we straighten face island if the displacement is this much? (inches) "
},
{
"trigger": "hullivr_faceisland_merge_tan",
"contents": "hullivr_faceisland_merge_tan \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.04. Should we try to straighten an island of faces deviating from their average normal (tangent)? "
},
{
"trigger": "hullivr_version",
"contents": "hullivr_version \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3"
},
{
"trigger": "ik_constraints_enabled",
"contents": "ik_constraints_enabled \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "ik_debug_all_chains_unique_color_per_chain",
"contents": "ik_debug_all_chains_unique_color_per_chain \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "ik_debug_ccd",
"contents": "ik_debug_ccd \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "ik_debug_chain_to_filter_by",
"contents": "ik_debug_chain_to_filter_by \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "ik_debug_constraints",
"contents": "ik_debug_constraints \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "ik_debug_dogleg3bone",
"contents": "ik_debug_dogleg3bone \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "ik_debug_dogleg3bone_enabled",
"contents": "ik_debug_dogleg3bone_enabled \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "ik_debug_fabrik_backwards_enabled",
"contents": "ik_debug_fabrik_backwards_enabled \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "ik_debug_fabrik_backwards_iterations",
"contents": "ik_debug_fabrik_backwards_iterations \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "ik_debug_fabrik_forwards_enabled",
"contents": "ik_debug_fabrik_forwards_enabled \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "ik_debug_fabrik_forwards_iterations",
"contents": "ik_debug_fabrik_forwards_iterations \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "ik_debug_groundtraces",
"contents": "ik_debug_groundtraces \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Show IK trace related details "
},
{
"trigger": "ik_debug_perlin_solver",
"contents": "ik_debug_perlin_solver \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "ik_debug_planetilt",
"contents": "ik_debug_planetilt \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "ik_debug_planetilt_axis_length",
"contents": "ik_debug_planetilt_axis_length \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 20"
},
{
"trigger": "ik_debug_targets",
"contents": "ik_debug_targets \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "ik_enable",
"contents": "ik_enable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Enable IK. "
},
{
"trigger": "ik_fabrik_align_chain",
"contents": "ik_fabrik_align_chain \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "ik_fabrik_backwards_enabled",
"contents": "ik_fabrik_backwards_enabled \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "ik_fabrik_forwards_enabled",
"contents": "ik_fabrik_forwards_enabled \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "ik_fabrik_override_num_iterations",
"contents": "ik_fabrik_override_num_iterations \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "ik_final_fixup_enable",
"contents": "ik_final_fixup_enable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "ik_hinge_debug_bone_index",
"contents": "ik_hinge_debug_bone_index \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "ik_planetilt_enable",
"contents": "ik_planetilt_enable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "imgui_domain",
"contents": "imgui_domain \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2. 1 == client, 2 == server "
},
{
"trigger": "imgui_enable",
"contents": "imgui_enable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. if imgui should display "
},
{
"trigger": "imgui_enable_input",
"contents": "imgui_enable_input \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. if imgui should consume input "
},
{
"trigger": "imgui_show_command_tool",
"contents": "imgui_show_command_tool \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Game/Show Command Tool "
},
{
"trigger": "imgui_show_entity_browser",
"contents": "imgui_show_entity_browser \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Game/Show Entity Browser "
},
{
"trigger": "imgui_show_entity_catalog",
"contents": "imgui_show_entity_catalog \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Game/Show Entity Catalog "
},
{
"trigger": "imgui_show_example_window",
"contents": "imgui_show_example_window \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Source2/Show Example Window "
},
{
"trigger": "imgui_temp_enable",
"contents": "imgui_temp_enable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. if imgui should display temporarily "
},
{
"trigger": "in_button_double_press_window",
"contents": "in_button_double_press_window \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.22. How short the time between presses needs to be for us to consider it a double-press "
},
{
"trigger": "in_spewbuttondelta",
"contents": "in_spewbuttondelta \"${1:value}\"",
"kind": "snippet",
"details": "Spew button deltas, 0 = off, 1 = server, 2 = client, 3 = both "
},
{
"trigger": "in_spewbuttonhold",
"contents": "in_spewbuttonhold \"${1:value}\"",
"kind": "snippet",
"details": "Spew button hold times, 0 = off, 1 = server, 2 = client, 3 = both "
},
{
"trigger": "in_spewent",
"contents": "in_spewent \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. Which entity should we spew input for? (Useful for debugging bot input) "
},
{
"trigger": "in_spewinput",
"contents": "in_spewinput \"${1:value}\"",
"kind": "snippet",
"details": "Spew input, 0 = off, 1 = server, 2 = client, 3 = both "
},
{
"trigger": "inferno_batched_rays",
"contents": "inferno_batched_rays \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "inferno_child_spawn_interval_multiplier",
"contents": "inferno_child_spawn_interval_multiplier \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.1. Amount spawn interval increases for each child "
},
{
"trigger": "inferno_child_spawn_max_depth",
"contents": "inferno_child_spawn_max_depth \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 4"
},
{
"trigger": "Inferno_concav_plane_threshold",
"contents": "Inferno_concav_plane_threshold \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -10"
},
{
"trigger": "inferno_damage",
"contents": "inferno_damage \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 40. Damage per second "
},
{
"trigger": "inferno_damage_timer",
"contents": "inferno_damage_timer \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.2. How long between times for the inferno to deal damage. "
},
{
"trigger": "inferno_debug",
"contents": "inferno_debug \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "inferno_dlight_spacing",
"contents": "inferno_dlight_spacing \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 7200. Inferno dlights are at least this far apart "
},
{
"trigger": "inferno_dlights",
"contents": "inferno_dlights \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 30. Min FPS at which molotov dlights will be created "
},
{
"trigger": "inferno_fire",
"contents": "inferno_fire \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2"
},
{
"trigger": "inferno_flame_lifetime",
"contents": "inferno_flame_lifetime \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 7. Average lifetime of each flame in seconds "
},
{
"trigger": "inferno_flame_spacing",
"contents": "inferno_flame_spacing \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 42. Minimum distance between separate flame spawns "
},
{
"trigger": "inferno_forward_reduction_factor",
"contents": "inferno_forward_reduction_factor \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.9"
},
{
"trigger": "inferno_friendly_fire_duration",
"contents": "inferno_friendly_fire_duration \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 6. For this long, FF is credited back to the thrower. "
},
{
"trigger": "inferno_initial_spawn_interval",
"contents": "inferno_initial_spawn_interval \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.02. Time between spawning flames for first fire "
},
{
"trigger": "inferno_max_child_spawn_interval",
"contents": "inferno_max_child_spawn_interval \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.5. Largest time interval for child flame spawning "
},
{
"trigger": "inferno_max_flames",
"contents": "inferno_max_flames \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 16. Maximum number of flames that can be created "
},
{
"trigger": "inferno_max_range",
"contents": "inferno_max_range \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 150. Maximum distance flames can spread from their initial ignition point "
},
{
"trigger": "inferno_max_trace_per_tick",
"contents": "inferno_max_trace_per_tick \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 16"
},
{
"trigger": "inferno_per_flame_spawn_duration",
"contents": "inferno_per_flame_spawn_duration \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3. Duration each new flame will attempt to spawn new flames "
},
{
"trigger": "inferno_scorch_decals",
"contents": "inferno_scorch_decals \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "inferno_smoke_volume_density",
"contents": "inferno_smoke_volume_density \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.1"
},
{
"trigger": "inferno_spawn_angle",
"contents": "inferno_spawn_angle \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 45. Angular change from parent "
},
{
"trigger": "inferno_surface_offset",
"contents": "inferno_surface_offset \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 20"
},
{
"trigger": "inferno_velocity_decay_factor",
"contents": "inferno_velocity_decay_factor \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.2"
},
{
"trigger": "inferno_velocity_factor",
"contents": "inferno_velocity_factor \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.003"
},
{
"trigger": "inferno_velocity_normal_factor",
"contents": "inferno_velocity_normal_factor \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "input_button_code_is_scan_code",
"contents": "input_button_code_is_scan_code \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Bind keys based on keyboard position instead of key name "
},
{
"trigger": "input_downimpulsevalue",
"contents": "input_downimpulsevalue \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.7"
},
{
"trigger": "input_filter_relative_analog_inputs",
"contents": "input_filter_relative_analog_inputs \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "input_forceuser",
"contents": "input_forceuser \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. Force user input to this split screen player. "
},
{
"trigger": "input_upimpulsevalue",
"contents": "input_upimpulsevalue \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.3"
},
{
"trigger": "install_dlc_workshoptools_cvar",
"contents": "install_dlc_workshoptools_cvar \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. DLC Install Status "
},
{
"trigger": "instant_replay",
"contents": "instant_replay \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Enable instant replay recording. "
},
{
"trigger": "instant_replay_history_limit",
"contents": "instant_replay_history_limit \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 120. Maximum amount of minutes to save history (0 is unlimited). "
},
{
"trigger": "instant_replay_history_limit_low",
"contents": "instant_replay_history_limit_low \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 10. Maximum amount of minutes to save history on low memory (32 bit) systems (0 is unlimited). "
},
{
"trigger": "ip",
"contents": "ip \"${1:value}\"",
"kind": "snippet",
"details": "Overrides IP for multihomed hosts "
},
{
"trigger": "iv_debugbone",
"contents": "iv_debugbone \"${1:value}\"",
"kind": "snippet",
"details": "Debug bone name for interpolation spew of CAnimationState. "
},
{
"trigger": "iv_parallel_latch",
"contents": "iv_parallel_latch \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "iv_parallel_restore",
"contents": "iv_parallel_restore \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "iv_wrapped_parallel_latch",
"contents": "iv_wrapped_parallel_latch \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "joy_accel_filter",
"contents": "joy_accel_filter \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.2"
},
{
"trigger": "joy_accelmax",
"contents": "joy_accelmax \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "joy_accelscale",
"contents": "joy_accelscale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.6"
},
{
"trigger": "joy_advanced",
"contents": "joy_advanced \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "joy_advaxisr",
"contents": "joy_advaxisr \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "joy_advaxisu",
"contents": "joy_advaxisu \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "joy_advaxisv",
"contents": "joy_advaxisv \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "joy_advaxisx",
"contents": "joy_advaxisx \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "joy_advaxisy",
"contents": "joy_advaxisy \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "joy_advaxisz",
"contents": "joy_advaxisz \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "joy_autosprint",
"contents": "joy_autosprint \"${1:value}\"",
"kind": "snippet",
"details": "Automatically sprint when moving with an analog joystick "
},
{
"trigger": "joy_axisbutton_threshold",
"contents": "joy_axisbutton_threshold \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.3. Analog axis range before a button press is registered. "
},
{
"trigger": "joy_axisr_deadzone",
"contents": "joy_axisr_deadzone \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.15"
},
{
"trigger": "joy_axisr_relative",
"contents": "joy_axisr_relative \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "joy_axisu_deadzone",
"contents": "joy_axisu_deadzone \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.15"
},
{
"trigger": "joy_axisu_relative",
"contents": "joy_axisu_relative \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "joy_axisv_deadzone",
"contents": "joy_axisv_deadzone \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.15"
},
{
"trigger": "joy_axisv_relative",
"contents": "joy_axisv_relative \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "joy_axisx_deadzone",
"contents": "joy_axisx_deadzone \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.15"
},
{
"trigger": "joy_axisx_relative",
"contents": "joy_axisx_relative \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "joy_axisy_deadzone",
"contents": "joy_axisy_deadzone \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.15"
},
{
"trigger": "joy_axisy_relative",
"contents": "joy_axisy_relative \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "joy_axisz_deadzone",
"contents": "joy_axisz_deadzone \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.15"
},
{
"trigger": "joy_axisz_relative",
"contents": "joy_axisz_relative \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "joy_circle_correct_mode",
"contents": "joy_circle_correct_mode \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "joy_circle_correct_mode_vehicle",
"contents": "joy_circle_correct_mode_vehicle \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2"
},
{
"trigger": "joy_display_input",
"contents": "joy_display_input \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "joy_forward_sensitivity",
"contents": "joy_forward_sensitivity \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "joy_lowend",
"contents": "joy_lowend \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "joy_lowmap",
"contents": "joy_lowmap \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "joy_movement_stick",
"contents": "joy_movement_stick \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Which stick controls movement (0 is left stick) "
},
{
"trigger": "joy_name",
"contents": "joy_name \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "joy_pegged",
"contents": "joy_pegged \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.75"
},
{
"trigger": "joy_pitch_sensitivity",
"contents": "joy_pitch_sensitivity \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3"
},
{
"trigger": "joy_pitchsensitivity",
"contents": "joy_pitchsensitivity \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "joy_response_look",
"contents": "joy_response_look \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "joy_response_move",
"contents": "joy_response_move \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 9"
},
{
"trigger": "joy_response_move_vehicle",
"contents": "joy_response_move_vehicle \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 6"
},
{
"trigger": "joy_sensitive_step0",
"contents": "joy_sensitive_step0 \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.1"
},
{
"trigger": "joy_sensitive_step1",
"contents": "joy_sensitive_step1 \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.4"
},
{
"trigger": "joy_sensitive_step2",
"contents": "joy_sensitive_step2 \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.9"
},
{
"trigger": "joy_side_sensitivity",
"contents": "joy_side_sensitivity \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "joy_sidesensitivity",
"contents": "joy_sidesensitivity \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "joy_vehicle_turn_lowend",
"contents": "joy_vehicle_turn_lowend \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.7"
},
{
"trigger": "joy_vehicle_turn_lowmap",
"contents": "joy_vehicle_turn_lowmap \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.4"
},
{
"trigger": "joy_virtual_peg",
"contents": "joy_virtual_peg \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "joy_wingmanwarrior_centerhack",
"contents": "joy_wingmanwarrior_centerhack \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Wingman warrior centering hack. "
},
{
"trigger": "joy_wingmanwarrior_turnhack",
"contents": "joy_wingmanwarrior_turnhack \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Wingman warrior hack related to turn axes. "
},
{
"trigger": "joy_xcontroller_cfg_loaded",
"contents": "joy_xcontroller_cfg_loaded \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. If 0, the 360controller.cfg file will be executed on startup & option changes. "
},
{
"trigger": "joy_yaw_sensitivity",
"contents": "joy_yaw_sensitivity \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3"
},
{
"trigger": "joy_yawsensitivity",
"contents": "joy_yawsensitivity \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "joystick",
"contents": "joystick \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. True if the joystick is enabled, false otherwise. "
},
{
"trigger": "jpeg_quality",
"contents": "jpeg_quality \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 90. Set jpeg screenshot quality. [1..100]Min: 1 Max: 100"
},
{
"trigger": "key_bind_version",
"contents": "key_bind_version \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "knife_damage_scale",
"contents": "knife_damage_scale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 100"
},
{
"trigger": "labelled_debug_helper_arc_segments",
"contents": "labelled_debug_helper_arc_segments \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 20"
},
{
"trigger": "labelled_debug_helper_enabled",
"contents": "labelled_debug_helper_enabled \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "labelled_debug_helper_scale",
"contents": "labelled_debug_helper_scale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "labelled_debug_helper_show_position",
"contents": "labelled_debug_helper_show_position \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "labelled_debug_helper_show_text",
"contents": "labelled_debug_helper_show_text \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "labelled_debug_helper_skeleton_show_bone_names",
"contents": "labelled_debug_helper_skeleton_show_bone_names \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "lb_allow_time_sliced_shadow_map_rendering",
"contents": "lb_allow_time_sliced_shadow_map_rendering \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Allow time-sliced shadow buffer rendering when enabled via gameinfo.gi "
},
{
"trigger": "lb_barnlight_shadowmap_scale",
"contents": "lb_barnlight_shadowmap_scale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Scale for computed barnlight shadowmap size "
},
{
"trigger": "lb_bin_slices",
"contents": "lb_bin_slices \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 8192"
},
{
"trigger": "lb_convert_to_barn_lights_falloff_match_point",
"contents": "lb_convert_to_barn_lights_falloff_match_point \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.15"
},
{
"trigger": "lb_csm_cascade_size_override",
"contents": "lb_csm_cascade_size_override \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. Override width/height of individual cascades in the CSM "
},
{
"trigger": "lb_csm_draw_alpha_tested",
"contents": "lb_csm_draw_alpha_tested \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "lb_csm_draw_translucent",
"contents": "lb_csm_draw_translucent \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "lb_csm_fov_override",
"contents": "lb_csm_fov_override \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "lb_csm_override_staticgeo_cascades",
"contents": "lb_csm_override_staticgeo_cascades \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Override Cascades that will render static objects with lb_csm_override_staticgeo_cascades_value "
},
{
"trigger": "lb_csm_override_staticgeo_cascades_value",
"contents": "lb_csm_override_staticgeo_cascades_value \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. If lb_csm_override_staticgeo_cascades, override value used to determine which cascades render static objects "
},
{
"trigger": "lb_csm_receiver_plane_depth_bias",
"contents": "lb_csm_receiver_plane_depth_bias \"${1:value}\"",
"kind": "snippet",
"details": "Depth bias applied to shadow receiver "
},
{
"trigger": "lb_cubemap_normalization_max",
"contents": "lb_cubemap_normalization_max \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "lb_cubemap_normalization_roughness_begin",
"contents": "lb_cubemap_normalization_roughness_begin \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.1"
},
{
"trigger": "lb_debug_light_bounds",
"contents": "lb_debug_light_bounds \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. SceneSystem/LightBinner/Debug Light Bounds "
},
{
"trigger": "lb_debug_shadow_atlas",
"contents": "lb_debug_shadow_atlas \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. SceneSystem/LightBinner/Debug Dynamic Shadow Atlas "
},
{
"trigger": "lb_debug_silhouette",
"contents": "lb_debug_silhouette \"${1:value}\"",
"kind": "snippet",
"details": "SceneSystem/LightBinner/Debug Silhouettes "
},
{
"trigger": "lb_debug_tiles",
"contents": "lb_debug_tiles \"${1:value}\"",
"kind": "snippet",
"details": "SceneSystem/LightBinner/Debug Tiles "
},
{
"trigger": "lb_enable_baked_shadows",
"contents": "lb_enable_baked_shadows \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. SceneSystem/LightBinner/Enable Baked Shadows "
},
{
"trigger": "lb_enable_binning",
"contents": "lb_enable_binning \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. SceneSystem/LightBinner/Enable Binning "
},
{
"trigger": "lb_enable_dynamic_lights",
"contents": "lb_enable_dynamic_lights \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Allows rendering dynamic lights "
},
{
"trigger": "lb_enable_envmaps",
"contents": "lb_enable_envmaps \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. SceneSystem/LightBinner/Enable EnvMaps "
},
{
"trigger": "lb_enable_lights",
"contents": "lb_enable_lights \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. SceneSystem/LightBinner/Enable Lights "
},
{
"trigger": "lb_enable_shadow_casting",
"contents": "lb_enable_shadow_casting \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Allow stationary/dynamic lights to cast shadows. "
},
{
"trigger": "lb_enable_stationary_lights",
"contents": "lb_enable_stationary_lights \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Allows rendering stationary/mixed lights "
},
{
"trigger": "lb_enable_sunlight",
"contents": "lb_enable_sunlight \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. SceneSystem/LightBinner/Enable Sunlight "
},
{
"trigger": "lb_low_quality_shader_fade_region_rescale",
"contents": "lb_low_quality_shader_fade_region_rescale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.5. For envmaps in low quality shader mode, how much of the fade region to scale the envmap box by. "
},
{
"trigger": "lb_max_visible_barn_lights_override",
"contents": "lb_max_visible_barn_lights_override \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. Override maximum visible barn lights "
},
{
"trigger": "lb_max_visible_envmaps_override",
"contents": "lb_max_visible_envmaps_override \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. Override maximum visible envmaps "
},
{
"trigger": "lb_mixed_shadows",
"contents": "lb_mixed_shadows \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. SceneSystem/LightBinner/Enable Mixed Shadows "
},
{
"trigger": "lb_shadow_map_culling",
"contents": "lb_shadow_map_culling \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "lb_shadow_texture_height_override",
"contents": "lb_shadow_texture_height_override \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. Override height of shadow atlas texture "
},
{
"trigger": "lb_shadow_texture_width_override",
"contents": "lb_shadow_texture_width_override \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. Override width of shadow atlas texture "
},
{
"trigger": "lb_show_light_fog_clipmap_cb_cost",
"contents": "lb_show_light_fog_clipmap_cb_cost \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Show cost of lights in fog clipmap constant buffer. yellow = 1 cost, red = 6 cost "
},
{
"trigger": "lb_sun_csm_size_cull_threshold_texels",
"contents": "lb_sun_csm_size_cull_threshold_texels \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 10. Size, in texels, where we will cull an object in the shadowmap "
},
{
"trigger": "lb_tile_pixels",
"contents": "lb_tile_pixels \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 8"
},
{
"trigger": "lb_use_ellipsoid_bounds",
"contents": "lb_use_ellipsoid_bounds \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "lb_use_illumination_silhouette",
"contents": "lb_use_illumination_silhouette \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. SceneSystem/LightBinner/Use Illumination Bounds "
},
{
"trigger": "leaderboards_cache_duration",
"contents": "leaderboards_cache_duration \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 600"
},
{
"trigger": "lightquery_debug_direct_lighting",
"contents": "lightquery_debug_direct_lighting \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "lightquery_debug_indirect_lighting",
"contents": "lightquery_debug_indirect_lighting \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "lobby_default_privacy_bits2",
"contents": "lobby_default_privacy_bits2 \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Lobby default permissions (0: private, 1: public) "
},
{
"trigger": "lobby_gamesearch_fake",
"contents": "lobby_gamesearch_fake \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "lobby_stats_fake",
"contents": "lobby_stats_fake \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "locator_topdown_style",
"contents": "locator_topdown_style \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Topdown games set this to handle distance and offscreen location differently. "
},
{
"trigger": "lockMoveControllerRet",
"contents": "lockMoveControllerRet \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "logic_npc_counter_debug",
"contents": "logic_npc_counter_debug \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "lservercfgfile",
"contents": "lservercfgfile \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "lua_assert_on_error",
"contents": "lua_assert_on_error \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "lua_shipping_assert_on_error",
"contents": "lua_shipping_assert_on_error \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "m_pitch",
"contents": "m_pitch \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.022. Mouse pitch factor. "
},
{
"trigger": "m_yaw",
"contents": "m_yaw \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.022. Mouse yaw factor. "
},
{
"trigger": "mapcyclefile",
"contents": "mapcyclefile \"${1:value}\"",
"kind": "snippet",
"details": "Name of the .txt file used to cycle the maps on multiplayer servers "
},
{
"trigger": "mapoverview_allow_client_draw",
"contents": "mapoverview_allow_client_draw \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Allow a client to draw on the map overview "
},
{
"trigger": "mapoverview_icon_scale",
"contents": "mapoverview_icon_scale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Sets the icon scale multiplier for the overview map. Valid values are 0.5 to 3.0.Min: 0.5 Max: 3"
},
{
"trigger": "markup_volume_ref_cone_angle",
"contents": "markup_volume_ref_cone_angle \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 135"
},
{
"trigger": "mat_assert_on_error_shader_use",
"contents": "mat_assert_on_error_shader_use \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "mat_colcorrection_disableentities",
"contents": "mat_colcorrection_disableentities \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Disable map color-correction entities "
},
{
"trigger": "mat_colcorrection_editor",
"contents": "mat_colcorrection_editor \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "mat_colcorrection_forceentitiesclientside",
"contents": "mat_colcorrection_forceentitiesclientside \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Forces color correction entities to be updated on the client "
},
{
"trigger": "mat_colorcorrection",
"contents": "mat_colorcorrection \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "mat_depthbias_shadowmap",
"contents": "mat_depthbias_shadowmap \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.0005"
},
{
"trigger": "mat_disable_normal_mapping",
"contents": "mat_disable_normal_mapping \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "mat_fullbright",
"contents": "mat_fullbright \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "mat_hide_error_shader",
"contents": "mat_hide_error_shader \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "mat_lpv_luxels",
"contents": "mat_lpv_luxels \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "mat_luxels",
"contents": "mat_luxels \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "mat_max_lighting_complexity",
"contents": "mat_max_lighting_complexity \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 8"
},
{
"trigger": "mat_overdraw",
"contents": "mat_overdraw \"${1:value}\"",
"kind": "snippet",
"details": "Visualize overdraw "
},
{
"trigger": "mat_overdraw_color",
"contents": "mat_overdraw_color \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "mat_shader_cache",
"contents": "mat_shader_cache \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "mat_shading_complexity",
"contents": "mat_shading_complexity \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Visualize shading complexity "
},
{
"trigger": "mat_shading_complexity_color",
"contents": "mat_shading_complexity_color \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "mat_shading_complexity_max_instruction_count",
"contents": "mat_shading_complexity_max_instruction_count \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1024"
},
{
"trigger": "mat_shading_complexity_max_register_count",
"contents": "mat_shading_complexity_max_register_count \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 128"
},
{
"trigger": "mat_show_distance_field",
"contents": "mat_show_distance_field \"${1:value}\"",
"kind": "snippet",
"details": "0=Off, 1=Visualize trace from camera, 2=Visualize occlusion "
},
{
"trigger": "mat_slopescaledepthbias_shadowmap",
"contents": "mat_slopescaledepthbias_shadowmap \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 4"
},
{
"trigger": "mat_tonemap_bloom_scale",
"contents": "mat_tonemap_bloom_scale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "mat_tonemap_bloom_start_value",
"contents": "mat_tonemap_bloom_start_value \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "mat_tonemap_debug",
"contents": "mat_tonemap_debug \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "mat_tonemap_force_accelerate_exposure_down",
"contents": "mat_tonemap_force_accelerate_exposure_down \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "mat_tonemap_force_average_lum_min",
"contents": "mat_tonemap_force_average_lum_min \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. Override. Old default was 3.0 "
},
{
"trigger": "mat_tonemap_force_log_lum_max",
"contents": "mat_tonemap_force_log_lum_max \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "mat_tonemap_force_log_lum_min",
"contents": "mat_tonemap_force_log_lum_min \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "mat_tonemap_force_max",
"contents": "mat_tonemap_force_max \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "mat_tonemap_force_min",
"contents": "mat_tonemap_force_min \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "mat_tonemap_force_percent_bright_pixels",
"contents": "mat_tonemap_force_percent_bright_pixels \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. Override. Old value was 1.0 "
},
{
"trigger": "mat_tonemap_force_percent_target",
"contents": "mat_tonemap_force_percent_target \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. Override. Old default was 45. "
},
{
"trigger": "mat_tonemap_force_rate",
"contents": "mat_tonemap_force_rate \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "mat_tonemap_force_scale",
"contents": "mat_tonemap_force_scale \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "mat_tonemap_force_use_alpha",
"contents": "mat_tonemap_force_use_alpha \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "mat_tonemap_uncap_exposure",
"contents": "mat_tonemap_uncap_exposure \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "mat_viewportscale",
"contents": "mat_viewportscale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Scale down the main viewport (to reduce GPU impact on CPU profiling)Min: 0.0015 Max: 1"
},
{
"trigger": "mat_warn_bad_modes",
"contents": "mat_warn_bad_modes \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "mat_wireframe",
"contents": "mat_wireframe \"${1:value}\"",
"kind": "snippet",
"details": "0=Off, 1=Surface Wireframe, 2=Transparent Wireframe "
},
{
"trigger": "mem_level",
"contents": "mem_level \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2. Memory Level - Default: High "
},
{
"trigger": "mem_test_each_frame",
"contents": "mem_test_each_frame \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Run heap check at end of every frame "
},
{
"trigger": "mem_test_every_n_seconds",
"contents": "mem_test_every_n_seconds \"${1:value}\"",
"kind": "snippet",
"details": "Run heap check at a specified interval "
},
{
"trigger": "mem_test_quiet",
"contents": "mem_test_quiet \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Don't print stats when memtesting "
},
{
"trigger": "mesh_calculate_curvature_smooth_invert",
"contents": "mesh_calculate_curvature_smooth_invert \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "mesh_calculate_curvature_smooth_pass_count",
"contents": "mesh_calculate_curvature_smooth_pass_count \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3"
},
{
"trigger": "mesh_calculate_curvature_smooth_weight",
"contents": "mesh_calculate_curvature_smooth_weight \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "mic_listen_while_nonfocused",
"contents": "mic_listen_while_nonfocused \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Enables the ability for the mic to remain open if the window loses focus such as when a caster tabs out to adjust settings "
},
{
"trigger": "mm_csgo_community_search_players_min",
"contents": "mm_csgo_community_search_players_min \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3. When performing CSGO community matchmaking look for servers with at least so many human players "
},
{
"trigger": "mm_datacenter_query_delay",
"contents": "mm_datacenter_query_delay \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 5. Delay after datacenter update is enabled before data is actually queried. "
},
{
"trigger": "mm_datacenter_retry_interval",
"contents": "mm_datacenter_retry_interval \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 75. Interval between datacenter stats retries. "
},
{
"trigger": "mm_datacenter_update_interval",
"contents": "mm_datacenter_update_interval \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3600. Interval between datacenter stats updates. "
},
{
"trigger": "mm_dedicated_allow",
"contents": "mm_dedicated_allow \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. 1 = allow searches for dedicated servers "
},
{
"trigger": "mm_dedicated_fake",
"contents": "mm_dedicated_fake \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. 1 = pretend like search is going, but abort after some time "
},
{
"trigger": "mm_dedicated_force_servers",
"contents": "mm_dedicated_force_servers \"${1:value}\"",
"kind": "snippet",
"details": "Comma delimited list of ip:port of servers used to search for dedicated servers instead of searching for public servers. Use syntax `publicip1:port|privateip1:port,publicip2:port|privateip2:port` if your server is behind NAT. If the server is behind NAT, you can specify `0.0.0.0|privateip:port` and if server port is in the list of `mm_server_search_lan_ports` its public address should be automatically detected. "
},
{
"trigger": "mm_dedicated_ip",
"contents": "mm_dedicated_ip \"${1:value}\"",
"kind": "snippet",
"details": "IP address of dedicated servers to consider available "
},
{
"trigger": "mm_dedicated_search_maxping",
"contents": "mm_dedicated_search_maxping \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 150. Longest preferred ping to dedicated servers for gamesMin: 25 Max: 350"
},
{
"trigger": "mm_dedicated_search_maxresults",
"contents": "mm_dedicated_search_maxresults \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 75"
},
{
"trigger": "mm_dedicated_timeout_request",
"contents": "mm_dedicated_timeout_request \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 20"
},
{
"trigger": "mm_dlcs_mask_extras",
"contents": "mm_dlcs_mask_extras \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "mm_dlcs_mask_fake",
"contents": "mm_dlcs_mask_fake \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "mm_events_listeners_validation",
"contents": "mm_events_listeners_validation \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "mm_ignored_sessions_forget_pass",
"contents": "mm_ignored_sessions_forget_pass \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 5"
},
{
"trigger": "mm_ignored_sessions_forget_time",
"contents": "mm_ignored_sessions_forget_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 600"
},
{
"trigger": "mm_match_search_update_interval",
"contents": "mm_match_search_update_interval \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 10. Interval between matchsearcher updates. "
},
{
"trigger": "mm_player_search_count",
"contents": "mm_player_search_count \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 5"
},
{
"trigger": "mm_player_search_lan_ping_duration",
"contents": "mm_player_search_lan_ping_duration \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3.5. Duration of LAN discovery ping phase. "
},
{
"trigger": "mm_player_search_lan_ping_interval",
"contents": "mm_player_search_lan_ping_interval \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.5. Interval between LAN discovery pings. "
},
{
"trigger": "mm_player_search_requests_limit",
"contents": "mm_player_search_requests_limit \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. How many friend requests are displayed. "
},
{
"trigger": "mm_player_search_update_interval",
"contents": "mm_player_search_update_interval \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 10. Interval between players searches. "
},
{
"trigger": "mm_server_search_inet_ping_interval",
"contents": "mm_server_search_inet_ping_interval \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. How long to wait between pinging internet server details. "
},
{
"trigger": "mm_server_search_inet_ping_refresh",
"contents": "mm_server_search_inet_ping_refresh \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 15. How often to refresh a listed server. "
},
{
"trigger": "mm_server_search_inet_ping_timeout",
"contents": "mm_server_search_inet_ping_timeout \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3. How long to wait for internet server details. "
},
{
"trigger": "mm_server_search_inet_ping_window",
"contents": "mm_server_search_inet_ping_window \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 10. How many servers can be pinged for server details in a batch. "
},
{
"trigger": "mm_server_search_lan_ping_duration",
"contents": "mm_server_search_lan_ping_duration \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Duration of LAN discovery ping phase. "
},
{
"trigger": "mm_server_search_lan_ping_interval",
"contents": "mm_server_search_lan_ping_interval \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.4. Interval between LAN discovery pings. "
},
{
"trigger": "mm_server_search_lan_ports",
"contents": "mm_server_search_lan_ports \"${1:value}\"",
"kind": "snippet",
"details": "Ports to scan during LAN games discovery. Also used to discover and correctly connect to dedicated LAN servers behind NATs. "
},
{
"trigger": "mm_server_search_server_lifetime",
"contents": "mm_server_search_server_lifetime \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 180. How long until a server is no longer returned by the master till we remove it. "
},
{
"trigger": "mm_server_search_update_interval",
"contents": "mm_server_search_update_interval \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 60. Interval between servers updates. "
},
{
"trigger": "mm_session_search_num_results",
"contents": "mm_session_search_num_results \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 10"
},
{
"trigger": "mm_session_search_qos_timeout",
"contents": "mm_session_search_qos_timeout \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 15"
},
{
"trigger": "mm_session_sys_connect_timeout",
"contents": "mm_session_sys_connect_timeout \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 8"
},
{
"trigger": "mm_session_sys_delay_create",
"contents": "mm_session_sys_delay_create \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "mm_session_sys_delay_create_host",
"contents": "mm_session_sys_delay_create_host \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1.2"
},
{
"trigger": "mm_session_sys_kick_ban_duration",
"contents": "mm_session_sys_kick_ban_duration \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 180"
},
{
"trigger": "mm_session_sys_pkey",
"contents": "mm_session_sys_pkey \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "mm_session_sys_ranking_timeout",
"contents": "mm_session_sys_ranking_timeout \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 12"
},
{
"trigger": "mm_session_sys_slots_guaranteed",
"contents": "mm_session_sys_slots_guaranteed \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 10"
},
{
"trigger": "mm_session_team_res_timeout",
"contents": "mm_session_team_res_timeout \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 30"
},
{
"trigger": "mm_session_voice_loading",
"contents": "mm_session_voice_loading \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "mm_sv_load_test",
"contents": "mm_sv_load_test \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "mm_teamsearch_errortime",
"contents": "mm_teamsearch_errortime \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3. Time team search is in error state until it self-cancels "
},
{
"trigger": "mm_teamsearch_nostart",
"contents": "mm_teamsearch_nostart \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Team search will fake cancel before searching for server "
},
{
"trigger": "mm_title_debug_version",
"contents": "mm_title_debug_version \"${1:value}\"",
"kind": "snippet",
"details": "This matchmaking version will override .res file version for isolating matchmaking "
},
{
"trigger": "mm_tu_string",
"contents": "mm_tu_string \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 00000000"
},
{
"trigger": "mobile_fps_increase_during_charging",
"contents": "mobile_fps_increase_during_charging \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. MOBILE_FPS_CONTROL: If true we increase framerate limit while charging "
},
{
"trigger": "mobile_fps_increase_during_hfr_animations",
"contents": "mobile_fps_increase_during_hfr_animations \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. MOBILE_FPS_CONTROL: If true we increase framerate limit during HFR-tagged animations and transitions. "
},
{
"trigger": "mobile_fps_increase_during_touch",
"contents": "mobile_fps_increase_during_touch \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. MOBILE_FPS_CONTROL: If true we increase framerate limit during touch "
},
{
"trigger": "mobile_fps_limit",
"contents": "mobile_fps_limit \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 30. MOBILE_FPS_CONTROL: Mobile FPS limit - 15, 30, 60 "
},
{
"trigger": "model_default_preview_sequence_name",
"contents": "model_default_preview_sequence_name \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "molotov_throw_detonate_time",
"contents": "molotov_throw_detonate_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2"
},
{
"trigger": "motdfile",
"contents": "motdfile \"${1:value}\"",
"kind": "snippet",
"details": "The MOTD file to load. "
},
{
"trigger": "mouse_disableinput",
"contents": "mouse_disableinput \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Set to disable mouse input "
},
{
"trigger": "mouse_inverty",
"contents": "mouse_inverty \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "mp_afterroundmoney",
"contents": "mp_afterroundmoney \"${1:value}\"",
"kind": "snippet",
"details": "amount of money awared to every player after each round "
},
{
"trigger": "mp_allowspectators",
"contents": "mp_allowspectators \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. toggles whether the server allows spectator mode or not "
},
{
"trigger": "mp_anyone_can_pickup_c4",
"contents": "mp_anyone_can_pickup_c4 \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. If set, everyone can pick up the c4, not just Ts. "
},
{
"trigger": "mp_autokick",
"contents": "mp_autokick \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Kick idle/team-killing/team-damaging players "
},
{
"trigger": "mp_autoteambalance",
"contents": "mp_autoteambalance \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "mp_backup_restore_load_autopause",
"contents": "mp_backup_restore_load_autopause \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Whether to automatically pause the match after restoring round data from backup "
},
{
"trigger": "mp_backup_round_auto",
"contents": "mp_backup_round_auto \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. If enabled will keep in-memory backups to handle reconnecting players even if the backup files aren't written to disk "
},
{
"trigger": "mp_backup_round_file",
"contents": "mp_backup_round_file \"${1:value}\"",
"kind": "snippet",
"details": "If set then server will save all played rounds information to files filename_date_time_team1_team2_mapname_roundnum_score1_score2.txt "
},
{
"trigger": "mp_backup_round_file_last",
"contents": "mp_backup_round_file_last \"${1:value}\"",
"kind": "snippet",
"details": "Every time a backup file is written the value of this convar gets updated to hold the name of the backup file. "
},
{
"trigger": "mp_backup_round_file_pattern",
"contents": "mp_backup_round_file_pattern \"${1:value}\"",
"kind": "snippet",
"details": "If set then server will save all played rounds information to files named by this pattern, e.g.'%prefix%_%date%_%time%_%team1%_%team2%_%map%_round%round%_score_%score1%_%score2%.txt' "
},
{
"trigger": "mp_bot_ai_bt",
"contents": "mp_bot_ai_bt \"${1:value}\"",
"kind": "snippet",
"details": "Use the specified behavior tree file to drive the bot behavior. "
},
{
"trigger": "mp_buy_allow_grenades",
"contents": "mp_buy_allow_grenades \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Whether players can purchase grenades from the buy menu or not. "
},
{
"trigger": "mp_buy_allow_guns",
"contents": "mp_buy_allow_guns \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 255. Whether players can purchase guns: pistols (1), SMGs (2), rifles (4), shotguns (8), sniper rifles (16), heavy MGs (32).0 Max: 255"
},
{
"trigger": "mp_buy_anywhere",
"contents": "mp_buy_anywhere \"${1:value}\"",
"kind": "snippet",
"details": "When set, players can buy anywhere, not only in buyzones. 0 = default. 1 = both teams. 2 = Terrorists. 3 = Counter-Terrorists. "
},
{
"trigger": "mp_buy_during_immunity",
"contents": "mp_buy_during_immunity \"${1:value}\"",
"kind": "snippet",
"details": "When set, players can buy when immune, ignoring buytime. 0 = default. 1 = both teams. 2 = Terrorists. 3 = Counter-Terrorists. "
},
{
"trigger": "mp_buytime",
"contents": "mp_buytime \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 90. How many seconds after round start players can buy items for.0 "
},
{
"trigger": "mp_c4_cannot_be_defused",
"contents": "mp_c4_cannot_be_defused \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. If set, the planted c4 cannot be defused. "
},
{
"trigger": "mp_c4timer",
"contents": "mp_c4timer \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 40. how long from when the C4 is armed until it blowsMin: 10 "
},
{
"trigger": "mp_chattime",
"contents": "mp_chattime \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 10. amount of time players can chat after the game is overMin: 1 Max: 120"
},
{
"trigger": "mp_competitive_endofmatch_extra_time",
"contents": "mp_competitive_endofmatch_extra_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 15. After a competitive match finishes rematch voting extra time is given for rankings. "
},
{
"trigger": "mp_consecutive_loss_aversion",
"contents": "mp_consecutive_loss_aversion \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. How loss streak is affected with round win: 0 = win fully resets loss bonus, 1 = first win steps down loss bonus, 2 = first win holds loss bonus and step down starting with second win0 "
},
{
"trigger": "mp_consecutive_loss_max",
"contents": "mp_consecutive_loss_max \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 4. 0 "
},
{
"trigger": "mp_coop_force_join_ct",
"contents": "mp_coop_force_join_ct \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. If set, real players will auto join CT on join. "
},
{
"trigger": "mp_coopmission_bot_difficulty_offset",
"contents": "mp_coopmission_bot_difficulty_offset \"${1:value}\"",
"kind": "snippet",
"details": "The difficulty offset modifier for bots during coop missions. "
},
{
"trigger": "mp_coopmission_mission_number",
"contents": "mp_coopmission_mission_number \"${1:value}\"",
"kind": "snippet",
"details": "Which mission the map should run after it loads. "
},
{
"trigger": "mp_coopterrorhunt_kill_add_time",
"contents": "mp_coopterrorhunt_kill_add_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 10. The number of seconds added to the clock when players get a kill. "
},
{
"trigger": "mp_coopterrorhunt_num_enemies",
"contents": "mp_coopterrorhunt_num_enemies \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 20. The number of enemies CTs have to hunt and kill. "
},
{
"trigger": "mp_ct_default_grenades",
"contents": "mp_ct_default_grenades \"${1:value}\"",
"kind": "snippet",
"details": "The default grenades that the CTs will spawn with. To give multiple grenades, separate each weapon class with a space like this: 'weapon_molotov weapon_hegrenade' "
},
{
"trigger": "mp_ct_default_melee",
"contents": "mp_ct_default_melee \"${1:value}\"",
"kind": "snippet",
"details": "The default melee weapon that the CTs will spawn with. Even if this is blank, a knife will be given. To give a taser, it should look like this: 'weapon_knife weapon_taser'. Remember to set mp_weapons_allow_zeus to 1 if you want to give a taser! "
},
{
"trigger": "mp_ct_default_primary",
"contents": "mp_ct_default_primary \"${1:value}\"",
"kind": "snippet",
"details": "The default primary (rifle) weapon that the CTs will spawn with "
},
{
"trigger": "mp_ct_default_secondary",
"contents": "mp_ct_default_secondary \"${1:value}\"",
"kind": "snippet",
"details": "The default secondary (pistol) weapon that the CTs will spawn with "
},
{
"trigger": "mp_damage_headshot_only",
"contents": "mp_damage_headshot_only \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Determines whether non-headshot hits do any damage. "
},
{
"trigger": "mp_damage_scale_ct_body",
"contents": "mp_damage_scale_ct_body \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Scales the damage a CT player takes by this much when they take damage in the body. (1 == 100%, 0.5 == 50%) "
},
{
"trigger": "mp_damage_scale_ct_head",
"contents": "mp_damage_scale_ct_head \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Scales the damage a CT player takes by this much when they take damage in the head (1 == 100%, 0.5 == 50%). REMEMBER! headshots do 4x the damage of the body before this scaler is applied. "
},
{
"trigger": "mp_damage_scale_t_body",
"contents": "mp_damage_scale_t_body \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Scales the damage a T player takes by this much when they take damage in the body. (1 == 100%, 0.5 == 50%) "
},
{
"trigger": "mp_damage_scale_t_head",
"contents": "mp_damage_scale_t_head \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Scales the damage a T player takes by this much when they take damage in the head (1 == 100%, 0.5 == 50%). REMEMBER! headshots do 4x the damage of the body before this scaler is applied. "
},
{
"trigger": "mp_damage_vampiric_amount",
"contents": "mp_damage_vampiric_amount \"${1:value}\"",
"kind": "snippet",
"details": "If Set to non-0, will determine the fraction of damage dealt that will be given to attacker. "
},
{
"trigger": "mp_death_drop_breachcharge",
"contents": "mp_death_drop_breachcharge \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Drop breachcharge on player death "
},
{
"trigger": "mp_death_drop_c4",
"contents": "mp_death_drop_c4 \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Whether c4 is droppable "
},
{
"trigger": "mp_death_drop_defuser",
"contents": "mp_death_drop_defuser \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Drop defuser on player death "
},
{
"trigger": "mp_death_drop_grenade",
"contents": "mp_death_drop_grenade \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2. Which grenade to drop on player death: 0=none, 1=best, 2=current or best, 3=all grenades0 Max: 2"
},
{
"trigger": "mp_death_drop_gun",
"contents": "mp_death_drop_gun \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Which gun to drop on player death: 0=none, 1=best, 2=current or best0 Max: 2"
},
{
"trigger": "mp_death_drop_healthshot",
"contents": "mp_death_drop_healthshot \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Drop healthshot on player death "
},
{
"trigger": "mp_death_drop_taser",
"contents": "mp_death_drop_taser \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Drop taser on player death "
},
{
"trigger": "mp_deathcam_skippable",
"contents": "mp_deathcam_skippable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Determines whether a player can early-out of the deathcam. "
},
{
"trigger": "mp_default_team_winner_no_objective",
"contents": "mp_default_team_winner_no_objective \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. If the map doesn't define an objective (bomb, hostage, etc), the value of this convar will declare the winner when the time runs out in the round. "
},
{
"trigger": "mp_defuser_allocation",
"contents": "mp_defuser_allocation \"${1:value}\"",
"kind": "snippet",
"details": "How to allocate defusers to CTs at start or round: 0=none, 1=random, 2=everyone0 Max: 2"
},
{
"trigger": "mp_disconnect_kills_bots",
"contents": "mp_disconnect_kills_bots \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. When a bot disconnects, kill them first. Requires mp_disconnect_kills_players. "
},
{
"trigger": "mp_disconnect_kills_players",
"contents": "mp_disconnect_kills_players \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. When a player disconnects, kill them first (triggering item drops, stats, etc.) "
},
{
"trigger": "mp_display_kill_assists",
"contents": "mp_display_kill_assists \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Whether to display and score player assists "
},
{
"trigger": "mp_dm_bonus_length_max",
"contents": "mp_dm_bonus_length_max \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 30. Maximum time the bonus time will last (in seconds) "
},
{
"trigger": "mp_dm_bonus_length_min",
"contents": "mp_dm_bonus_length_min \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 30. Minimum time the bonus time will last (in seconds) "
},
{
"trigger": "mp_dm_bonus_percent",
"contents": "mp_dm_bonus_percent \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 50. Percent of points additionally awarded when someone gets a kill with the bonus weapon during the bonus period.0 "
},
{
"trigger": "mp_dm_bonusweapon_dogtags",
"contents": "mp_dm_bonusweapon_dogtags \"${1:value}\"",
"kind": "snippet",
"details": "Additional dogtags to drop when making a kill with the bonus weapon "
},
{
"trigger": "mp_dm_dogtag_score",
"contents": "mp_dm_dogtag_score \"${1:value}\"",
"kind": "snippet",
"details": "Points to award for picking up a dogtag in deathmatch.0 "
},
{
"trigger": "mp_dm_healthshot_killcount",
"contents": "mp_dm_healthshot_killcount \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3. Grant healthshots in deathmatch after n kills "
},
{
"trigger": "mp_dm_kill_base_score",
"contents": "mp_dm_kill_base_score \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 10. Number of base points to award for a kill in deathmatch. Cheaper weapons award 1 or 2 additional points.0 "
},
{
"trigger": "mp_dm_teammode",
"contents": "mp_dm_teammode \"${1:value}\"",
"kind": "snippet",
"details": "In deathmatch, enables team DM visuals & scoring (0: personal, 1: team mode, 2: use team contribution score) "
},
{
"trigger": "mp_dm_teammode_bonus_score",
"contents": "mp_dm_teammode_bonus_score \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Team deathmatch victory points to award for kill with bonus weapon "
},
{
"trigger": "mp_dm_teammode_dogtag_score",
"contents": "mp_dm_teammode_dogtag_score \"${1:value}\"",
"kind": "snippet",
"details": "Team deathmatch victory points to award for collecting enemy dogtags "
},
{
"trigger": "mp_dm_teammode_kill_score",
"contents": "mp_dm_teammode_kill_score \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Team deathmatch victory points to award for enemy kill "
},
{
"trigger": "mp_dm_time_between_bonus_max",
"contents": "mp_dm_time_between_bonus_max \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 40. Maximum time a bonus time will start after the round start or after the last bonus (in seconds) "
},
{
"trigger": "mp_dm_time_between_bonus_min",
"contents": "mp_dm_time_between_bonus_min \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 30. Minimum time a bonus time will start after the round start or after the last bonus (in seconds) "
},
{
"trigger": "mp_dogtag_despawn_on_killer_death",
"contents": "mp_dogtag_despawn_on_killer_death \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Whether dogtags should despawn when their killer dies "
},
{
"trigger": "mp_dogtag_despawn_time",
"contents": "mp_dogtag_despawn_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 120. How many seconds dogtags should stay around before despawning automatically (0 = infinite)0 "
},
{
"trigger": "mp_dogtag_pickup_rule",
"contents": "mp_dogtag_pickup_rule \"${1:value}\"",
"kind": "snippet",
"details": "Who is eligible to pick up a dogtag (0 = killer only, 1 = killer's team, 2 = victim's team, 3 = killer & victim's team, 4 = anyone) "
},
{
"trigger": "mp_drop_grenade_enable",
"contents": "mp_drop_grenade_enable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Allows players to drop grenades. "
},
{
"trigger": "mp_drop_knife_enable",
"contents": "mp_drop_knife_enable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Allows players to drop knives. "
},
{
"trigger": "mp_economy_reset_rounds",
"contents": "mp_economy_reset_rounds \"${1:value}\"",
"kind": "snippet",
"details": "Reset all player money every N rounds (0 for never) "
},
{
"trigger": "mp_endmatch_votenextleveltime",
"contents": "mp_endmatch_votenextleveltime \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 20. If mp_endmatch_votenextmap is set, players have this much time to vote on the next map at match end. "
},
{
"trigger": "mp_endmatch_votenextmap",
"contents": "mp_endmatch_votenextmap \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Whether or not players vote for the next map at the end of the match when the final scoreboard comes up "
},
{
"trigger": "mp_endmatch_votenextmap_keepcurrent",
"contents": "mp_endmatch_votenextmap_keepcurrent \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. If set, keeps the current map in the list of voting options. If not set, the current map will not appear in the list of voting options. "
},
{
"trigger": "mp_endmatch_votenextmap_wargames_modes",
"contents": "mp_endmatch_votenextmap_wargames_modes \"${1:value}\"",
"kind": "snippet",
"details": "Modes available for endmatch voting during War Games. Separate names with spaces. "
},
{
"trigger": "mp_endmatch_votenextmap_wargames_nummaps",
"contents": "mp_endmatch_votenextmap_wargames_nummaps \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3. Maximum number of maps to include in endmatch voting during War Games "
},
{
"trigger": "mp_endmatch_votenextmap_wargames_nummodes",
"contents": "mp_endmatch_votenextmap_wargames_nummodes \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Maximum number of other War Games to include in endmatch voting during War Games "
},
{
"trigger": "mp_endwarmup_player_count",
"contents": "mp_endwarmup_player_count \"${1:value}\"",
"kind": "snippet",
"details": "Number of players required to be connected to end warmup early. 0 to require maximum players for mode. "
},
{
"trigger": "mp_equipment_reset_rounds",
"contents": "mp_equipment_reset_rounds \"${1:value}\"",
"kind": "snippet",
"details": "Reset all player equipment every N rounds (0 for never) "
},
{
"trigger": "mp_fadetoblack",
"contents": "mp_fadetoblack \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. fade a player's screen to black when he dies "
},
{
"trigger": "mp_fists_replace_melee",
"contents": "mp_fists_replace_melee \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. If enabled then when melee weapon is dropped player will have fists, when melee weapon is picked up then fists are unavailable "
},
{
"trigger": "mp_flinch_punch_scale",
"contents": "mp_flinch_punch_scale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3. Scalar for first person view punch when getting hit. "
},
{
"trigger": "mp_footsteps_serverside",
"contents": "mp_footsteps_serverside \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Makes the server always play footstep sounds. Clients never calculate footstep sounds locally, instead relying on the server. "
},
{
"trigger": "mp_force_pick_time",
"contents": "mp_force_pick_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 15. The amount of time a player has on the team screen to make a selection before being auto-teamed "
},
{
"trigger": "mp_forcecamera",
"contents": "mp_forcecamera \"${1:value}\"",
"kind": "snippet",
"details": "Restricts spectator modes for dead players "
},
{
"trigger": "mp_forcerespawn",
"contents": "mp_forcerespawn \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "mp_fraglimit",
"contents": "mp_fraglimit \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "mp_free_armor",
"contents": "mp_free_armor \"${1:value}\"",
"kind": "snippet",
"details": "Determines whether kevlar (1+) and/or helmet (2+) are given automatically. "
},
{
"trigger": "mp_freezetime",
"contents": "mp_freezetime \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 6. how many seconds to keep players frozen when the round starts0 Max: 60"
},
{
"trigger": "mp_friendlyfire",
"contents": "mp_friendlyfire \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Allows team members to injure other members of their team "
},
{
"trigger": "mp_give_player_c4",
"contents": "mp_give_player_c4 \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Whether this map should spawn a c4 bomb for a player or not. "
},
{
"trigger": "mp_global_damage_per_second",
"contents": "mp_global_damage_per_second \"${1:value}\"",
"kind": "snippet",
"details": "If above 0, deal non-lethal damage to players over time.0 "
},
{
"trigger": "mp_guardian_ai_bt_difficulty_adjust_wave_interval",
"contents": "mp_guardian_ai_bt_difficulty_adjust_wave_interval \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Adjust the guardian bots' difficulty every nth guardian wave when using behavior trees. "
},
{
"trigger": "mp_guardian_ai_bt_difficulty_cap_beginning_round",
"contents": "mp_guardian_ai_bt_difficulty_cap_beginning_round \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2. Starting this round a difficulty cap will be applied to the bots. "
},
{
"trigger": "mp_guardian_ai_bt_difficulty_initial_value",
"contents": "mp_guardian_ai_bt_difficulty_initial_value \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2. Starting difficulty level for the gardian bots. "
},
{
"trigger": "mp_guardian_ai_bt_difficulty_max_next_level_bots",
"contents": "mp_guardian_ai_bt_difficulty_max_next_level_bots \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3. How many bots to increase difficulty per wave - this many easier bots will get harder. "
},
{
"trigger": "mp_guardian_bomb_plant_custom_x_mark_location",
"contents": "mp_guardian_bomb_plant_custom_x_mark_location \"${1:value}\"",
"kind": "snippet",
"details": "x,y,z to display an X for the bomb plant in guardian missions with custom bomb plant boundaries. "
},
{
"trigger": "mp_guardian_bot_money_per_wave",
"contents": "mp_guardian_bot_money_per_wave \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 800. The amount of money bots get time each wave the players complete. This # is absolute and not additive, the money is set to (this)x(wave#) for each bot on each wave. "
},
{
"trigger": "mp_guardian_draw_bounds",
"contents": "mp_guardian_draw_bounds \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "mp_guardian_force_collect_hostages_timeout",
"contents": "mp_guardian_force_collect_hostages_timeout \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 50. Force bots to collect hostages after this amount of time if no enemy has been seen. "
},
{
"trigger": "mp_guardian_give_random_grenades_to_bots",
"contents": "mp_guardian_give_random_grenades_to_bots \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. If set guardian bots will be given grenades at the beginning of the wave. "
},
{
"trigger": "mp_guardian_loc_string_hud",
"contents": "mp_guardian_loc_string_hud \"${1:value}\"",
"kind": "snippet",
"details": "Loc string token to use on hud for this mission, otherwise default to kills with weapon. "
},
{
"trigger": "mp_guardian_loc_weapon",
"contents": "mp_guardian_loc_weapon \"${1:value}\"",
"kind": "snippet",
"details": "Override to weapon dialog var applied to UI "
},
{
"trigger": "mp_guardian_player_dist_max",
"contents": "mp_guardian_player_dist_max \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2000. The maximum distance a player is allowed to get from the bombsite before they're killed. "
},
{
"trigger": "mp_guardian_player_dist_min",
"contents": "mp_guardian_player_dist_min \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1300. The distance at which we start to warn a player when they are too far from the guarded bombsite. "
},
{
"trigger": "mp_guardian_special_kills_needed",
"contents": "mp_guardian_special_kills_needed \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 10. The number of kills needed with a specific weapon. "
},
{
"trigger": "mp_guardian_special_weapon_needed",
"contents": "mp_guardian_special_weapon_needed \"${1:value}\"",
"kind": "snippet",
"details": "The weapon that needs to be used to increment the kills needed to complete the mission. "
},
{
"trigger": "mp_guardian_target_site",
"contents": "mp_guardian_target_site \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. If set to the index of a bombsite, will cause random spawns to be only created near that site. "
},
{
"trigger": "mp_halftime",
"contents": "mp_halftime \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Determines whether the match switches sides in a halftime event. "
},
{
"trigger": "mp_halftime_duration",
"contents": "mp_halftime_duration \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 15. Target number of seconds that halftime lasts; shortened if team intros are active0 Max: 300"
},
{
"trigger": "mp_halftime_pausematch",
"contents": "mp_halftime_pausematch \"${1:value}\"",
"kind": "snippet",
"details": "Set to 1 to pause match after halftime countdown elapses. Match must be resumed by vote or admin. "
},
{
"trigger": "mp_halftime_pausetimer",
"contents": "mp_halftime_pausetimer \"${1:value}\"",
"kind": "snippet",
"details": "Set to 1 to stay in halftime indefinitely. Set to 0 to resume the timer. "
},
{
"trigger": "mp_heavyassaultsuit_aimpunch",
"contents": "mp_heavyassaultsuit_aimpunch \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. How much EXTRA aim punch will happen when a player wearing the assault suit gets when shot "
},
{
"trigger": "mp_heavyassaultsuit_cooldown",
"contents": "mp_heavyassaultsuit_cooldown \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 5. Determines cooldown of purchase. "
},
{
"trigger": "mp_heavyassaultsuit_deploy_timescale",
"contents": "mp_heavyassaultsuit_deploy_timescale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.8. How fast a player wearing the heavy assault suit will draw their weapon (1.0 = normal speed, 0.5 = half speed) "
},
{
"trigger": "mp_heavyassaultsuit_speed",
"contents": "mp_heavyassaultsuit_speed \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 130. The max speed of a player when they are wearing the heavy assault suit "
},
{
"trigger": "mp_heavybot_damage_reduction_scale",
"contents": "mp_heavybot_damage_reduction_scale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. How much damage should scale when the player wearing the heavy assault suit is shot (1.0 = no change, 0.5 = half damage) "
},
{
"trigger": "mp_hostagepenalty",
"contents": "mp_hostagepenalty \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 10. Terrorist are kicked for killing too much hostages "
},
{
"trigger": "mp_hostages_max",
"contents": "mp_hostages_max \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2. Maximum number of hostages to spawn. "
},
{
"trigger": "mp_hostages_rescuetime",
"contents": "mp_hostages_rescuetime \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Additional time added to round time if a hostage is reached by a CT. "
},
{
"trigger": "mp_hostages_rescuetowin",
"contents": "mp_hostages_rescuetowin \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. 0 == all alive, any other number is the number the CT's need to rescue to win the round. "
},
{
"trigger": "mp_hostages_run_speed_modifier",
"contents": "mp_hostages_run_speed_modifier \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Default is 1.0, slow down hostages by setting this to < 1.0.Min: 0.1 Max: 1.5"
},
{
"trigger": "mp_hostages_spawn_farthest",
"contents": "mp_hostages_spawn_farthest \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. When enabled will consistently force the farthest hostages to spawn. "
},
{
"trigger": "mp_hostages_spawn_force_positions",
"contents": "mp_hostages_spawn_force_positions \"${1:value}\"",
"kind": "snippet",
"details": "Comma separated list of zero based indices to force spawn positions, e.g. '0,2' or '1,6' "
},
{
"trigger": "mp_hostages_spawn_force_positions_xyz",
"contents": "mp_hostages_spawn_force_positions_xyz \"${1:value}\"",
"kind": "snippet",
"details": "Comma separated list of xyz locations to force spawn positions, e.g. 'x1 y1 z1,x2 y2 z2' "
},
{
"trigger": "mp_hostages_spawn_same_every_round",
"contents": "mp_hostages_spawn_same_every_round \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. 0 = spawn hostages randomly every round, 1 = same spawns for entire match. "
},
{
"trigger": "mp_hostages_takedamage",
"contents": "mp_hostages_takedamage \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Whether or not hostages can be hurt. "
},
{
"trigger": "mp_humanteam",
"contents": "mp_humanteam \"${1:value}\"",
"kind": "snippet",
"details": "Restricts human players to a single team {any, CT, T} "
},
{
"trigger": "mp_ignore_round_win_conditions",
"contents": "mp_ignore_round_win_conditions \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Ignore conditions which would end the current round "
},
{
"trigger": "mp_items_prohibited",
"contents": "mp_items_prohibited \"${1:value}\"",
"kind": "snippet",
"details": "Set this convar to a comma-delimited list of definition indices of weapons that should be prohibited from use. "
},
{
"trigger": "mp_join_grace_time",
"contents": "mp_join_grace_time \"${1:value}\"",
"kind": "snippet",
"details": "Number of seconds after round start to allow a player to join a game0 Max: 30"
},
{
"trigger": "mp_limitteams",
"contents": "mp_limitteams \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2. Max # of players 1 team can have over another (0 disables check)0 Max: 30"
},
{
"trigger": "mp_logdetail",
"contents": "mp_logdetail \"${1:value}\"",
"kind": "snippet",
"details": "Logs attacks. Values are: 0=off, 1=enemy, 2=teammate, 3=both)0 Max: 3"
},
{
"trigger": "mp_logdetail_items",
"contents": "mp_logdetail_items \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Logs a line any time a player acquires or loses an item. "
},
{
"trigger": "mp_logdistance_2d",
"contents": "mp_logdistance_2d \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 250. Enables distance logging every so many units "
},
{
"trigger": "mp_logdistance_sec",
"contents": "mp_logdistance_sec \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 15. Enables distance logging every so many seconds "
},
{
"trigger": "mp_logloadouts",
"contents": "mp_logloadouts \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Enables distance logging with full loadouts "
},
{
"trigger": "mp_logmoney",
"contents": "mp_logmoney \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Enables money logging. Values are: 0=off, 1=on "
},
{
"trigger": "mp_match_can_clinch",
"contents": "mp_match_can_clinch \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Can a team clinch and end the match by being so far ahead that the other team has no way to catching up? "
},
{
"trigger": "mp_match_end_changelevel",
"contents": "mp_match_end_changelevel \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. At the end of the match, perform a changelevel even if next map is the same "
},
{
"trigger": "mp_match_end_restart",
"contents": "mp_match_end_restart \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. At the end of the match, perform a restart instead of loading a new map "
},
{
"trigger": "mp_match_restart_delay",
"contents": "mp_match_restart_delay \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 25. Time (in seconds) until a match restarts.Min: 1 Max: 9999"
},
{
"trigger": "mp_max_armor",
"contents": "mp_max_armor \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2. Determines the highest level of armor allowed to be purchased. (0) None, (1) Kevlar, (2) Helmet "
},
{
"trigger": "mp_maxmoney",
"contents": "mp_maxmoney \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 16000. maximum amount of money allowed in a player's account0 "
},
{
"trigger": "mp_maxrounds",
"contents": "mp_maxrounds \"${1:value}\"",
"kind": "snippet",
"details": "max number of rounds to play before server changes maps0 "
},
{
"trigger": "mp_min_halftime_duration",
"contents": "mp_min_halftime_duration \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 8.5. Minimum number of seconds that halftime lasts even if team intros are active0 Max: 300"
},
{
"trigger": "mp_only_cts_rescue_hostages",
"contents": "mp_only_cts_rescue_hostages \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "mp_overtime_enable",
"contents": "mp_overtime_enable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. If a match ends in a tie, use overtime rules to determine winner "
},
{
"trigger": "mp_overtime_halftime_pausetimer",
"contents": "mp_overtime_halftime_pausetimer \"${1:value}\"",
"kind": "snippet",
"details": "If set to 1 will set mp_halftime_pausetimer to 1 before every half of overtime. Set mp_halftime_pausetimer to 0 to resume the timer. "
},
{
"trigger": "mp_overtime_limit",
"contents": "mp_overtime_limit \"${1:value}\"",
"kind": "snippet",
"details": "When overtime is enabled, only so many overtimes can be played "
},
{
"trigger": "mp_overtime_maxrounds",
"contents": "mp_overtime_maxrounds \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 6. When overtime is enabled play additional rounds to determine winner "
},
{
"trigger": "mp_overtime_startmoney",
"contents": "mp_overtime_startmoney \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 10000. Money assigned to all players at start of every overtime half "
},
{
"trigger": "mp_plant_c4_anywhere",
"contents": "mp_plant_c4_anywhere \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "mp_playercashawards",
"contents": "mp_playercashawards \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Players can earn money by performing in-game actions "
},
{
"trigger": "mp_playerid",
"contents": "mp_playerid \"${1:value}\"",
"kind": "snippet",
"details": "Controls what information player see in the status bar: 0 all names; 1 team names; 2 no names0 Max: 2"
},
{
"trigger": "mp_playerid_delay",
"contents": "mp_playerid_delay \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.4. Number of seconds to delay showing information in the status bar0 Max: 1"
},
{
"trigger": "mp_playerid_hold",
"contents": "mp_playerid_hold \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.1. Number of seconds to keep showing old information in the status bar0 Max: 1"
},
{
"trigger": "mp_randomspawn",
"contents": "mp_randomspawn \"${1:value}\"",
"kind": "snippet",
"details": "Determines whether players are to spawn. 0 = default; 1 = both teams; 2 = Terrorists; 3 = CTs. "
},
{
"trigger": "mp_randomspawn_dist",
"contents": "mp_randomspawn_dist \"${1:value}\"",
"kind": "snippet",
"details": "If using mp_randomspawn, determines whether to test distance when selecting this spot. "
},
{
"trigger": "mp_randomspawn_los",
"contents": "mp_randomspawn_los \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. If using mp_randomspawn, determines whether to test Line of Sight when spawning. "
},
{
"trigger": "mp_require_gun_use_to_acquire",
"contents": "mp_require_gun_use_to_acquire \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Whether guns must be +used to acquire or default is touch-to-pickup "
},
{
"trigger": "mp_respawn_immunitytime",
"contents": "mp_respawn_immunitytime \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 4. How many seconds after respawn immunity lasts. Set to negative value to disable warmup immunity. "
},
{
"trigger": "mp_respawn_on_death_ct",
"contents": "mp_respawn_on_death_ct \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. When set to 1, counter-terrorists will respawn after dying. "
},
{
"trigger": "mp_respawn_on_death_t",
"contents": "mp_respawn_on_death_t \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. When set to 1, terrorists will respawn after dying. "
},
{
"trigger": "mp_respawnwavetime_ct",
"contents": "mp_respawnwavetime_ct \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 10. Time between respawn waves for CTs. "
},
{
"trigger": "mp_respawnwavetime_t",
"contents": "mp_respawnwavetime_t \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 10. Time between respawn waves for Terrorists. "
},
{
"trigger": "mp_restartgame",
"contents": "mp_restartgame \"${1:value}\"",
"kind": "snippet",
"details": "If non-zero, game will restart in the specified number of seconds "
},
{
"trigger": "mp_retake_ct_count",
"contents": "mp_retake_ct_count \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 4. Number of CT's when playing retakes. "
},
{
"trigger": "mp_retake_ct_loadout_bonus_card",
"contents": "mp_retake_ct_loadout_bonus_card \"${1:value}\"",
"kind": "snippet",
"details": "CT bonus card for full buy round when playing bomb site retake. "
},
{
"trigger": "mp_retake_ct_loadout_bonus_card_availability",
"contents": "mp_retake_ct_loadout_bonus_card_availability \"${1:value}\"",
"kind": "snippet",
"details": "CT bonus card availability pattern for full buy round when playing bomb site retake. "
},
{
"trigger": "mp_retake_ct_loadout_default_pistol_round",
"contents": "mp_retake_ct_loadout_default_pistol_round \"${1:value}\"",
"kind": "snippet",
"details": "CT Loadouts for default pistol round when playing bomb site retake. "
},
{
"trigger": "mp_retake_ct_loadout_enemy_card",
"contents": "mp_retake_ct_loadout_enemy_card \"${1:value}\"",
"kind": "snippet",
"details": "CT enemy card for full buy round when playing bomb site retake. "
},
{
"trigger": "mp_retake_ct_loadout_full_buy_round",
"contents": "mp_retake_ct_loadout_full_buy_round \"${1:value}\"",
"kind": "snippet",
"details": "CT Loadouts for full buy round when playing bomb site retake. "
},
{
"trigger": "mp_retake_ct_loadout_light_buy_round",
"contents": "mp_retake_ct_loadout_light_buy_round \"${1:value}\"",
"kind": "snippet",
"details": "CT Loadouts for force buy round when playing bomb site retake. "
},
{
"trigger": "mp_retake_ct_loadout_upgraded_pistol_round",
"contents": "mp_retake_ct_loadout_upgraded_pistol_round \"${1:value}\"",
"kind": "snippet",
"details": "CT Loadouts for upgraded pistol round when playing bomb site retake. "
},
{
"trigger": "mp_retake_max_consecutive_rounds_same_target_site",
"contents": "mp_retake_max_consecutive_rounds_same_target_site \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2. Limit the number of consecutive rounds targeting the same site. "
},
{
"trigger": "mp_retake_t_count",
"contents": "mp_retake_t_count \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3. Number of terrorists when playing retakes. "
},
{
"trigger": "mp_retake_t_loadout_bonus_card",
"contents": "mp_retake_t_loadout_bonus_card \"${1:value}\"",
"kind": "snippet",
"details": "T bonus card for full buy round when playing bomb site retake. "
},
{
"trigger": "mp_retake_t_loadout_bonus_card_availability",
"contents": "mp_retake_t_loadout_bonus_card_availability \"${1:value}\"",
"kind": "snippet",
"details": "T bonus card availability pattern for full buy round when playing bomb site retake. "
},
{
"trigger": "mp_retake_t_loadout_default_pistol_round",
"contents": "mp_retake_t_loadout_default_pistol_round \"${1:value}\"",
"kind": "snippet",
"details": "T Loadouts for default pistol round when playing bomb site retake. "
},
{
"trigger": "mp_retake_t_loadout_enemy_card",
"contents": "mp_retake_t_loadout_enemy_card \"${1:value}\"",
"kind": "snippet",
"details": "T enemy card for full buy round when playing bomb site retake. "
},
{
"trigger": "mp_retake_t_loadout_full_buy_round",
"contents": "mp_retake_t_loadout_full_buy_round \"${1:value}\"",
"kind": "snippet",
"details": "T Loadouts for full buy round when playing bomb site retake. "
},
{
"trigger": "mp_retake_t_loadout_light_buy_round",
"contents": "mp_retake_t_loadout_light_buy_round \"${1:value}\"",
"kind": "snippet",
"details": "T Loadouts for force buy round when playing bomb site retake. "
},
{
"trigger": "mp_retake_t_loadout_upgraded_pistol_round",
"contents": "mp_retake_t_loadout_upgraded_pistol_round \"${1:value}\"",
"kind": "snippet",
"details": "T Loadouts for upgraded pistol round when playing bomb site retake. "
},
{
"trigger": "mp_round_restart_delay",
"contents": "mp_round_restart_delay \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 7. Number of seconds to delay before restarting a round after a win0 "
},
{
"trigger": "mp_roundtime",
"contents": "mp_roundtime \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 5. How many minutes each round takes.Min: 0.1 Max: 60"
},
{
"trigger": "mp_roundtime_defuse",
"contents": "mp_roundtime_defuse \"${1:value}\"",
"kind": "snippet",
"details": "How many minutes each round of Bomb Defuse takes. If 0 then use mp_roundtime instead.0 Max: 60"
},
{
"trigger": "mp_roundtime_deployment",
"contents": "mp_roundtime_deployment \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 5. How many minutes deployment for coop mission takes.Min: 1 Max: 15"
},
{
"trigger": "mp_roundtime_hostage",
"contents": "mp_roundtime_hostage \"${1:value}\"",
"kind": "snippet",
"details": "How many minutes each round of Hostage Rescue takes. If 0 then use mp_roundtime instead.0 Max: 60"
},
{
"trigger": "mp_shield_speed_deployed",
"contents": "mp_shield_speed_deployed \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 170. The max speed of a player when they have a shield deployed "
},
{
"trigger": "mp_shield_speed_holstered",
"contents": "mp_shield_speed_holstered \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 200. The max speed of a player when they have a shield holstered "
},
{
"trigger": "mp_shorthanded_cash_bonus_ignore_kicked",
"contents": "mp_shorthanded_cash_bonus_ignore_kicked \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Determines whether kicked players are included in the assessment for short-handedness "
},
{
"trigger": "mp_shorthanded_cash_bonus_round_delay",
"contents": "mp_shorthanded_cash_bonus_round_delay \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2. number of previous rounds that a team needs to have been shorthanded before they are eligible for the short-handed bonus "
},
{
"trigger": "mp_solid_teammates",
"contents": "mp_solid_teammates \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. How solid are teammates: 0 = transparent; 1 = fully solid; 2 = can stand on top of heads "
},
{
"trigger": "mp_spawnprotectiontime",
"contents": "mp_spawnprotectiontime \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 5. Kick players who team-kill within this many seconds of a round restart. "
},
{
"trigger": "mp_spec_swapplayersides",
"contents": "mp_spec_swapplayersides \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Toggle set the player names and team names to the opposite side in which they are are on the spectator panel. "
},
{
"trigger": "mp_spectators_max",
"contents": "mp_spectators_max \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2. How many spectators are allowed in a match.0 "
},
{
"trigger": "mp_starting_losses",
"contents": "mp_starting_losses \"${1:value}\"",
"kind": "snippet",
"details": "Determines what the initial loss streak is.0 "
},
{
"trigger": "mp_startmoney",
"contents": "mp_startmoney \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 800. amount of money each player gets when they reset0 "
},
{
"trigger": "mp_suicide_penalty",
"contents": "mp_suicide_penalty \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Punish players for suicides "
},
{
"trigger": "mp_t_default_grenades",
"contents": "mp_t_default_grenades \"${1:value}\"",
"kind": "snippet",
"details": "The default grenades that the Ts will spawn with. To give multiple grenades, separate each weapon class with a space like this: 'weapon_molotov weapon_hegrenade' "
},
{
"trigger": "mp_t_default_melee",
"contents": "mp_t_default_melee \"${1:value}\"",
"kind": "snippet",
"details": "The default melee weapon that the Ts will spawn with "
},
{
"trigger": "mp_t_default_primary",
"contents": "mp_t_default_primary \"${1:value}\"",
"kind": "snippet",
"details": "The default primary (rifle) weapon that the Ts will spawn with "
},
{
"trigger": "mp_t_default_secondary",
"contents": "mp_t_default_secondary \"${1:value}\"",
"kind": "snippet",
"details": "The default secondary (pistol) weapon that the Ts will spawn with "
},
{
"trigger": "mp_tagging_scale",
"contents": "mp_tagging_scale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Scalar for player tagging modifier when hit. Lower values for greater tagging. "
},
{
"trigger": "mp_taser_recharge_time",
"contents": "mp_taser_recharge_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. Determines recharge time for taser. -1 = disabled. "
},
{
"trigger": "mp_td_dmgtokick",
"contents": "mp_td_dmgtokick \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 300. The damage threshhold players have to exceed in a match to get kicked. "
},
{
"trigger": "mp_td_dmgtowarn",
"contents": "mp_td_dmgtowarn \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 200. The damage threshhold players have to exceed in a match to get warned that they are about to be kicked. "
},
{
"trigger": "mp_td_spawndmgthreshold",
"contents": "mp_td_spawndmgthreshold \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 50. The damage threshold players have to exceed at the start of the round to be warned/kick. "
},
{
"trigger": "mp_team_intro_time",
"contents": "mp_team_intro_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 6.5. How many seconds for team intro0 "
},
{
"trigger": "mp_team_timeout_max",
"contents": "mp_team_timeout_max \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Number of timeouts each team gets per match. "
},
{
"trigger": "mp_team_timeout_ot_add_each",
"contents": "mp_team_timeout_ot_add_each \"${1:value}\"",
"kind": "snippet",
"details": "Number of timeouts to add for each team when match goes to 2nd and each next overtime. "
},
{
"trigger": "mp_team_timeout_ot_add_once",
"contents": "mp_team_timeout_ot_add_once \"${1:value}\"",
"kind": "snippet",
"details": "Number of timeouts to add for each team when regulation time ends and match goes to overtime. "
},
{
"trigger": "mp_team_timeout_ot_max",
"contents": "mp_team_timeout_ot_max \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Max number of timeouts each team can have per OT after all OT timeouts got added. "
},
{
"trigger": "mp_team_timeout_time",
"contents": "mp_team_timeout_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 60. Duration of each timeout. "
},
{
"trigger": "mp_teamcashawards",
"contents": "mp_teamcashawards \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Teams can earn money by performing in-game actions "
},
{
"trigger": "mp_teamflag_1",
"contents": "mp_teamflag_1 \"${1:value}\"",
"kind": "snippet",
"details": "Enter a country's alpha 2 code to show that flag next to team 1's name in the spectator scoreboard. "
},
{
"trigger": "mp_teamflag_2",
"contents": "mp_teamflag_2 \"${1:value}\"",
"kind": "snippet",
"details": "Enter a country's alpha 2 code to show that flag next to team 2's name in the spectator scoreboard. "
},
{
"trigger": "mp_teamlogo_1",
"contents": "mp_teamlogo_1 \"${1:value}\"",
"kind": "snippet",
"details": "Enter a team's shorthand image name to display their logo. Images can be found here: 'resource/flash/econ/tournaments/teams' "
},
{
"trigger": "mp_teamlogo_2",
"contents": "mp_teamlogo_2 \"${1:value}\"",
"kind": "snippet",
"details": "Enter a team's shorthand image name to display their logo. Images can be found here: 'resource/flash/econ/tournaments/teams' "
},
{
"trigger": "mp_teammatchstat_1",
"contents": "mp_teammatchstat_1 \"${1:value}\"",
"kind": "snippet",
"details": "A non-empty string sets first team's match stat. "
},
{
"trigger": "mp_teammatchstat_2",
"contents": "mp_teammatchstat_2 \"${1:value}\"",
"kind": "snippet",
"details": "A non-empty string sets second team's match stat. "
},
{
"trigger": "mp_teammatchstat_cycletime",
"contents": "mp_teammatchstat_cycletime \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 45. Cycle match stats after so many seconds "
},
{
"trigger": "mp_teammatchstat_holdtime",
"contents": "mp_teammatchstat_holdtime \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 5. Decide on a match stat and hold it additionally for at least so many seconds "
},
{
"trigger": "mp_teammatchstat_txt",
"contents": "mp_teammatchstat_txt \"${1:value}\"",
"kind": "snippet",
"details": "A non-empty string sets the match stat description, e.g. 'Match 2 of 3'. "
},
{
"trigger": "mp_teammates_are_enemies",
"contents": "mp_teammates_are_enemies \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. When set, your teammates act as enemies and all players are valid targets. "
},
{
"trigger": "mp_teamname_1",
"contents": "mp_teamname_1 \"${1:value}\"",
"kind": "snippet",
"details": "A non-empty string overrides the first team's name. "
},
{
"trigger": "mp_teamname_2",
"contents": "mp_teamname_2 \"${1:value}\"",
"kind": "snippet",
"details": "A non-empty string overrides the second team's name. "
},
{
"trigger": "mp_teamplay",
"contents": "mp_teamplay \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "mp_teamprediction_pct",
"contents": "mp_teamprediction_pct \"${1:value}\"",
"kind": "snippet",
"details": "A value between 1 and 99 will show predictions in favor of CT team. "
},
{
"trigger": "mp_teamprediction_txt",
"contents": "mp_teamprediction_txt \"${1:value}\"",
"kind": "snippet",
"details": "A value between 1 and 99 will set predictions in favor of first team. "
},
{
"trigger": "mp_teamscore_1",
"contents": "mp_teamscore_1 \"${1:value}\"",
"kind": "snippet",
"details": "A non-empty string for best-of-N maps won by the first team. "
},
{
"trigger": "mp_teamscore_2",
"contents": "mp_teamscore_2 \"${1:value}\"",
"kind": "snippet",
"details": "A non-empty string for best-of-N maps won by the second team. "
},
{
"trigger": "mp_teamscore_max",
"contents": "mp_teamscore_max \"${1:value}\"",
"kind": "snippet",
"details": "How many maps to win the series (bo3 max=2; bo5 max=3; bo7 max=4)0 Max: 7"
},
{
"trigger": "mp_technical_timeout_duration_s",
"contents": "mp_technical_timeout_duration_s \"${1:value}\"",
"kind": "snippet",
"details": "How many seconds is a full technical timeout? "
},
{
"trigger": "mp_technical_timeout_per_team",
"contents": "mp_technical_timeout_per_team \"${1:value}\"",
"kind": "snippet",
"details": "How many technical timeouts are there per team? "
},
{
"trigger": "mp_timelimit",
"contents": "mp_timelimit \"${1:value}\"",
"kind": "snippet",
"details": "game time per map in minutes "
},
{
"trigger": "mp_tkpunish",
"contents": "mp_tkpunish \"${1:value}\"",
"kind": "snippet",
"details": "Will TK'ers and team damagers be punished in the next round? {0=no, 1=yes} "
},
{
"trigger": "mp_tournament",
"contents": "mp_tournament \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "mp_tournament_whitelist",
"contents": "mp_tournament_whitelist \"${1:value}\"",
"kind": "snippet",
"details": "Specifies the item whitelist file to use. "
},
{
"trigger": "mp_use_respawn_waves",
"contents": "mp_use_respawn_waves \"${1:value}\"",
"kind": "snippet",
"details": "When set to 1, and that player's team is set to respawn, they will respawn in waves. If set to 2, teams will respawn when the whole team is dead. "
},
{
"trigger": "mp_usehwmmodels",
"contents": "mp_usehwmmodels \"${1:value}\"",
"kind": "snippet",
"details": "Enable the use of the hw morph models. (-1 = never, 1 = always, 0 = based upon GPU) "
},
{
"trigger": "mp_usehwmvcds",
"contents": "mp_usehwmvcds \"${1:value}\"",
"kind": "snippet",
"details": "Enable the use of the hw morph vcd(s). (-1 = never, 1 = always, 0 = based upon GPU) "
},
{
"trigger": "mp_verbose_changelevel_spew",
"contents": "mp_verbose_changelevel_spew \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "mp_warmup_offline_enabled",
"contents": "mp_warmup_offline_enabled \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Whether or not to do a warmup period at the start of a match in an offline (bot) match. "
},
{
"trigger": "mp_warmup_online_enabled",
"contents": "mp_warmup_online_enabled \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Whether or not to do a warmup period at the start of an online match. "
},
{
"trigger": "mp_warmup_pausetimer",
"contents": "mp_warmup_pausetimer \"${1:value}\"",
"kind": "snippet",
"details": "Set to 1 to stay in warmup indefinitely. Set to 0 to resume the timer. "
},
{
"trigger": "mp_warmuptime",
"contents": "mp_warmuptime \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 30. How long the warmup period lasts. Changing this value resets warmup.Min: 5 "
},
{
"trigger": "mp_warmuptime_all_players_connected",
"contents": "mp_warmuptime_all_players_connected \"${1:value}\"",
"kind": "snippet",
"details": "Warmup time to use when all players have connected. 0 to disable. "
},
{
"trigger": "mp_warmuptime_match_cancelled",
"contents": "mp_warmuptime_match_cancelled \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 5. Warmup time to use when the match will be cancelled (eg. due to a live VAC ban). "
},
{
"trigger": "mp_weapon_melee_touch_time_after_hit",
"contents": "mp_weapon_melee_touch_time_after_hit \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 5"
},
{
"trigger": "mp_weapon_next_owner_touch_time",
"contents": "mp_weapon_next_owner_touch_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1.3"
},
{
"trigger": "mp_weapon_prev_owner_touch_time",
"contents": "mp_weapon_prev_owner_touch_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1.5"
},
{
"trigger": "mp_weapon_self_inflict_amount",
"contents": "mp_weapon_self_inflict_amount \"${1:value}\"",
"kind": "snippet",
"details": "If Set to non-0, will hurt the attacker by the specified fraction of max damage if they miss. "
},
{
"trigger": "mp_weapons_allow_heavy",
"contents": "mp_weapons_allow_heavy \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. Determines which team, if any, can purchase Heavy guns. -1 = any; 0 = non; 2 = Ts; 3 = CTs. "
},
{
"trigger": "mp_weapons_allow_heavyassaultsuit",
"contents": "mp_weapons_allow_heavyassaultsuit \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Determines whether heavyassaultsuit is permitted. "
},
{
"trigger": "mp_weapons_allow_map_placed",
"contents": "mp_weapons_allow_map_placed \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. If this convar is set, when a match starts, the game will not delete weapons placed in the map. "
},
{
"trigger": "mp_weapons_allow_pistols",
"contents": "mp_weapons_allow_pistols \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. Determines which team, if any, can purchase Pistols. -1 = any; 0 = non; 2 = Ts; 3 = CTs. "
},
{
"trigger": "mp_weapons_allow_rifles",
"contents": "mp_weapons_allow_rifles \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. Determines which team, if any, can purchase Rifles. -1 = any; 0 = non; 2 = Ts; 3 = CTs. "
},
{
"trigger": "mp_weapons_allow_smgs",
"contents": "mp_weapons_allow_smgs \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. Determines which team, if any, can purchase SMGs. -1 = any; 0 = non; 2 = Ts; 3 = CTs. "
},
{
"trigger": "mp_weapons_allow_typecount",
"contents": "mp_weapons_allow_typecount \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 5. Determines how many purchases of each weapon type allowed per player per round (0 to disallow purchasing, -1 to have no limit). "
},
{
"trigger": "mp_weapons_allow_zeus",
"contents": "mp_weapons_allow_zeus \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Determines how many Zeus purchases a player can make per round (0 to disallow, -1 to have no limit). "
},
{
"trigger": "mp_weapons_glow_on_ground",
"contents": "mp_weapons_glow_on_ground \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. If this convar is set, weapons on the ground will have a glow around them. "
},
{
"trigger": "mp_weapons_max_gun_purchases_per_weapon_per_match",
"contents": "mp_weapons_max_gun_purchases_per_weapon_per_match \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. Max number of times a player may purchase any weapon per matchMin: -1 Max: 1"
},
{
"trigger": "mp_weaponstay",
"contents": "mp_weaponstay \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "mp_win_panel_display_time",
"contents": "mp_win_panel_display_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3. The amount of time to show the win panel between matches / halfs "
},
{
"trigger": "mp_winlimit",
"contents": "mp_winlimit \"${1:value}\"",
"kind": "snippet",
"details": "Max score one team can reach before server changes maps0 "
},
{
"trigger": "multigpu_skip_semaphores",
"contents": "multigpu_skip_semaphores \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "multigpu_skip_transfers",
"contents": "multigpu_skip_transfers \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "muzzle_flash_debug",
"contents": "muzzle_flash_debug \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "name",
"contents": "name \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "nav_approach_points_area_size_threshold",
"contents": "nav_approach_points_area_size_threshold \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 200. Ignore nav areas with at least one side smaller than this amount during approach point calculation. "
},
{
"trigger": "nav_avoid_obstacles",
"contents": "nav_avoid_obstacles \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "nav_bfs_debug",
"contents": "nav_bfs_debug \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "nav_corner_adjust_adjacent",
"contents": "nav_corner_adjust_adjacent \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 18. radius used to raise/lower corners in nearby areas when raising/lowering corners. "
},
{
"trigger": "nav_curve_alt",
"contents": "nav_curve_alt \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_curve_iter",
"contents": "nav_curve_iter \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "nav_curve_lock",
"contents": "nav_curve_lock \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "nav_curve_max_step",
"contents": "nav_curve_max_step \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 10"
},
{
"trigger": "nav_curve_set",
"contents": "nav_curve_set \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "nav_curve_step",
"contents": "nav_curve_step \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.02"
},
{
"trigger": "nav_debug_blocked",
"contents": "nav_debug_blocked \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_drag_selection_volume_zmax_offset",
"contents": "nav_drag_selection_volume_zmax_offset \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 32. The offset of the nav drag volume top from center "
},
{
"trigger": "nav_drag_selection_volume_zmin_offset",
"contents": "nav_drag_selection_volume_zmin_offset \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 32. The offset of the nav drag volume bottom from center "
},
{
"trigger": "nav_draw_area_connections",
"contents": "nav_draw_area_connections \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_draw_area_filled",
"contents": "nav_draw_area_filled \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "nav_draw_area_ground",
"contents": "nav_draw_area_ground \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_draw_area_hull_support",
"contents": "nav_draw_area_hull_support \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_draw_area_ids",
"contents": "nav_draw_area_ids \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_draw_area_inset_margin",
"contents": "nav_draw_area_inset_margin \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "nav_draw_area_should_be_destroyed",
"contents": "nav_draw_area_should_be_destroyed \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_draw_area_split_by_nav_link_mgr",
"contents": "nav_draw_area_split_by_nav_link_mgr \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_draw_area_split_by_obstacle_mgr",
"contents": "nav_draw_area_split_by_obstacle_mgr \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_draw_area_ztest",
"contents": "nav_draw_area_ztest \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_draw_attribute_dynamic",
"contents": "nav_draw_attribute_dynamic \"${1:value}\"",
"kind": "snippet",
"details": "Draw all nav areas with this dynamic attribute "
},
{
"trigger": "nav_draw_attribute_game",
"contents": "nav_draw_attribute_game \"${1:value}\"",
"kind": "snippet",
"details": "Draw all nav areas with this game attribute "
},
{
"trigger": "nav_draw_blocked",
"contents": "nav_draw_blocked \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "nav_draw_blocked_connections",
"contents": "nav_draw_blocked_connections \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_draw_connected_area_radius",
"contents": "nav_draw_connected_area_radius \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1000"
},
{
"trigger": "nav_draw_dangerareas",
"contents": "nav_draw_dangerareas \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_draw_externally_created",
"contents": "nav_draw_externally_created \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_draw_hidingspots",
"contents": "nav_draw_hidingspots \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_draw_jump_links",
"contents": "nav_draw_jump_links \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_draw_limit",
"contents": "nav_draw_limit \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 300. The maximum number of areas to draw in edit mode "
},
{
"trigger": "nav_draw_link_alignment",
"contents": "nav_draw_link_alignment \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_draw_links",
"contents": "nav_draw_links \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_draw_markup",
"contents": "nav_draw_markup \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "nav_draw_markup_offset",
"contents": "nav_draw_markup_offset \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 4"
},
{
"trigger": "nav_draw_mesh",
"contents": "nav_draw_mesh \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "nav_draw_mesh_grid",
"contents": "nav_draw_mesh_grid \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Draw the mesh's spatial grid structure around the edit cursor position. "
},
{
"trigger": "nav_draw_mesh_offset",
"contents": "nav_draw_mesh_offset \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Vertical offset for drawing the mesh (useful for flat planes where the mesh is often a fixed offset from the physical ground "
},
{
"trigger": "nav_draw_space_cells",
"contents": "nav_draw_space_cells \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_draw_space_fly",
"contents": "nav_draw_space_fly \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_draw_space_neighbors",
"contents": "nav_draw_space_neighbors \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_draw_space_portals",
"contents": "nav_draw_space_portals \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_draw_space_radius",
"contents": "nav_draw_space_radius \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "nav_draw_space_swim",
"contents": "nav_draw_space_swim \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_draw_vertex_normal",
"contents": "nav_draw_vertex_normal \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_edit",
"contents": "nav_edit \"${1:value}\"",
"kind": "snippet",
"details": "Set to one to interactively edit the Navigation Mesh. Set to zero to leave edit mode. "
},
{
"trigger": "nav_edit_validate",
"contents": "nav_edit_validate \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Validate navmesh structures. "
},
{
"trigger": "nav_gen_add_jumps",
"contents": "nav_gen_add_jumps \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "nav_gen_agent_radius_buffer",
"contents": "nav_gen_agent_radius_buffer \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.75. Buffer to add to agent radius before passing to nav gen "
},
{
"trigger": "nav_gen_clip_polys_to_clearance",
"contents": "nav_gen_clip_polys_to_clearance \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "nav_gen_clip_polys_to_clearance_debug",
"contents": "nav_gen_clip_polys_to_clearance_debug \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_gen_connect_allow_multiple",
"contents": "nav_gen_connect_allow_multiple \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "nav_gen_connect_angle",
"contents": "nav_gen_connect_angle \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.75"
},
{
"trigger": "nav_gen_connect_angle_ignore_z",
"contents": "nav_gen_connect_angle_ignore_z \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "nav_gen_connect_dist_a",
"contents": "nav_gen_connect_dist_a \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "nav_gen_connect_dist_b",
"contents": "nav_gen_connect_dist_b \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1.5"
},
{
"trigger": "nav_gen_connect_dist_z_mult",
"contents": "nav_gen_connect_dist_z_mult \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.5"
},
{
"trigger": "nav_gen_connect_overlap",
"contents": "nav_gen_connect_overlap \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.5"
},
{
"trigger": "nav_gen_degen_limit",
"contents": "nav_gen_degen_limit \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.001"
},
{
"trigger": "nav_gen_false",
"contents": "nav_gen_false \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Always false "
},
{
"trigger": "nav_gen_island_removal",
"contents": "nav_gen_island_removal \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_gen_island_removal_all_hulls",
"contents": "nav_gen_island_removal_all_hulls \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "nav_gen_join_nonzup",
"contents": "nav_gen_join_nonzup \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "nav_gen_jump_connection_min_overlap_ratio",
"contents": "nav_gen_jump_connection_min_overlap_ratio \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.1. Minimum edge overlap required for jump connection consideration as a percentage of agent radius "
},
{
"trigger": "nav_gen_markup_split_expand",
"contents": "nav_gen_markup_split_expand \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2"
},
{
"trigger": "nav_gen_markup_split_tol_base",
"contents": "nav_gen_markup_split_tol_base \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "nav_gen_markup_split_tol_nonav",
"contents": "nav_gen_markup_split_tol_nonav \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "nav_gen_markup_split_tol_nonentity",
"contents": "nav_gen_markup_split_tol_nonentity \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 8"
},
{
"trigger": "nav_gen_match_ground",
"contents": "nav_gen_match_ground \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_gen_max_bottleneck_width",
"contents": "nav_gen_max_bottleneck_width \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 128"
},
{
"trigger": "nav_gen_max_bottleneck_width_do_clip",
"contents": "nav_gen_max_bottleneck_width_do_clip \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "nav_gen_max_edge_len",
"contents": "nav_gen_max_edge_len \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 512"
},
{
"trigger": "nav_gen_max_edge_len_do_clip",
"contents": "nav_gen_max_edge_len_do_clip \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "nav_gen_max_edge_len_split_tol",
"contents": "nav_gen_max_edge_len_split_tol \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 24"
},
{
"trigger": "nav_gen_opt_to_quads",
"contents": "nav_gen_opt_to_quads \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "nav_gen_opt_to_quads_angle_limit",
"contents": "nav_gen_opt_to_quads_angle_limit \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 8"
},
{
"trigger": "nav_gen_opt_to_quads_num_steps",
"contents": "nav_gen_opt_to_quads_num_steps \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 6"
},
{
"trigger": "nav_gen_opt_to_quads_planar_deviation_limit",
"contents": "nav_gen_opt_to_quads_planar_deviation_limit \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 4"
},
{
"trigger": "nav_gen_opt_to_quads_se_limit_end",
"contents": "nav_gen_opt_to_quads_se_limit_end \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.1"
},
{
"trigger": "nav_gen_opt_to_quads_se_limit_start",
"contents": "nav_gen_opt_to_quads_se_limit_start \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "nav_gen_opt_to_quads_weld_limit_end",
"contents": "nav_gen_opt_to_quads_weld_limit_end \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.01"
},
{
"trigger": "nav_gen_opt_to_quads_weld_limit_start",
"contents": "nav_gen_opt_to_quads_weld_limit_start \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "nav_gen_remove_vertical_polys",
"contents": "nav_gen_remove_vertical_polys \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "nav_gen_split_boundary_polys",
"contents": "nav_gen_split_boundary_polys \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_gen_split_multi_connection_polys",
"contents": "nav_gen_split_multi_connection_polys \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "nav_gen_split_multi_connection_polys_tol",
"contents": "nav_gen_split_multi_connection_polys_tol \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.01"
},
{
"trigger": "nav_gen_true",
"contents": "nav_gen_true \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Always true "
},
{
"trigger": "nav_gen_vertical_limit",
"contents": "nav_gen_vertical_limit \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 88"
},
{
"trigger": "nav_genrt_debug",
"contents": "nav_genrt_debug \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_genrt_no_splice",
"contents": "nav_genrt_no_splice \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_genrt_no_split",
"contents": "nav_genrt_no_split \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_genrt_step",
"contents": "nav_genrt_step \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "nav_max_view_distance",
"contents": "nav_max_view_distance \"${1:value}\"",
"kind": "snippet",
"details": "Maximum range for precomputed nav mesh visibility (0 = default 1500 units) "
},
{
"trigger": "nav_max_vis_delta_list_length",
"contents": "nav_max_vis_delta_list_length \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 64"
},
{
"trigger": "nav_obstacle_genrt",
"contents": "nav_obstacle_genrt \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_obstacle_validate",
"contents": "nav_obstacle_validate \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_obstruction_draw",
"contents": "nav_obstruction_draw \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "nav_obstruction_draw_change",
"contents": "nav_obstruction_draw_change \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_obstruction_draw_dist",
"contents": "nav_obstruction_draw_dist \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "nav_obstruction_draw_island",
"contents": "nav_obstruction_draw_island \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "nav_obstruction_draw_island_hull",
"contents": "nav_obstruction_draw_island_hull \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "nav_obstruction_draw_movefail_blocking",
"contents": "nav_obstruction_draw_movefail_blocking \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_path_debug",
"contents": "nav_path_debug \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_path_debug_compute_with_open_goal",
"contents": "nav_path_debug_compute_with_open_goal \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "nav_path_draw_areas",
"contents": "nav_path_draw_areas \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_path_draw_arrow",
"contents": "nav_path_draw_arrow \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "nav_path_draw_climb_segments",
"contents": "nav_path_draw_climb_segments \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "nav_path_draw_connected_areas",
"contents": "nav_path_draw_connected_areas \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_path_draw_ground_segments",
"contents": "nav_path_draw_ground_segments \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "nav_path_draw_jump_segments",
"contents": "nav_path_draw_jump_segments \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "nav_path_draw_ladder_segments",
"contents": "nav_path_draw_ladder_segments \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "nav_path_draw_link_segments",
"contents": "nav_path_draw_link_segments \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "nav_path_draw_tick",
"contents": "nav_path_draw_tick \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "nav_path_fixup_climb_up_segments",
"contents": "nav_path_fixup_climb_up_segments \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "nav_path_fixup_gap_segments",
"contents": "nav_path_fixup_gap_segments \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_path_jump_process_debug",
"contents": "nav_path_jump_process_debug \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_path_optimize",
"contents": "nav_path_optimize \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "nav_path_optimize_portals",
"contents": "nav_path_optimize_portals \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "nav_path_optimizer_debug",
"contents": "nav_path_optimizer_debug \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "nav_path_record_draw_last_fail",
"contents": "nav_path_record_draw_last_fail \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_path_record_enable",
"contents": "nav_path_record_enable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "nav_pathfind_debug_log",
"contents": "nav_pathfind_debug_log \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "nav_pathfind_draw",
"contents": "nav_pathfind_draw \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "nav_pathfind_draw_blocked",
"contents": "nav_pathfind_draw_blocked \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "nav_pathfind_draw_costs",
"contents": "nav_pathfind_draw_costs \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_pathfind_draw_fail",
"contents": "nav_pathfind_draw_fail \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "nav_pathfind_draw_total_costs",
"contents": "nav_pathfind_draw_total_costs \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_pathfind_inadmissable_heuristic_factor",
"contents": "nav_pathfind_inadmissable_heuristic_factor \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "nav_potentially_visible_dot_tolerance",
"contents": "nav_potentially_visible_dot_tolerance \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.98"
},
{
"trigger": "nav_search_lattice_initial_scale",
"contents": "nav_search_lattice_initial_scale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3"
},
{
"trigger": "nav_search_lattice_progressive_scale",
"contents": "nav_search_lattice_progressive_scale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1.7"
},
{
"trigger": "nav_select_allow_blocked",
"contents": "nav_select_allow_blocked \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. When selecting an area under nav_edit, allow area marked as blocked. "
},
{
"trigger": "nav_select_area_id",
"contents": "nav_select_area_id \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. Select nav area with matching ID. "
},
{
"trigger": "nav_select_block_id",
"contents": "nav_select_block_id \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. Select nav space block with matching ID. "
},
{
"trigger": "nav_select_hull",
"contents": "nav_select_hull \"${1:value}\"",
"kind": "snippet",
"details": "Restrict area selection to areas that can support a hull of the given category "
},
{
"trigger": "nav_show_area_connections",
"contents": "nav_show_area_connections \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Show connections to selected area when true "
},
{
"trigger": "nav_show_area_info_font",
"contents": "nav_show_area_info_font \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "nav_show_area_info_font_size",
"contents": "nav_show_area_info_font_size \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "nav_show_area_info_font_voffset",
"contents": "nav_show_area_info_font_voffset \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -11"
},
{
"trigger": "nav_show_area_verts",
"contents": "nav_show_area_verts \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Show area vertex positions "
},
{
"trigger": "nav_show_area_water_info",
"contents": "nav_show_area_water_info \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "nav_show_potentially_visible",
"contents": "nav_show_potentially_visible \"${1:value}\"",
"kind": "snippet",
"details": "Show areas that are potentially visible from the current nav area "
},
{
"trigger": "nav_smooth_calc_z",
"contents": "nav_smooth_calc_z \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "nav_smooth_constrain_results",
"contents": "nav_smooth_constrain_results \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "nav_smooth_constrain_results_relax",
"contents": "nav_smooth_constrain_results_relax \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.006"
},
{
"trigger": "nav_smooth_constrain_spring",
"contents": "nav_smooth_constrain_spring \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2"
},
{
"trigger": "nav_smooth_constrain_spring_relax",
"contents": "nav_smooth_constrain_spring_relax \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.01"
},
{
"trigger": "nav_smooth_draw_accel",
"contents": "nav_smooth_draw_accel \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "nav_smooth_draw_boundary",
"contents": "nav_smooth_draw_boundary \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "nav_smooth_draw_calc",
"contents": "nav_smooth_draw_calc \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_smooth_draw_constraint_spline",
"contents": "nav_smooth_draw_constraint_spline \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_smooth_draw_constraint_spring",
"contents": "nav_smooth_draw_constraint_spring \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "nav_smooth_draw_speed",
"contents": "nav_smooth_draw_speed \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "nav_smooth_enable",
"contents": "nav_smooth_enable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "nav_smooth_relax",
"contents": "nav_smooth_relax \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "nav_smooth_relax_use_timesteps",
"contents": "nav_smooth_relax_use_timesteps \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_smooth_separating_dist_override",
"contents": "nav_smooth_separating_dist_override \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "nav_smooth_spring_const_override",
"contents": "nav_smooth_spring_const_override \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "nav_smooth_spring_factor_deriv",
"contents": "nav_smooth_spring_factor_deriv \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "nav_smooth_spring_factor_dist",
"contents": "nav_smooth_spring_factor_dist \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "nav_smooth_spring_factor_speed",
"contents": "nav_smooth_spring_factor_speed \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "nav_smooth_spring_forward_dist_base",
"contents": "nav_smooth_spring_forward_dist_base \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 50"
},
{
"trigger": "nav_smooth_spring_forward_dist_time_limit",
"contents": "nav_smooth_spring_forward_dist_time_limit \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "nav_smooth_spring_max_dist",
"contents": "nav_smooth_spring_max_dist \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 36"
},
{
"trigger": "nav_smooth_spring_tension_max_override",
"contents": "nav_smooth_spring_tension_max_override \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "nav_smooth_spring_timestep_factor_accel",
"contents": "nav_smooth_spring_timestep_factor_accel \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 100"
},
{
"trigger": "nav_smooth_spring_timestep_factor_speed",
"contents": "nav_smooth_spring_timestep_factor_speed \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 100"
},
{
"trigger": "nav_smooth_spring_timestep_max",
"contents": "nav_smooth_spring_timestep_max \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.5"
},
{
"trigger": "nav_smooth_spring_timestep_min",
"contents": "nav_smooth_spring_timestep_min \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.1"
},
{
"trigger": "nav_smooth_spring_yaw_rotation_speed",
"contents": "nav_smooth_spring_yaw_rotation_speed \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 50"
},
{
"trigger": "nav_smooth_spring_yaw_threshold",
"contents": "nav_smooth_spring_yaw_threshold \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 20"
},
{
"trigger": "nav_smooth_use_opt",
"contents": "nav_smooth_use_opt \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "nav_space_select_dist",
"contents": "nav_space_select_dist \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 200"
},
{
"trigger": "nav_split_place_on_ground",
"contents": "nav_split_place_on_ground \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. If true, nav areas will be placed flush with the ground when split. "
},
{
"trigger": "nav_split_show_line",
"contents": "nav_split_show_line \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Show the free split line. "
},
{
"trigger": "nav_test_bfs_lattice_dist_0",
"contents": "nav_test_bfs_lattice_dist_0 \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "nav_test_bfs_lattice_dist_1",
"contents": "nav_test_bfs_lattice_dist_1 \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "nav_test_bfs_lattice_dist_2",
"contents": "nav_test_bfs_lattice_dist_2 \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "nav_test_bfs_lattice_hex",
"contents": "nav_test_bfs_lattice_hex \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Demonstrates searching hexagonal lattice over nav mesh. "
},
{
"trigger": "nav_test_bfs_lattice_mark",
"contents": "nav_test_bfs_lattice_mark \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2"
},
{
"trigger": "nav_test_bfs_lattice_simple",
"contents": "nav_test_bfs_lattice_simple \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_test_bfs_lattice_spacing_0",
"contents": "nav_test_bfs_lattice_spacing_0 \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 24"
},
{
"trigger": "nav_test_bfs_lattice_spacing_1",
"contents": "nav_test_bfs_lattice_spacing_1 \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 48"
},
{
"trigger": "nav_test_bfs_lattice_spacing_2",
"contents": "nav_test_bfs_lattice_spacing_2 \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 96"
},
{
"trigger": "nav_test_bfs_simple",
"contents": "nav_test_bfs_simple \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_test_boundary_zone_circle",
"contents": "nav_test_boundary_zone_circle \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "nav_test_boundary_zone_force",
"contents": "nav_test_boundary_zone_force \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_test_boundary_zone_grid_dim",
"contents": "nav_test_boundary_zone_grid_dim \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 90"
},
{
"trigger": "nav_test_boundary_zone_path",
"contents": "nav_test_boundary_zone_path \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "nav_test_boundary_zone_rays",
"contents": "nav_test_boundary_zone_rays \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 100"
},
{
"trigger": "nav_test_boundary_zone_rays_margin",
"contents": "nav_test_boundary_zone_rays_margin \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "nav_test_boundary_zone_rays_random",
"contents": "nav_test_boundary_zone_rays_random \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_test_curve_opt",
"contents": "nav_test_curve_opt \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "nav_test_detour",
"contents": "nav_test_detour \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_test_find_nearest",
"contents": "nav_test_find_nearest \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Calculate the nearest point on the navmesh to the trace point. Uses selection from nav_select_hull. "
},
{
"trigger": "nav_test_find_nearest_clear",
"contents": "nav_test_find_nearest_clear \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Calculate the nearest point on the navmesh to the trace point. Uses selection from nav_select_hull. "
},
{
"trigger": "nav_test_find_random_connected",
"contents": "nav_test_find_random_connected \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Demonstrates finding random points that are connected in the nav mesh to the start point. "
},
{
"trigger": "nav_test_find_random_connected_dist_max",
"contents": "nav_test_find_random_connected_dist_max \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1000"
},
{
"trigger": "nav_test_find_random_connected_dist_min",
"contents": "nav_test_find_random_connected_dist_min \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 100"
},
{
"trigger": "nav_test_find_z",
"contents": "nav_test_find_z \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "nav_test_force_npc_repath",
"contents": "nav_test_force_npc_repath \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_test_genrt",
"contents": "nav_test_genrt \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_test_genrt_place",
"contents": "nav_test_genrt_place \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_test_multi_connection",
"contents": "nav_test_multi_connection \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_test_npc_area",
"contents": "nav_test_npc_area \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "nav_test_npc_collision",
"contents": "nav_test_npc_collision \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "nav_test_npc_collision_range",
"contents": "nav_test_npc_collision_range \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 250"
},
{
"trigger": "nav_test_npc_collision_show_geometry",
"contents": "nav_test_npc_collision_show_geometry \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_test_path",
"contents": "nav_test_path \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Calculate and draw a path from player/camera position to the test position. "
},
{
"trigger": "nav_test_path_expansion_search",
"contents": "nav_test_path_expansion_search \"${1:value}\"",
"kind": "snippet",
"details": "Extend nav_test_path by doing an expansion search on that path. Convar value defines dist. "
},
{
"trigger": "nav_test_path_lock_goal",
"contents": "nav_test_path_lock_goal \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Lock the pathfinding goal to the current intersection point. "
},
{
"trigger": "nav_test_path_lock_start",
"contents": "nav_test_path_lock_start \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Lock the pathfinding start to the current intersection point. "
},
{
"trigger": "nav_test_path_move",
"contents": "nav_test_path_move \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_test_path_opt",
"contents": "nav_test_path_opt \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Enable path optimization for nav_edit_path paths. "
},
{
"trigger": "nav_test_path_opt_transitions",
"contents": "nav_test_path_opt_transitions \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_test_path_return",
"contents": "nav_test_path_return \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Calculate a return path from cursor position to the path calculated by nav_test_path. "
},
{
"trigger": "nav_test_path_space",
"contents": "nav_test_path_space \"${1:value}\"",
"kind": "snippet",
"details": "Should nav_test_path test 3d navigation? 1 = space to space, 2 = multi-modal space/ground "
},
{
"trigger": "nav_test_path_space_fly",
"contents": "nav_test_path_space_fly \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Test flight paths "
},
{
"trigger": "nav_test_path_space_swim",
"contents": "nav_test_path_space_swim \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Test swim paths "
},
{
"trigger": "nav_test_pos_name",
"contents": "nav_test_pos_name \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "nav_test_pos_place",
"contents": "nav_test_pos_place \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "nav_test_ray_space",
"contents": "nav_test_ray_space \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_test_rays",
"contents": "nav_test_rays \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_test_smooth",
"contents": "nav_test_smooth \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_test_smooth_extern_push",
"contents": "nav_test_smooth_extern_push \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "nav_test_smooth_in_speed",
"contents": "nav_test_smooth_in_speed \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 120"
},
{
"trigger": "nav_test_smooth_in_yaw",
"contents": "nav_test_smooth_in_yaw \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "nav_test_smooth_path_speed",
"contents": "nav_test_smooth_path_speed \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "nav_test_smooth_separating_dist",
"contents": "nav_test_smooth_separating_dist \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "nav_test_smooth_spring_const",
"contents": "nav_test_smooth_spring_const \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "nav_test_smooth_spring_tension_max",
"contents": "nav_test_smooth_spring_tension_max \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "nav_test_spline",
"contents": "nav_test_spline \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "nav_test_split_obstacle",
"contents": "nav_test_split_obstacle \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "nav_test_split_obstacle_dirty",
"contents": "nav_test_split_obstacle_dirty \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_test_split_obstacle_leave",
"contents": "nav_test_split_obstacle_leave \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "nav_test_split_obstacle_size",
"contents": "nav_test_split_obstacle_size \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 30"
},
{
"trigger": "nav_test_split_obstacle_update_pos",
"contents": "nav_test_split_obstacle_update_pos \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "nav_validate",
"contents": "nav_validate \"${1:value}\"",
"kind": "snippet",
"details": "Level of validation for nav system. Higher will be slower. "
},
{
"trigger": "nav_volume_debug",
"contents": "nav_volume_debug \"${1:value}\"",
"kind": "snippet",
"details": "Draw or print debug information about nav volume queries. "
},
{
"trigger": "navnetsolve_draw_tri",
"contents": "navnetsolve_draw_tri \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "navspace_create_water_smooth_connections",
"contents": "navspace_create_water_smooth_connections \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "navspace_create_water_transition_connections",
"contents": "navspace_create_water_transition_connections \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "navspace_debug_pathfind",
"contents": "navspace_debug_pathfind \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "navspace_debug_stringpull",
"contents": "navspace_debug_stringpull \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "navspace_debug_trace",
"contents": "navspace_debug_trace \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "navspace_debug_transition_calc",
"contents": "navspace_debug_transition_calc \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "navspace_draw_water_changes",
"contents": "navspace_draw_water_changes \"${1:value}\"",
"kind": "snippet",
"details": "Draw changes in water volumes "
},
{
"trigger": "navspace_path_use_water_level_locator",
"contents": "navspace_path_use_water_level_locator \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "net_allow_multicast",
"contents": "net_allow_multicast \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "net_async_clientconnect",
"contents": "net_async_clientconnect \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Enable async client connect optimization "
},
{
"trigger": "net_async_job_random_sleep",
"contents": "net_async_job_random_sleep \"${1:value}\"",
"kind": "snippet",
"details": "Sleep randomly 0..net_async_job_random_sleep ms in the parallel server jobs; sleep is per job "
},
{
"trigger": "net_client_steamdatagram_enable_override",
"contents": "net_client_steamdatagram_enable_override \"${1:value}\"",
"kind": "snippet",
"details": "0: Use connect method requested by GC. >0: Always use SDR if possible. <0: Always use direct UDP if possible "
},
{
"trigger": "net_client_steamdatagram_ping_measurement_direct_only",
"contents": "net_client_steamdatagram_ping_measurement_direct_only \"${1:value}\"",
"kind": "snippet",
"details": "Comma-separated list of data center codes where ping measurement should be based on direct ping only, not best triangulated ping. "
},
{
"trigger": "net_compresspackets_minsize",
"contents": "net_compresspackets_minsize \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1024. Don't bother compressing packets below this size. "
},
{
"trigger": "net_culloptimization",
"contents": "net_culloptimization \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Enable optimization of slow path that makes HLTV CPU consumption high in AnimGraph-using mods. Will switch to this on by default soon. "
},
{
"trigger": "net_debug_to_file",
"contents": "net_debug_to_file \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "net_detailed_canpacket_log",
"contents": "net_detailed_canpacket_log \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "net_filelogging",
"contents": "net_filelogging \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Log packets to files "
},
{
"trigger": "net_fs_showindirections",
"contents": "net_fs_showindirections \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "net_log_processing",
"contents": "net_log_processing \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Log network processing "
},
{
"trigger": "net_max_message_process_count",
"contents": "net_max_message_process_count \"${1:value}\"",
"kind": "snippet",
"details": "Maximum number of messages to process from a client in a single frame (0 == no limit). "
},
{
"trigger": "net_max_message_queue_size",
"contents": "net_max_message_queue_size \"${1:value}\"",
"kind": "snippet",
"details": "Maximum number of messages to allow waiting in queue after processing; exceeding this disconnects the client. 0 == no limit "
},
{
"trigger": "net_max_polymorphic_spew",
"contents": "net_max_polymorphic_spew \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 5. Max polymorphic variants to spew when spewing a flattened serializer. "
},
{
"trigger": "net_maxroutable",
"contents": "net_maxroutable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1200. Requested max packet size before packets are 'split'.Min: 576 Max: 1200"
},
{
"trigger": "net_p2p_listen_dedicated",
"contents": "net_p2p_listen_dedicated \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Should dedicated server listen for new-style P2P? "
},
{
"trigger": "net_public_adr",
"contents": "net_public_adr \"${1:value}\"",
"kind": "snippet",
"details": "For servers behind NAT/DHCP meant to be exposed to the public internet, this is the public facing ip address string: (\"x.x.x.x\" ) "
},
{
"trigger": "net_qosinterval_spew",
"contents": "net_qosinterval_spew \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Spew QoS interval data as we gather it "
},
{
"trigger": "net_qospacketloss_percentage_threshold",
"contents": "net_qospacketloss_percentage_threshold \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 5. Spew a warning if packet loss percentage is above this thresholdMin: 0.001 Max: 100"
},
{
"trigger": "net_restrict_showmsg_socket",
"contents": "net_restrict_showmsg_socket \"${1:value}\"",
"kind": "snippet",
"details": "If set, only net_showmsg spew for data inbound on this socket name e.g. client, server, etc. "
},
{
"trigger": "net_showdrop",
"contents": "net_showdrop \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Show dropped packets in console "
},
{
"trigger": "net_showeventlisteners",
"contents": "net_showeventlisteners \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Show listening addition/removals "
},
{
"trigger": "net_showevents",
"contents": "net_showevents \"${1:value}\"",
"kind": "snippet",
"details": "Dump game events to console (1=client only, 2=all). "
},
{
"trigger": "net_showmsg",
"contents": "net_showmsg \"${1:value}\"",
"kind": "snippet",
"details": "Show incoming message: <0|1|2|name> where 1 == all and 2 == all except net_NOP "
},
{
"trigger": "net_showoob",
"contents": "net_showoob \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Show connectionless UDP traffic. "
},
{
"trigger": "net_showpeaks",
"contents": "net_showpeaks \"${1:value}\"",
"kind": "snippet",
"details": "Show messages for large packets only: "
},
{
"trigger": "net_showreliable",
"contents": "net_showreliable \"${1:value}\"",
"kind": "snippet",
"details": "Like net_showmsg, but only spew reliable messages "
},
{
"trigger": "net_showudp",
"contents": "net_showudp \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Dump UDP packets summary to console "
},
{
"trigger": "net_showudp_remoteonly",
"contents": "net_showudp_remoteonly \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Dump non-loopback udp only "
},
{
"trigger": "net_use_packet_compression",
"contents": "net_use_packet_compression \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Compress network traffic "
},
{
"trigger": "net_usesocketsforloopback",
"contents": "net_usesocketsforloopback \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Use network sockets layer even for listen server local player's packets (multiplayer only). "
},
{
"trigger": "nextlevel",
"contents": "nextlevel \"${1:value}\"",
"kind": "snippet",
"details": "If set to a valid map name, will trigger a changelevel to the specified map at the end of the round "
},
{
"trigger": "nextmap_print_enabled",
"contents": "nextmap_print_enabled \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. When enabled prints next map to clients "
},
{
"trigger": "nextmode",
"contents": "nextmode \"${1:value}\"",
"kind": "snippet",
"details": "Sets the game mode to be played when the next level loads "
},
{
"trigger": "noclip_fixup",
"contents": "noclip_fixup \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "npc_vphysics",
"contents": "npc_vphysics \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "npcsolve_attract_draw",
"contents": "npcsolve_attract_draw \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "npcsolve_constraint_nav",
"contents": "npcsolve_constraint_nav \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "npcsolve_constraint_npc",
"contents": "npcsolve_constraint_npc \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "npcsolve_drag_linear",
"contents": "npcsolve_drag_linear \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "npcsolve_forward",
"contents": "npcsolve_forward \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "npcsolve_forward_const",
"contents": "npcsolve_forward_const \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 30000"
},
{
"trigger": "npcsolve_forward_dist",
"contents": "npcsolve_forward_dist \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 200"
},
{
"trigger": "npcsolve_forward_margin",
"contents": "npcsolve_forward_margin \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 5"
},
{
"trigger": "npcsolve_path_close_const",
"contents": "npcsolve_path_close_const \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "npcsolve_path_close_max_tension",
"contents": "npcsolve_path_close_max_tension \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 100"
},
{
"trigger": "npcsolve_path_lookahead_const",
"contents": "npcsolve_path_lookahead_const \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 4"
},
{
"trigger": "npcsolve_path_lookahead_dist",
"contents": "npcsolve_path_lookahead_dist \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 100"
},
{
"trigger": "npcsolve_path_vel_const",
"contents": "npcsolve_path_vel_const \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "npcsolve_separation",
"contents": "npcsolve_separation \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "npcsolve_separation_const",
"contents": "npcsolve_separation_const \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 10000"
},
{
"trigger": "npcsolve_separation_dist",
"contents": "npcsolve_separation_dist \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 5"
},
{
"trigger": "npcsolve_separation_draw",
"contents": "npcsolve_separation_draw \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "npcsolve_separation_jitter",
"contents": "npcsolve_separation_jitter \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "npcsolve_separation_r2",
"contents": "npcsolve_separation_r2 \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "option_duck_method",
"contents": "option_duck_method \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Input toggle control "
},
{
"trigger": "option_speed_method",
"contents": "option_speed_method \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Input toggle control "
},
{
"trigger": "panorama_2d_translate_no_comp_layer",
"contents": "panorama_2d_translate_no_comp_layer \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "panorama_3dpanel_anim_fadeinout_time_scale",
"contents": "panorama_3dpanel_anim_fadeinout_time_scale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2. temp scale factor for animation fade in/out time "
},
{
"trigger": "panorama_3dpanel_anims_pivotlock",
"contents": "panorama_3dpanel_anims_pivotlock \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. default true. "
},
{
"trigger": "panorama_3dpanel_camera_blend_mode",
"contents": "panorama_3dpanel_camera_blend_mode \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "panorama_3dpanel_camera_inout_scale",
"contents": "panorama_3dpanel_camera_inout_scale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.1"
},
{
"trigger": "panorama_3dpanel_camera_inout_scale_kb",
"contents": "panorama_3dpanel_camera_inout_scale_kb \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "panorama_3dpanel_camera_lookat_scale",
"contents": "panorama_3dpanel_camera_lookat_scale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.1"
},
{
"trigger": "panorama_3dpanel_camera_preset_blend_time",
"contents": "panorama_3dpanel_camera_preset_blend_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. time to blend between camera presets "
},
{
"trigger": "panorama_3dpanel_camera_rotate_altitude_scale",
"contents": "panorama_3dpanel_camera_rotate_altitude_scale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.004"
},
{
"trigger": "panorama_3dpanel_camera_rotate_azimuth_scale",
"contents": "panorama_3dpanel_camera_rotate_azimuth_scale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.004"
},
{
"trigger": "panorama_3dpanel_debuginfo_anim",
"contents": "panorama_3dpanel_debuginfo_anim \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "panorama_3dpanel_debuginfo_cam",
"contents": "panorama_3dpanel_debuginfo_cam \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "panorama_3dpanel_debuginfo_item",
"contents": "panorama_3dpanel_debuginfo_item \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "panorama_3dpanel_debuginfo_manifest",
"contents": "panorama_3dpanel_debuginfo_manifest \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "panorama_3dpanel_debuginfo_paused",
"contents": "panorama_3dpanel_debuginfo_paused \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "panorama_3dpanel_debuginfo_player",
"contents": "panorama_3dpanel_debuginfo_player \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "panorama_3dpanel_light_move_scale",
"contents": "panorama_3dpanel_light_move_scale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.1"
},
{
"trigger": "panorama_3dpanel_light_rotate_altitude_scale",
"contents": "panorama_3dpanel_light_rotate_altitude_scale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.004"
},
{
"trigger": "panorama_3dpanel_light_rotate_azimuth_scale",
"contents": "panorama_3dpanel_light_rotate_azimuth_scale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.004"
},
{
"trigger": "panorama_3dpanel_loadout_rotate_drag",
"contents": "panorama_3dpanel_loadout_rotate_drag \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.19"
},
{
"trigger": "panorama_3dpanel_loadout_rotate_frametime_multiplier",
"contents": "panorama_3dpanel_loadout_rotate_frametime_multiplier \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 4"
},
{
"trigger": "panorama_3dpanel_loadout_rotate_grab_scale",
"contents": "panorama_3dpanel_loadout_rotate_grab_scale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.5"
},
{
"trigger": "panorama_3dpanel_loadout_rotate_scale",
"contents": "panorama_3dpanel_loadout_rotate_scale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2"
},
{
"trigger": "panorama_allow_texture_composition_layer_fast_path",
"contents": "panorama_allow_texture_composition_layer_fast_path \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "panorama_allow_transitions",
"contents": "panorama_allow_transitions \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "panorama_assert_loading_panel_type",
"contents": "panorama_assert_loading_panel_type \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Force style invalidation of the entire panel subtree when adding / removing classes. "
},
{
"trigger": "panorama_async_compute_mipgen",
"contents": "panorama_async_compute_mipgen \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. use asynchronous compute for mipmap generation. "
},
{
"trigger": "panorama_box_shadow_no_comp_layer",
"contents": "panorama_box_shadow_no_comp_layer \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "panorama_cache_command_list_repaint_threshold",
"contents": "panorama_cache_command_list_repaint_threshold \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.25"
},
{
"trigger": "panorama_cache_command_list_size_threshold",
"contents": "panorama_cache_command_list_size_threshold \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2048"
},
{
"trigger": "panorama_classes_force_invalidate",
"contents": "panorama_classes_force_invalidate \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Force style invalidation of the entire panel subtree when adding / removing classes. "
},
{
"trigger": "panorama_clear_frames_on_device_restore",
"contents": "panorama_clear_frames_on_device_restore \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2"
},
{
"trigger": "panorama_command_reordering",
"contents": "panorama_command_reordering \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "panorama_comp_layer_lru_lifetime",
"contents": "panorama_comp_layer_lru_lifetime \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "panorama_composition_atlas",
"contents": "panorama_composition_atlas \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "panorama_console_max_autocomplete",
"contents": "panorama_console_max_autocomplete \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 100"
},
{
"trigger": "panorama_console_max_history",
"contents": "panorama_console_max_history \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 100"
},
{
"trigger": "panorama_console_max_lines",
"contents": "panorama_console_max_lines \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2000"
},
{
"trigger": "panorama_console_position_and_size",
"contents": "panorama_console_position_and_size \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "panorama_daisy_wheel",
"contents": "panorama_daisy_wheel \"${1:value}\"",
"kind": "snippet",
"details": "Daisy wheel input mode: RS | ABXY "
},
{
"trigger": "panorama_dash_gap_ratio",
"contents": "panorama_dash_gap_ratio \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.5"
},
{
"trigger": "panorama_dash_len",
"contents": "panorama_dash_len \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 20"
},
{
"trigger": "panorama_debug_movies",
"contents": "panorama_debug_movies \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "panorama_debug_overlay_opacity",
"contents": "panorama_debug_overlay_opacity \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.25"
},
{
"trigger": "panorama_debug_overlay_opacity_max",
"contents": "panorama_debug_overlay_opacity_max \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.25"
},
{
"trigger": "panorama_debug_overlay_opacity_min",
"contents": "panorama_debug_overlay_opacity_min \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.01"
},
{
"trigger": "panorama_debug_ready_for_display",
"contents": "panorama_debug_ready_for_display \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "panorama_debugger_theme",
"contents": "panorama_debugger_theme \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "panorama_disable_blur",
"contents": "panorama_disable_blur \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "panorama_disable_box_shadow",
"contents": "panorama_disable_box_shadow \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "panorama_disable_descendant_filtering",
"contents": "panorama_disable_descendant_filtering \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Disable descendant selector filtering "
},
{
"trigger": "panorama_disable_draw_fancy_quad",
"contents": "panorama_disable_draw_fancy_quad \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "panorama_disable_draw_text",
"contents": "panorama_disable_draw_text \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "panorama_disable_draw_text_shadow",
"contents": "panorama_disable_draw_text_shadow \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "panorama_disable_layer_cache",
"contents": "panorama_disable_layer_cache \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "panorama_disable_layer_clear",
"contents": "panorama_disable_layer_clear \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "panorama_disable_render_callbacks",
"contents": "panorama_disable_render_callbacks \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "panorama_disable_render_target_cache",
"contents": "panorama_disable_render_target_cache \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "panorama_disallow_hover_styles",
"contents": "panorama_disallow_hover_styles \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "panorama_dragscroll_affordance",
"contents": "panorama_dragscroll_affordance \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 20. Minimum mouse movement in pixels before a move is treated as a drag scroll "
},
{
"trigger": "panorama_dragscroll_maxflickvelocity",
"contents": "panorama_dragscroll_maxflickvelocity \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 8000. Maximum velocity for a drag scroll flick "
},
{
"trigger": "panorama_dragscroll_minflickvelocity",
"contents": "panorama_dragscroll_minflickvelocity \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 60. Minimum velocity that the mouse must be moving as mouse up time to qualify as a drag scroll flick "
},
{
"trigger": "panorama_dragscroll_mintime",
"contents": "panorama_dragscroll_mintime \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.02. Minimum time that the mouse button must be down before a move is treated as a drag scroll "
},
{
"trigger": "panorama_dragscroll_velocitymultiplier",
"contents": "panorama_dragscroll_velocitymultiplier \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.5. Multiplier for flick velocity off of actual measured velocity "
},
{
"trigger": "panorama_early_anim_dispatch",
"contents": "panorama_early_anim_dispatch \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "panorama_enable_secondary_layout_pass",
"contents": "panorama_enable_secondary_layout_pass \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "panorama_focus_world_panels",
"contents": "panorama_focus_world_panels \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. when set request key focus when a world panel is enabled "
},
{
"trigger": "panorama_force_active_controller_type",
"contents": "panorama_force_active_controller_type \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "panorama_force_text_shadow_strength",
"contents": "panorama_force_text_shadow_strength \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "panorama_frame_limit_v8_gc_microseconds",
"contents": "panorama_frame_limit_v8_gc_microseconds \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 5000"
},
{
"trigger": "panorama_highlight_bad_opacity_masks",
"contents": "panorama_highlight_bad_opacity_masks \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "panorama_highlight_composition_layers",
"contents": "panorama_highlight_composition_layers \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "panorama_highlight_slow_operations",
"contents": "panorama_highlight_slow_operations \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "panorama_hsbc_through_fast_path",
"contents": "panorama_hsbc_through_fast_path \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "panorama_joystick_axis_repeat_curve_time",
"contents": "panorama_joystick_axis_repeat_curve_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "panorama_joystick_axis_repeat_interval_end",
"contents": "panorama_joystick_axis_repeat_interval_end \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.05"
},
{
"trigger": "panorama_joystick_axis_repeat_interval_start",
"contents": "panorama_joystick_axis_repeat_interval_start \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.22"
},
{
"trigger": "panorama_joystick_button_repeat_curve_time",
"contents": "panorama_joystick_button_repeat_curve_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1.2"
},
{
"trigger": "panorama_joystick_button_repeat_interval_end",
"contents": "panorama_joystick_button_repeat_interval_end \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.1"
},
{
"trigger": "panorama_joystick_button_repeat_interval_start",
"contents": "panorama_joystick_button_repeat_interval_start \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.48"
},
{
"trigger": "panorama_js_minidumps",
"contents": "panorama_js_minidumps \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Enable sending minidumps on JS Exceptions. "
},
{
"trigger": "panorama_large_dispatch_event_queue",
"contents": "panorama_large_dispatch_event_queue \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "panorama_light_inout_scale",
"contents": "panorama_light_inout_scale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.5"
},
{
"trigger": "panorama_max_fps",
"contents": "panorama_max_fps \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 120"
},
{
"trigger": "panorama_max_oof_overlay_up_fps",
"contents": "panorama_max_oof_overlay_up_fps \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 4"
},
{
"trigger": "panorama_max_overlay_fps",
"contents": "panorama_max_overlay_fps \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 60"
},
{
"trigger": "panorama_max_text_shadow_strength",
"contents": "panorama_max_text_shadow_strength \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 10"
},
{
"trigger": "panorama_might_scroll_no_comp_layer",
"contents": "panorama_might_scroll_no_comp_layer \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "panorama_min_comp_layer_cache_cost",
"contents": "panorama_min_comp_layer_cache_cost \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 4096"
},
{
"trigger": "panorama_movie_async_load_size_bytes",
"contents": "panorama_movie_async_load_size_bytes \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 20971520"
},
{
"trigger": "panorama_movie_force_not_ready_behavior",
"contents": "panorama_movie_force_not_ready_behavior \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "panorama_reload_animations",
"contents": "panorama_reload_animations \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2"
},
{
"trigger": "panorama_render_target_cache_max_size",
"contents": "panorama_render_target_cache_max_size \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 31457280"
},
{
"trigger": "panorama_show_fps",
"contents": "panorama_show_fps \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "panorama_show_fps_scale",
"contents": "panorama_show_fps_scale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "panorama_simple_borders_no_comp_layer",
"contents": "panorama_simple_borders_no_comp_layer \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "panorama_spew_async_event_substring",
"contents": "panorama_spew_async_event_substring \"${1:value}\"",
"kind": "snippet",
"details": "If non-empty, print debug info about async event queue and dispatch behavior for events containing the substring. "
},
{
"trigger": "panorama_spew_layout_invalidates",
"contents": "panorama_spew_layout_invalidates \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "panorama_stats_log_time",
"contents": "panorama_stats_log_time \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "panorama_style_flag_force_invalidate",
"contents": "panorama_style_flag_force_invalidate \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Force style invalidation of the entire panel subtree when adding / removing style flags. "
},
{
"trigger": "panorama_suspend_paint",
"contents": "panorama_suspend_paint \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "panorama_temp_comp_layer_min_dimension",
"contents": "panorama_temp_comp_layer_min_dimension \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 512"
},
{
"trigger": "panorama_track_render_commands",
"contents": "panorama_track_render_commands \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "panorama_transform_parents_no_layer_for_perspective",
"contents": "panorama_transform_parents_no_layer_for_perspective \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "panorama_transforms_no_comp_layer",
"contents": "panorama_transforms_no_comp_layer \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "panorama_transition_time_factor",
"contents": "panorama_transition_time_factor \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. A float representing a scale factor for transitions. 1.0 is normal, 2.0 would be twice as fast as normal, 0.5 half as fast "
},
{
"trigger": "panorama_use_backbuffer_directly",
"contents": "panorama_use_backbuffer_directly \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "panorama_worldpanel_update_cull_distance",
"contents": "panorama_worldpanel_update_cull_distance \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1000"
},
{
"trigger": "panorama_worldpanel_update_cull_size_threshold",
"contents": "panorama_worldpanel_update_cull_size_threshold \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 5"
},
{
"trigger": "panorama_worldpanel_update_culling",
"contents": "panorama_worldpanel_update_culling \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "particle_debug_creation_filter",
"contents": "particle_debug_creation_filter \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "particle_layer_id_whitelist",
"contents": "particle_layer_id_whitelist \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "particle_powsimd_random_range_exp",
"contents": "particle_powsimd_random_range_exp \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "particle_snapshot_allow_combined_models",
"contents": "particle_snapshot_allow_combined_models \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "particle_test_attach_attachment",
"contents": "particle_test_attach_attachment \"${1:value}\"",
"kind": "snippet",
"details": "Attachment index for attachment mode "
},
{
"trigger": "particle_test_attach_mode",
"contents": "particle_test_attach_mode \"${1:value}\"",
"kind": "snippet",
"details": "Possible Values: 'start_at_attachment', 'follow_attachment', 'start_at_origin', 'follow_origin' "
},
{
"trigger": "particle_test_file",
"contents": "particle_test_file \"${1:value}\"",
"kind": "snippet",
"details": "Name of the particle system to dynamically spawn "
},
{
"trigger": "particles_multiplier",
"contents": "particles_multiplier \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Multiply # of rendered particles by this for perf testing "
},
{
"trigger": "partybrowser_throttle_data",
"contents": "partybrowser_throttle_data \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.15"
},
{
"trigger": "partybrowser_timeout",
"contents": "partybrowser_timeout \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 15"
},
{
"trigger": "password",
"contents": "password \"${1:value}\"",
"kind": "snippet",
"details": "Current server access password "
},
{
"trigger": "pawn_mimic_all",
"contents": "pawn_mimic_all \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "phonemedelay",
"contents": "phonemedelay \"${1:value}\"",
"kind": "snippet",
"details": "Phoneme delay to account for sound system latency. "
},
{
"trigger": "phonemefilter",
"contents": "phonemefilter \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.08. Time duration of box filter to pass over phonemes. "
},
{
"trigger": "phonemesnap",
"contents": "phonemesnap \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2. Lod at level at which visemes stops always considering two phonemes, regardless of duration. "
},
{
"trigger": "phys_active",
"contents": "phys_active \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Whether PLAYER physics is actively simulated (ie. noclip) "
},
{
"trigger": "phys_async_buoyancy_update",
"contents": "phys_async_buoyancy_update \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. If true, buoyancy motion controllers are updated in an async job after the tick has completed. "
},
{
"trigger": "phys_batch_ray_test",
"contents": "phys_batch_ray_test \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "phys_build_bounds",
"contents": "phys_build_bounds \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "phys_build_mass",
"contents": "phys_build_mass \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "phys_buoyancy_angular_damping_multiplier",
"contents": "phys_buoyancy_angular_damping_multiplier \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Multiply water damping for buoyancy affecting angular velocity "
},
{
"trigger": "phys_buoyancy_drag_multiplier",
"contents": "phys_buoyancy_drag_multiplier \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Multiply water drag (tries to equalize object velocity with the velocity of the water flow) "
},
{
"trigger": "phys_buoyancy_horizontal_damping_multiplier",
"contents": "phys_buoyancy_horizontal_damping_multiplier \"${1:value}\"",
"kind": "snippet",
"details": "Multiply water damping for buoyancy affecting linear velocity in the horizontal plane "
},
{
"trigger": "phys_buoyancy_vertical_damping_multiplier",
"contents": "phys_buoyancy_vertical_damping_multiplier \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Multiply water damping for buoyancy affecting linear velocity in the vertical direction "
},
{
"trigger": "phys_continuous_kinematic_update",
"contents": "phys_continuous_kinematic_update \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "phys_cull_internal_mesh_contacts",
"contents": "phys_cull_internal_mesh_contacts \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "phys_debug_showdefaultmaterial",
"contents": "phys_debug_showdefaultmaterial \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. If enabled, surfaces with default material are highlighted in physics debug geometry. "
},
{
"trigger": "phys_drag_multiplier",
"contents": "phys_drag_multiplier \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Multiply air drag "
},
{
"trigger": "phys_dump_filter_body_name",
"contents": "phys_dump_filter_body_name \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "phys_dump_filter_solid_only",
"contents": "phys_dump_filter_solid_only \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "phys_dump_filter_trace_callstack",
"contents": "phys_dump_filter_trace_callstack \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "phys_dynamic_scaling",
"contents": "phys_dynamic_scaling \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "phys_expensive_shape_threshold",
"contents": "phys_expensive_shape_threshold \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 6"
},
{
"trigger": "phys_fast_report_contacts",
"contents": "phys_fast_report_contacts \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. when 1, fast path for collision reporting is implemented making triggers faster in some cases "
},
{
"trigger": "phys_fastaddcloneshape",
"contents": "phys_fastaddcloneshape \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "phys_headshotscale",
"contents": "phys_headshotscale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1.3. Modifier for the headshot impulse hits on players "
},
{
"trigger": "phys_highlight_expensive_objects",
"contents": "phys_highlight_expensive_objects \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Highlight expensive physics objects "
},
{
"trigger": "phys_highlight_expensive_objects_strength",
"contents": "phys_highlight_expensive_objects_strength \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.02. Highlight expensive physics objects strength "
},
{
"trigger": "phys_impactforcescale",
"contents": "phys_impactforcescale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "phys_implicit_integarator",
"contents": "phys_implicit_integarator \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Use implicit integrator for gyroscopic forces "
},
{
"trigger": "phys_jiggle_bone_enable",
"contents": "phys_jiggle_bone_enable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "phys_joint_teleport",
"contents": "phys_joint_teleport \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Teleport joint anchors if connected to world "
},
{
"trigger": "phys_length_damping_ratio",
"contents": "phys_length_damping_ratio \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2. Spring damping ratio for length constraint "
},
{
"trigger": "phys_length_frequency",
"contents": "phys_length_frequency \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 5. Spring stiffness for length constraint "
},
{
"trigger": "phys_log_updaters",
"contents": "phys_log_updaters \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "phys_log_updaters_exclude",
"contents": "phys_log_updaters_exclude \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "phys_log_updaters_include",
"contents": "phys_log_updaters_include \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "phys_mesh_notify_force_generic",
"contents": "phys_mesh_notify_force_generic \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "phys_mesh_notify_ignore_sdf",
"contents": "phys_mesh_notify_ignore_sdf \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "phys_old_contact_draw",
"contents": "phys_old_contact_draw \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "phys_parallel_islands",
"contents": "phys_parallel_islands \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Enable/Disable Parallel Island Solving "
},
{
"trigger": "phys_playerscale",
"contents": "phys_playerscale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 10. This multiplies the bullet impact impuse on players for more dramatic results when players are shot. "
},
{
"trigger": "phys_position_iterations",
"contents": "phys_position_iterations \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2"
},
{
"trigger": "phys_powered_ragdoll_debug",
"contents": "phys_powered_ragdoll_debug \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "phys_pushscale",
"contents": "phys_pushscale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "phys_reload_immediately",
"contents": "phys_reload_immediately \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Set to 1 to reload resources and reconstruct physics of entities on the fly. May unexpectedly change behavior or crash the game, because game code is generally unaware of underlying resource reloads and may hold references to physics that may become invalid during resource reload. It is inherently harder for physics to deal with resource reloads because of persistent nature of objects being simulated (textures can be easily reloaded on the fly; if an entity holds a handle to a ragdoll body part, it may expect that handle to stay valid while the ragdoll exists) "
},
{
"trigger": "phys_shoot_angular_speed",
"contents": "phys_shoot_angular_speed \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3600"
},
{
"trigger": "phys_shoot_speed",
"contents": "phys_shoot_speed \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 250"
},
{
"trigger": "phys_show_stats",
"contents": "phys_show_stats \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "phys_skip_creating_trivial_islands",
"contents": "phys_skip_creating_trivial_islands \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "phys_solve_in_parallel_with_island_build",
"contents": "phys_solve_in_parallel_with_island_build \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "phys_step_threaded",
"contents": "phys_step_threaded \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "phys_stressbodyweights",
"contents": "phys_stressbodyweights \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 5"
},
{
"trigger": "phys_threaded_transform_update",
"contents": "phys_threaded_transform_update \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "phys_timescale",
"contents": "phys_timescale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Scale time for physics "
},
{
"trigger": "phys_upimpactforcescale",
"contents": "phys_upimpactforcescale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.375"
},
{
"trigger": "phys_use_block_solver",
"contents": "phys_use_block_solver \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Use block solving for constraint entities "
},
{
"trigger": "phys_use_position_based_toi_test",
"contents": "phys_use_position_based_toi_test \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Use a position based heuristic to cull slow objects from the TOI phase of the solver "
},
{
"trigger": "phys_validate",
"contents": "phys_validate \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "phys_vehicleimpactforcescale",
"contents": "phys_vehicleimpactforcescale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1.5"
},
{
"trigger": "phys_velocity_iterations",
"contents": "phys_velocity_iterations \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 8"
},
{
"trigger": "phys_visualize_awake_dynamic_only",
"contents": "phys_visualize_awake_dynamic_only \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "phys_visualize_awake_unattached_only",
"contents": "phys_visualize_awake_unattached_only \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "phys_visualize_traces",
"contents": "phys_visualize_traces \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "phys2_contact_debug_draw_size",
"contents": "phys2_contact_debug_draw_size \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2"
},
{
"trigger": "phys2_debug_broadphase",
"contents": "phys2_debug_broadphase \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "physcannon_maxforce",
"contents": "physcannon_maxforce \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1500"
},
{
"trigger": "physcannon_minforce",
"contents": "physcannon_minforce \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 700"
},
{
"trigger": "physics_hull_sphere_cast_sat_experimental",
"contents": "physics_hull_sphere_cast_sat_experimental \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "pickup_check_period",
"contents": "pickup_check_period \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.25"
},
{
"trigger": "player_botdifflast_s",
"contents": "player_botdifflast_s \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2"
},
{
"trigger": "player_competitive_maplist_2v2_10_0_C8D88986",
"contents": "player_competitive_maplist_2v2_10_0_C8D88986 \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "player_competitive_maplist_8_10_0_5069769",
"contents": "player_competitive_maplist_8_10_0_5069769 \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "player_debug_off_nav",
"contents": "player_debug_off_nav \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "player_debug_print_damage",
"contents": "player_debug_print_damage \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. When true, print amount and type of all damage received by player to console. "
},
{
"trigger": "player_nevershow_communityservermessage",
"contents": "player_nevershow_communityservermessage \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "player_ping_token_cooldown",
"contents": "player_ping_token_cooldown \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 20. Cooldown for how long it takes for a player's ping token to refresh allowing them to ping again (they get 5 tokens). "
},
{
"trigger": "player_survival_list_10_0_303",
"contents": "player_survival_list_10_0_303 \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "player_teamplayedlast",
"contents": "player_teamplayedlast \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3"
},
{
"trigger": "player_use_radius",
"contents": "player_use_radius \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 80"
},
{
"trigger": "player_wargames_list2_10_0_0",
"contents": "player_wargames_list2_10_0_0 \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "player0_using_joystick",
"contents": "player0_using_joystick \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "population_distribution_debug",
"contents": "population_distribution_debug \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "prop_debug_collision",
"contents": "prop_debug_collision \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Highlights props based on their collision group: COLLISION_GROUP_PROPS(white), COLLISION_GROUP_INTERACTIVE_DEBRIS(green), COLLISION_GROUP_DEBRIS and will return to COLLISION_GROUP_INTERACTIVE_DEBRIS on sleeping(bright red), COLLISION_GROUP_DEBRIS permanently (dark red), COLLISION_GROUP_DEBRIS(blue), OTHER(grey) "
},
{
"trigger": "prop_nav_ignore_edge_len",
"contents": "prop_nav_ignore_edge_len \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "prop_nav_ignore_mass",
"contents": "prop_nav_ignore_mass \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "prop_nav_obstacle_avoid_mass",
"contents": "prop_nav_obstacle_avoid_mass \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 100.1"
},
{
"trigger": "prop_nav_obstacle_avoid_use_connection_blocker",
"contents": "prop_nav_obstacle_avoid_use_connection_blocker \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "prop_nav_obstacle_block_edge_min_a",
"contents": "prop_nav_obstacle_block_edge_min_a \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "prop_nav_obstacle_block_edge_min_b",
"contents": "prop_nav_obstacle_block_edge_min_b \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "prop_nav_obstacle_block_mass_a",
"contents": "prop_nav_obstacle_block_mass_a \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "prop_nav_obstacle_block_mass_b",
"contents": "prop_nav_obstacle_block_mass_b \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "props_break_max_pieces_perframe",
"contents": "props_break_max_pieces_perframe \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 16. Maximum prop breakable piece count per frame (-1 = model default) "
},
{
"trigger": "pvs_debugentity",
"contents": "pvs_debugentity \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. Verbose spew for this entity when doing IsInPVS computation. "
},
{
"trigger": "pvs_flowtype",
"contents": "pvs_flowtype \"${1:value}\"",
"kind": "snippet",
"details": "Flow through spawn groups for vis (0 == default, 1 == always visible, 2 == never visible. "
},
{
"trigger": "pwatchent",
"contents": "pwatchent \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. Entity to watch for prediction system changes. "
},
{
"trigger": "pwatchvar",
"contents": "pwatchvar \"${1:value}\"",
"kind": "snippet",
"details": "Entity variable to watch in prediction system for changes. "
},
{
"trigger": "r_add_views_in_pre_output",
"contents": "r_add_views_in_pre_output \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_AirboatViewDampenDamp",
"contents": "r_AirboatViewDampenDamp \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "r_AirboatViewDampenFreq",
"contents": "r_AirboatViewDampenFreq \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 7"
},
{
"trigger": "r_AirboatViewZHeight",
"contents": "r_AirboatViewZHeight \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "r_always_render_all_windows",
"contents": "r_always_render_all_windows \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Always force all engine & tools to render "
},
{
"trigger": "r_aoproxy_cull_dist",
"contents": "r_aoproxy_cull_dist \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 12. Distance to cull the AO proxy as a factor of size "
},
{
"trigger": "r_aoproxy_debug",
"contents": "r_aoproxy_debug \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "r_aoproxy_enable",
"contents": "r_aoproxy_enable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_aoproxy_min_dist",
"contents": "r_aoproxy_min_dist \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3"
},
{
"trigger": "r_aoproxy_min_dist_box",
"contents": "r_aoproxy_min_dist_box \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "r_aoproxy_show",
"contents": "r_aoproxy_show \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "r_aspectratio",
"contents": "r_aspectratio \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "r_async_shader_compile_notify_frequency",
"contents": "r_async_shader_compile_notify_frequency \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 100"
},
{
"trigger": "r_bloom_tent_filter_radius",
"contents": "r_bloom_tent_filter_radius \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3.1. bloom mip up-sample filtering radius (using 3x3 tent filter, radius in mip level texels), 0.0 radius => box (2x2) filter with (fixed) 1.0 radius "
},
{
"trigger": "r_cacheSequenceData",
"contents": "r_cacheSequenceData \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_character_decal_renderdoc_capture",
"contents": "r_character_decal_renderdoc_capture \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "r_character_decal_resolution",
"contents": "r_character_decal_resolution \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1024"
},
{
"trigger": "r_cpu_light_binner_32bit_shadows",
"contents": "r_cpu_light_binner_32bit_shadows \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "r_cpu_light_binner_allow_sun_shadows_on_spots",
"contents": "r_cpu_light_binner_allow_sun_shadows_on_spots \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "r_cpu_light_binner_default_spec_env_fade_time",
"contents": "r_cpu_light_binner_default_spec_env_fade_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "r_cpu_light_binner_shadow_target_size",
"contents": "r_cpu_light_binner_shadow_target_size \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3072"
},
{
"trigger": "r_cpu_light_binner_spot_shadow_size",
"contents": "r_cpu_light_binner_spot_shadow_size \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 768"
},
{
"trigger": "r_cpu_light_binner_use_gpu",
"contents": "r_cpu_light_binner_use_gpu \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_cs2_show_icon_editor",
"contents": "r_cs2_show_icon_editor \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. CSGO/Icon Editor "
},
{
"trigger": "r_csgo_bloom_threshold_all_samples",
"contents": "r_csgo_bloom_threshold_all_samples \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Execute bloom threshold once per sample during downsample (default enabled, higher quality, less bloom aliasing) "
},
{
"trigger": "r_csgo_bloom_threshold_downsample_jimenez",
"contents": "r_csgo_bloom_threshold_downsample_jimenez \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Custom downsample based on Jimenez14, (default enabled, higher quality, decreases bloom aliasing further) "
},
{
"trigger": "r_csgo_cable_pixel_radius_clamp",
"contents": "r_csgo_cable_pixel_radius_clamp \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1.2. Minimum clamped size in pixels of a cable (if using F_CLAMP_MIN_RADIUS 1 in cable material) "
},
{
"trigger": "r_csgo_cmaa_debug_edges",
"contents": "r_csgo_cmaa_debug_edges \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. debug visualize edges "
},
{
"trigger": "r_csgo_cmaa_enable",
"contents": "r_csgo_cmaa_enable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "r_csgo_cmaa_extra_sharp",
"contents": "r_csgo_cmaa_extra_sharp \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. trade more sharpness for reduced antialiasing "
},
{
"trigger": "r_csgo_cmaa_quality",
"contents": "r_csgo_cmaa_quality \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3. 0=low, 1=medium, 2=high, 3=ultra "
},
{
"trigger": "r_csgo_cubemap_normalization",
"contents": "r_csgo_cubemap_normalization \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_csgo_debug_reflection_rects",
"contents": "r_csgo_debug_reflection_rects \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "r_csgo_decal_debug",
"contents": "r_csgo_decal_debug \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "r_csgo_decals_use_msaa",
"contents": "r_csgo_decals_use_msaa \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "r_csgo_depth_prepass",
"contents": "r_csgo_depth_prepass \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_csgo_depth_prepass_cull_threshold",
"contents": "r_csgo_depth_prepass_cull_threshold \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 60"
},
{
"trigger": "r_csgo_depth_prepass_reflections_large",
"contents": "r_csgo_depth_prepass_reflections_large \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_csgo_depth_prepass_reflections_small",
"contents": "r_csgo_depth_prepass_reflections_small \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_csgo_depth_prepass_skybox_alpha_tested",
"contents": "r_csgo_depth_prepass_skybox_alpha_tested \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_csgo_depth_prepass_small_cull_threshold",
"contents": "r_csgo_depth_prepass_small_cull_threshold \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 10"
},
{
"trigger": "r_csgo_depth_prepass_viewmodel",
"contents": "r_csgo_depth_prepass_viewmodel \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_csgo_directional_lightmaps",
"contents": "r_csgo_directional_lightmaps \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_csgo_effects_bloom",
"contents": "r_csgo_effects_bloom \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_csgo_effects_bloom_when_smoked",
"contents": "r_csgo_effects_bloom_when_smoked \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "r_csgo_enable_cubemap_fog",
"contents": "r_csgo_enable_cubemap_fog \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_csgo_enable_glows",
"contents": "r_csgo_enable_glows \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_csgo_enable_gradient_fog",
"contents": "r_csgo_enable_gradient_fog \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_csgo_enable_high_precision_lighting",
"contents": "r_csgo_enable_high_precision_lighting \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_csgo_enable_sunlight_check",
"contents": "r_csgo_enable_sunlight_check \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Enable vis tests for sunlight. "
},
{
"trigger": "r_csgo_enable_tonemapping",
"contents": "r_csgo_enable_tonemapping \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_csgo_enable_translucent_screen_space",
"contents": "r_csgo_enable_translucent_screen_space \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_csgo_enable_volume_fog",
"contents": "r_csgo_enable_volume_fog \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "r_csgo_firstpersonlegs_nearz_offset",
"contents": "r_csgo_firstpersonlegs_nearz_offset \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.1"
},
{
"trigger": "r_csgo_fsr_enable_mip_bias",
"contents": "r_csgo_fsr_enable_mip_bias \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Apply negative mip bias when rendering with FSR. "
},
{
"trigger": "r_csgo_fsr_rcas_sharpness",
"contents": "r_csgo_fsr_rcas_sharpness \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.25. RCAS sharpness when using FSR + RCAS upsample. "
},
{
"trigger": "r_csgo_fsr_upsample",
"contents": "r_csgo_fsr_upsample \"${1:value}\"",
"kind": "snippet",
"details": "0 == bilinear upsampe, 1 == FSR upsample, 2 == FSR + RCAS upsample "
},
{
"trigger": "r_csgo_gpu_culling",
"contents": "r_csgo_gpu_culling \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. CSGO/Graphics/GPU Culling "
},
{
"trigger": "r_csgo_gpu_culling_camera_offset",
"contents": "r_csgo_gpu_culling_camera_offset \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -0.1"
},
{
"trigger": "r_csgo_gpu_culling_shadows",
"contents": "r_csgo_gpu_culling_shadows \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. CSGO/Graphics/GPU Cull Shadow Views "
},
{
"trigger": "r_csgo_gpu_culling_two_pass",
"contents": "r_csgo_gpu_culling_two_pass \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. CSGO/Graphics/GPU Culling (Two Pass) "
},
{
"trigger": "r_csgo_joint_upscale_sigma",
"contents": "r_csgo_joint_upscale_sigma \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.002"
},
{
"trigger": "r_csgo_lowend_objects",
"contents": "r_csgo_lowend_objects \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. 0 = Force disable, 1 = use video settings "
},
{
"trigger": "r_csgo_mboit",
"contents": "r_csgo_mboit \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_csgo_mboit_bias",
"contents": "r_csgo_mboit_bias \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "r_csgo_mboit_debug",
"contents": "r_csgo_mboit_debug \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "r_csgo_mboit_force_mixed_resolution",
"contents": "r_csgo_mboit_force_mixed_resolution \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "r_csgo_mboit_overestimation",
"contents": "r_csgo_mboit_overestimation \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.01"
},
{
"trigger": "r_csgo_mboit_use_4_moments",
"contents": "r_csgo_mboit_use_4_moments \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "r_csgo_microshadowing",
"contents": "r_csgo_microshadowing \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_csgo_mixed_resolution_color_slices",
"contents": "r_csgo_mixed_resolution_color_slices \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "r_csgo_mixed_resolution_particles",
"contents": "r_csgo_mixed_resolution_particles \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_csgo_mixed_resolution_particles_minmax",
"contents": "r_csgo_mixed_resolution_particles_minmax \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "r_csgo_mixed_resolution_particles_scale",
"contents": "r_csgo_mixed_resolution_particles_scale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2"
},
{
"trigger": "r_csgo_msaa_resolve_apply_exposure_scale",
"contents": "r_csgo_msaa_resolve_apply_exposure_scale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. 0 - before, 1 - after fix for a2c fringing "
},
{
"trigger": "r_csgo_multiscattering",
"contents": "r_csgo_multiscattering \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_csgo_no_shader_resolve",
"contents": "r_csgo_no_shader_resolve \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "r_csgo_outline_glow_scaledenom",
"contents": "r_csgo_outline_glow_scaledenom \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "r_csgo_override_global_time",
"contents": "r_csgo_override_global_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_csgo_postprocess_enable",
"contents": "r_csgo_postprocess_enable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_csgo_prewarm_particles",
"contents": "r_csgo_prewarm_particles \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "r_csgo_r11g11b10_dither_mode",
"contents": "r_csgo_r11g11b10_dither_mode \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2. 0 - disabled, 1 - regular dither noise, 2 - blue noise dither "
},
{
"trigger": "r_csgo_readonly_depth_stencil_enable",
"contents": "r_csgo_readonly_depth_stencil_enable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_csgo_reconstruct_normals",
"contents": "r_csgo_reconstruct_normals \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "r_csgo_reconstruct_normals_method",
"contents": "r_csgo_reconstruct_normals_method \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "r_csgo_reflection_min_far_plane",
"contents": "r_csgo_reflection_min_far_plane \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 5000"
},
{
"trigger": "r_csgo_render_decals",
"contents": "r_csgo_render_decals \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_csgo_render_decals_on_translucent",
"contents": "r_csgo_render_decals_on_translucent \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_csgo_render_dither_scale",
"contents": "r_csgo_render_dither_scale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "r_csgo_render_dynamic_objects",
"contents": "r_csgo_render_dynamic_objects \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_csgo_render_inferno_decals",
"contents": "r_csgo_render_inferno_decals \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_csgo_render_opaque",
"contents": "r_csgo_render_opaque \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_csgo_render_overlays",
"contents": "r_csgo_render_overlays \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_csgo_render_post_bloom",
"contents": "r_csgo_render_post_bloom \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "r_csgo_render_post_bloom_strength",
"contents": "r_csgo_render_post_bloom_strength \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "r_csgo_render_post_colorcorrection",
"contents": "r_csgo_render_post_colorcorrection \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "r_csgo_render_post_film_grain",
"contents": "r_csgo_render_post_film_grain \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "r_csgo_render_post_fxaa",
"contents": "r_csgo_render_post_fxaa \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "r_csgo_render_post_local_contrast",
"contents": "r_csgo_render_post_local_contrast \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_csgo_render_post_mirror_horizontal",
"contents": "r_csgo_render_post_mirror_horizontal \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "r_csgo_render_post_mirror_vertical",
"contents": "r_csgo_render_post_mirror_vertical \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "r_csgo_render_translucent",
"contents": "r_csgo_render_translucent \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_csgo_resolve_dither_bluenoise_amount",
"contents": "r_csgo_resolve_dither_bluenoise_amount \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 4. Equivalent to r_csgo_render_dither_scale, but purely to control bluenoise for R11G11B10 downsample dither (if r_csgo_r11g11b10_dither_mode = 2) "
},
{
"trigger": "r_csgo_resolve_dither_noise_amount",
"contents": "r_csgo_resolve_dither_noise_amount \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.2. Amount of screen space dither noise to apply during resolve (used/essential with R11G11B10_FLOAT RT) "
},
{
"trigger": "r_csgo_shadow_map_allocation_failure_policy",
"contents": "r_csgo_shadow_map_allocation_failure_policy \"${1:value}\"",
"kind": "snippet",
"details": "What happens when a shadow map fails allocation? 0 = don't render, 1 = render unshadowed "
},
{
"trigger": "r_csgo_shadows_debug",
"contents": "r_csgo_shadows_debug \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "r_csgo_single_lightbinner",
"contents": "r_csgo_single_lightbinner \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_csgo_smoke_avoid_flat",
"contents": "r_csgo_smoke_avoid_flat \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_csgo_smoke_fullres_pass",
"contents": "r_csgo_smoke_fullres_pass \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Does a full res pass to cover holes and artifacts in smoke low res "
},
{
"trigger": "r_csgo_smoke_overlay_min_dt",
"contents": "r_csgo_smoke_overlay_min_dt \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.0156"
},
{
"trigger": "r_csgo_smoke_quality",
"contents": "r_csgo_smoke_quality \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2. 0 - no CSM, 1 - use 3x3 or bilinear PCF (dep on shader detail), 2 - use 25 tap PCSS PCF "
},
{
"trigger": "r_csgo_smoke_shadow",
"contents": "r_csgo_smoke_shadow \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "r_csgo_stencil_sniper_zoom",
"contents": "r_csgo_stencil_sniper_zoom \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_csgo_tools_vis_cubemap_roughness",
"contents": "r_csgo_tools_vis_cubemap_roughness \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.0001"
},
{
"trigger": "r_csgo_viewmodel_envmap_clamp_plane_distance",
"contents": "r_csgo_viewmodel_envmap_clamp_plane_distance \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 24"
},
{
"trigger": "r_csgo_viewmodel_envmap_position_bias",
"contents": "r_csgo_viewmodel_envmap_position_bias \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.85"
},
{
"trigger": "r_csgo_viewmodel_far_plane",
"contents": "r_csgo_viewmodel_far_plane \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 100"
},
{
"trigger": "r_csgo_viewmodel_near_plane",
"contents": "r_csgo_viewmodel_near_plane \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "r_csgo_volume_mboit_optimization",
"contents": "r_csgo_volume_mboit_optimization \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_csgo_water_effects",
"contents": "r_csgo_water_effects \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_csgo_water_reflections",
"contents": "r_csgo_water_reflections \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_csgo_water_refraction",
"contents": "r_csgo_water_refraction \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_csgo_water_skybox_depth",
"contents": "r_csgo_water_skybox_depth \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_cubemap_debug_colors",
"contents": "r_cubemap_debug_colors \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "r_dac_disable_portrait_world_renderer",
"contents": "r_dac_disable_portrait_world_renderer \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "r_debug_draw_safe_area_insets",
"contents": "r_debug_draw_safe_area_insets \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Render safe area insets as wireframe. "
},
{
"trigger": "r_debug_particle_shadows",
"contents": "r_debug_particle_shadows \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "r_debug_precipitation",
"contents": "r_debug_precipitation \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Show precipitation volumes "
},
{
"trigger": "r_decals",
"contents": "r_decals \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2048"
},
{
"trigger": "r_decals_default_fade_duration",
"contents": "r_decals_default_fade_duration \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "r_decals_default_start_fade",
"contents": "r_decals_default_start_fade \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 30"
},
{
"trigger": "r_decals_overide_fadestarttime_params",
"contents": "r_decals_overide_fadestarttime_params \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "r_depth_of_field",
"contents": "r_depth_of_field \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. 0 = off, 1 = enabled (high quality, circular bokeh, HDR) "
},
{
"trigger": "r_detail_lerp_znormal",
"contents": "r_detail_lerp_znormal \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.89"
},
{
"trigger": "r_detailprop_fade_dist",
"contents": "r_detailprop_fade_dist \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3000"
},
{
"trigger": "r_detailprop_force_probe",
"contents": "r_detailprop_force_probe \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "r_detailprop_lod_dist",
"contents": "r_detailprop_lod_dist \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 4000"
},
{
"trigger": "r_directional_lightmaps",
"contents": "r_directional_lightmaps \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_directlighting",
"contents": "r_directlighting \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Set to use direct lighting "
},
{
"trigger": "r_dither_scale",
"contents": "r_dither_scale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "r_dof_override",
"contents": "r_dof_override \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "r_dof_override_far_blurry",
"contents": "r_dof_override_far_blurry \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2000"
},
{
"trigger": "r_dof_override_far_crisp",
"contents": "r_dof_override_far_crisp \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 180"
},
{
"trigger": "r_dof_override_near_blurry",
"contents": "r_dof_override_near_blurry \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -100"
},
{
"trigger": "r_dof_override_near_crisp",
"contents": "r_dof_override_near_crisp \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "r_dof_override_tilt_to_ground",
"contents": "r_dof_override_tilt_to_ground \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.5"
},
{
"trigger": "r_dof2_maxblursize",
"contents": "r_dof2_maxblursize \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 5"
},
{
"trigger": "r_dof2_radiusscale",
"contents": "r_dof2_radiusscale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.25"
},
{
"trigger": "r_dopixelvisibility",
"contents": "r_dopixelvisibility \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_draw_first_tri_only",
"contents": "r_draw_first_tri_only \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "r_draw_instances",
"contents": "r_draw_instances \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_draw_overlays",
"contents": "r_draw_overlays \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_draw_particle_children_with_parents",
"contents": "r_draw_particle_children_with_parents \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. Draw particle children with parents (-1=use gameinfo, 0=no, 1=yes) "
},
{
"trigger": "r_draw3dskybox",
"contents": "r_draw3dskybox \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_drawblankworld",
"contents": "r_drawblankworld \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Render blank instead of the game world "
},
{
"trigger": "r_drawchickens",
"contents": "r_drawchickens \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Render chickens "
},
{
"trigger": "r_drawcsplayers",
"contents": "r_drawcsplayers \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Render CS players "
},
{
"trigger": "r_drawdecals",
"contents": "r_drawdecals \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Set to render decals "
},
{
"trigger": "r_drawdetailprops",
"contents": "r_drawdetailprops \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_drawdevvisualizers",
"contents": "r_drawdevvisualizers \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Render dev visualizers "
},
{
"trigger": "r_drawmodeldecals",
"contents": "r_drawmodeldecals \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_drawpanorama",
"contents": "r_drawpanorama \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Enable the rendering of panorama UI "
},
{
"trigger": "r_drawparticles",
"contents": "r_drawparticles \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Enable/disable particle rendering "
},
{
"trigger": "r_drawpixelvisibility",
"contents": "r_drawpixelvisibility \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Show the occlusion proxies "
},
{
"trigger": "r_drawropes",
"contents": "r_drawropes \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_drawskybox",
"contents": "r_drawskybox \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Render the 2d skybox. "
},
{
"trigger": "r_drawsprites",
"contents": "r_drawsprites \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_drawtracers",
"contents": "r_drawtracers \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_drawtracers_firstperson",
"contents": "r_drawtracers_firstperson \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_drawviewmodel",
"contents": "r_drawviewmodel \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Render view model "
},
{
"trigger": "r_drawworld",
"contents": "r_drawworld \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Render the world. "
},
{
"trigger": "r_dx11_software_cmd_lists",
"contents": "r_dx11_software_cmd_lists \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Enable Software Command lists for DX11 (Avoid using deferred contexts) "
},
{
"trigger": "r_enable_rigid_animation",
"contents": "r_enable_rigid_animation \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "r_experimental_lag_limiter",
"contents": "r_experimental_lag_limiter \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "r_extra_render_frames",
"contents": "r_extra_render_frames \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "r_fallback_texture_lod_scale",
"contents": "r_fallback_texture_lod_scale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2. Scale factor for requested texture size (texture streaming) - used for geo that doesn't have a precomputed UV density measure "
},
{
"trigger": "r_fallback_texture_orange",
"contents": "r_fallback_texture_orange \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Display fallback texture as orange "
},
{
"trigger": "r_farz",
"contents": "r_farz \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. Override the far clipping plane. -1 means to use the value in env_fog_controller. "
},
{
"trigger": "r_flashlightambient",
"contents": "r_flashlightambient \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "r_flashlightbacktraceoffset",
"contents": "r_flashlightbacktraceoffset \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.4"
},
{
"trigger": "r_flashlightbrightness",
"contents": "r_flashlightbrightness \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "r_flashlightconstant",
"contents": "r_flashlightconstant \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "r_flashlightfar",
"contents": "r_flashlightfar \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1500"
},
{
"trigger": "r_flashlightfov",
"contents": "r_flashlightfov \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 53"
},
{
"trigger": "r_flashlightladderdist",
"contents": "r_flashlightladderdist \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 40"
},
{
"trigger": "r_flashlightlinear",
"contents": "r_flashlightlinear \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 100"
},
{
"trigger": "r_flashlightlockposition",
"contents": "r_flashlightlockposition \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "r_flashlightmuzzleflashfov",
"contents": "r_flashlightmuzzleflashfov \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 120"
},
{
"trigger": "r_flashlightnear",
"contents": "r_flashlightnear \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 4"
},
{
"trigger": "r_flashlightnearoffsetscale",
"contents": "r_flashlightnearoffsetscale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "r_flashlightoffsetforward",
"contents": "r_flashlightoffsetforward \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "r_flashlightoffsetright",
"contents": "r_flashlightoffsetright \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 5"
},
{
"trigger": "r_flashlightoffsetup",
"contents": "r_flashlightoffsetup \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -5"
},
{
"trigger": "r_flashlightquadratic",
"contents": "r_flashlightquadratic \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "r_flashlightshadowatten",
"contents": "r_flashlightshadowatten \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.35"
},
{
"trigger": "r_flashlighttracedistcutoff",
"contents": "r_flashlighttracedistcutoff \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 128"
},
{
"trigger": "r_flashlighttracedistwatercutoff",
"contents": "r_flashlighttracedistwatercutoff \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 80"
},
{
"trigger": "r_flashlightvisualizetrace",
"contents": "r_flashlightvisualizetrace \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "r_force_no_present",
"contents": "r_force_no_present \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Force the render device to not present frames. "
},
{
"trigger": "r_force_render_frame_count",
"contents": "r_force_render_frame_count \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 5. The number of frames to render when a "
},
{
"trigger": "r_force_zprepass",
"contents": "r_force_zprepass \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. 0: Force z prepass off. 1: Force on. -1: Don't force "
},
{
"trigger": "r_frame_sync_enable",
"contents": "r_frame_sync_enable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_freeze_sceneobjects",
"contents": "r_freeze_sceneobjects \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "r_freezeparticles",
"contents": "r_freezeparticles \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Pause particle simulation "
},
{
"trigger": "r_fullscreen_gamma",
"contents": "r_fullscreen_gamma \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2.2. Screen Gamma (only in fullscreen modes) "
},
{
"trigger": "r_fullscreen_quad_single_triangle",
"contents": "r_fullscreen_quad_single_triangle \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_grass_allow_flattening",
"contents": "r_grass_allow_flattening \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "r_grass_alpha_test",
"contents": "r_grass_alpha_test \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "r_grass_density_mode",
"contents": "r_grass_density_mode \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. 0 = Density corresponds to blade existance, 1 = Density corresponds to blade height, 2 = Both 0 and 1 "
},
{
"trigger": "r_grass_end_fade",
"contents": "r_grass_end_fade \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3900"
},
{
"trigger": "r_grass_max_brightness_change",
"contents": "r_grass_max_brightness_change \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 75"
},
{
"trigger": "r_grass_parallel_load",
"contents": "r_grass_parallel_load \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "r_grass_quality",
"contents": "r_grass_quality \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3. 0 = Off, 1 = Low, 2 = Med, 3 = high, 4 = ultra "
},
{
"trigger": "r_grass_start_fade",
"contents": "r_grass_start_fade \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3000"
},
{
"trigger": "r_grass_vertex_lighting",
"contents": "r_grass_vertex_lighting \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "r_icon_custommaterial_maxres",
"contents": "r_icon_custommaterial_maxres \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 512. maxres for custommaterials when rendering icons "
},
{
"trigger": "r_icon_generate_mips",
"contents": "r_icon_generate_mips \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. generate mips for runtime and add sidecar file for offline "
},
{
"trigger": "r_icon_highcontrast_postprocessing_weight",
"contents": "r_icon_highcontrast_postprocessing_weight \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.375. if using high contrast postprocessing, use this weight (weight = 1.0 for characters)0 Max: 1"
},
{
"trigger": "r_icon_max_mip_width",
"contents": "r_icon_max_mip_width \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 128. r_icon_max_mip_width "
},
{
"trigger": "r_icon_player_equip_gloves_from_loadout",
"contents": "r_icon_player_equip_gloves_from_loadout \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. equip gloves on player for icon rendering from loadout, or use default gloves "
},
{
"trigger": "r_icon_rendering_height",
"contents": "r_icon_rendering_height \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 384. icon rendering height "
},
{
"trigger": "r_icon_rendering_msaa_mode",
"contents": "r_icon_rendering_msaa_mode \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 4. MSAA mode used for icon rendering 0-none, 1-2xMSAA, 2-4xMSAA, 3-6X, 4-8X, etc "
},
{
"trigger": "r_icon_rendering_width",
"contents": "r_icon_rendering_width \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 512. icon rendering width "
},
{
"trigger": "r_icon_show_timing",
"contents": "r_icon_show_timing \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. show timing in output "
},
{
"trigger": "r_icon_texturestreaming_waitframes",
"contents": "r_icon_texturestreaming_waitframes \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 30. r_icon_texturestreaming_waitframes "
},
{
"trigger": "r_icon_use_kv3_camera",
"contents": "r_icon_use_kv3_camera \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. use test kv3 data for camera "
},
{
"trigger": "r_impact_ricochet_chance",
"contents": "r_impact_ricochet_chance \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.3"
},
{
"trigger": "r_impacts_alt_orientation",
"contents": "r_impacts_alt_orientation \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_impacts_decal_grazing_incidence_cutoff",
"contents": "r_impacts_decal_grazing_incidence_cutoff \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.55"
},
{
"trigger": "r_impacts_decal_grazing_incidence_variance",
"contents": "r_impacts_decal_grazing_incidence_variance \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.1"
},
{
"trigger": "r_indirectlighting",
"contents": "r_indirectlighting \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Set to use indirect lighting "
},
{
"trigger": "r_JeepViewDampenDamp",
"contents": "r_JeepViewDampenDamp \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "r_JeepViewDampenFreq",
"contents": "r_JeepViewDampenFreq \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 7"
},
{
"trigger": "r_JeepViewZHeight",
"contents": "r_JeepViewZHeight \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 10"
},
{
"trigger": "r_legacy_vsync",
"contents": "r_legacy_vsync \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Use legacy vsync mode -- for testing for a couple user machines. "
},
{
"trigger": "r_light_flickering_enabled",
"contents": "r_light_flickering_enabled \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_light_probe_volume_debug_colors",
"contents": "r_light_probe_volume_debug_colors \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "r_light_probe_volume_debug_grid",
"contents": "r_light_probe_volume_debug_grid \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Show LPV debug grid, 0: off, 1: closest only 2: closest and keep 3: all "
},
{
"trigger": "r_light_probe_volume_debug_grid_albedo",
"contents": "r_light_probe_volume_debug_grid_albedo \"${1:value}\"",
"kind": "snippet",
"details": "albedo for LPV debug grid "
},
{
"trigger": "r_light_probe_volume_debug_grid_bbox",
"contents": "r_light_probe_volume_debug_grid_bbox \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Show LPV bounding box when debug grid is on, 0: off, 1: on "
},
{
"trigger": "r_light_probe_volume_debug_grid_metalness",
"contents": "r_light_probe_volume_debug_grid_metalness \"${1:value}\"",
"kind": "snippet",
"details": "metalness for LPV debug grid "
},
{
"trigger": "r_light_probe_volume_debug_grid_prim",
"contents": "r_light_probe_volume_debug_grid_prim \"${1:value}\"",
"kind": "snippet",
"details": "0: spheres, 1: cubes "
},
{
"trigger": "r_light_probe_volume_debug_grid_roughness",
"contents": "r_light_probe_volume_debug_grid_roughness \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.5. roughness for LPV debug grid "
},
{
"trigger": "r_light_probe_volume_debug_grid_samplesize",
"contents": "r_light_probe_volume_debug_grid_samplesize \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 4. sphere radius (world) for LPV debug grid "
},
{
"trigger": "r_lightBinnerFarPlane",
"contents": "r_lightBinnerFarPlane \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 4096"
},
{
"trigger": "r_lightmap_set",
"contents": "r_lightmap_set \"${1:value}\"",
"kind": "snippet",
"details": "Lightmap set to use, only works on map load "
},
{
"trigger": "r_lightmap_size",
"contents": "r_lightmap_size \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 65536. Maximum lightmap resolution. "
},
{
"trigger": "r_lightmap_size_directional_irradiance",
"contents": "r_lightmap_size_directional_irradiance \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. Maximum lightmap resolution for directional_irradiance channel. -1 = use value of r_lightmap_size "
},
{
"trigger": "r_low_latency",
"contents": "r_low_latency \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. NVIDIA Low Latency (0 = off, 1 = on, 2 = on + boost) "
},
{
"trigger": "r_low_latency_trigger_flash",
"contents": "r_low_latency_trigger_flash \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. NVIDIA Low Latency Trigger Flash "
},
{
"trigger": "r_mapextents",
"contents": "r_mapextents \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 16384. Set the max dimension for the map. This determines the far clipping plane "
},
{
"trigger": "r_max_texture_pool_size",
"contents": "r_max_texture_pool_size \"${1:value}\"",
"kind": "snippet",
"details": "Upper limit on texture pool size. "
},
{
"trigger": "r_mixed_shadows_fade_in_time",
"contents": "r_mixed_shadows_fade_in_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.5"
},
{
"trigger": "r_mixed_shadows_fade_out_time",
"contents": "r_mixed_shadows_fade_out_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.5"
},
{
"trigger": "r_monitor_3dskybox",
"contents": "r_monitor_3dskybox \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_morphing_enabled",
"contents": "r_morphing_enabled \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_multigpu_num_gpus_found",
"contents": "r_multigpu_num_gpus_found \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "r_multigpu_num_gpus_used",
"contents": "r_multigpu_num_gpus_used \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "r_muzzleflashbrightness",
"contents": "r_muzzleflashbrightness \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.4"
},
{
"trigger": "r_muzzleflashlinear",
"contents": "r_muzzleflashlinear \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.05"
},
{
"trigger": "r_nearz",
"contents": "r_nearz \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. Override the near clipping plane. -1 means use the default. "
},
{
"trigger": "r_particle_cables_cast_shadows",
"contents": "r_particle_cables_cast_shadows \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_particle_debug_filter",
"contents": "r_particle_debug_filter \"${1:value}\"",
"kind": "snippet",
"details": "Limit debug visualizations to substring match of effect name "
},
{
"trigger": "r_particle_debug_force_simulation",
"contents": "r_particle_debug_force_simulation \"${1:value}\"",
"kind": "snippet",
"details": "-1 for all asleep, 1 for all awake "
},
{
"trigger": "r_particle_debug_randomseeds",
"contents": "r_particle_debug_randomseeds \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Use random seeds in debug "
},
{
"trigger": "r_particle_enable_fastpath",
"contents": "r_particle_enable_fastpath \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_particle_force_material_binds",
"contents": "r_particle_force_material_binds \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "r_particle_gpu_implicit",
"contents": "r_particle_gpu_implicit \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_particle_gpu_implicit_debug_bricks",
"contents": "r_particle_gpu_implicit_debug_bricks \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "r_particle_gpu_implicit_debug_stats",
"contents": "r_particle_gpu_implicit_debug_stats \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "r_particle_gpu_implicit_debug_wireframe",
"contents": "r_particle_gpu_implicit_debug_wireframe \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "r_particle_gpu_implicit_lds_cache",
"contents": "r_particle_gpu_implicit_lds_cache \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "r_particle_max_detail_level",
"contents": "r_particle_max_detail_level \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3. The maximum detail level of particle to create "
},
{
"trigger": "r_particle_max_draw_distance",
"contents": "r_particle_max_draw_distance \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -214748.3648. The maximum distance that particles will render "
},
{
"trigger": "r_particle_max_texture_layers",
"contents": "r_particle_max_texture_layers \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "r_particle_min_timestep",
"contents": "r_particle_min_timestep \"${1:value}\"",
"kind": "snippet",
"details": "A minimum on particle simulation time, particle simulation happening more frequently than this will lerp. "
},
{
"trigger": "r_particle_mixed_resolution_viewstart",
"contents": "r_particle_mixed_resolution_viewstart \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 500"
},
{
"trigger": "r_particle_newcode",
"contents": "r_particle_newcode \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Enable new paths in some particle operators "
},
{
"trigger": "r_particle_render_refreshes_sleep_timer",
"contents": "r_particle_render_refreshes_sleep_timer \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Disable to get a better look at what's happening offscreen "
},
{
"trigger": "r_particle_render_test",
"contents": "r_particle_render_test \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. render particles 100 times and show perf "
},
{
"trigger": "r_particle_shadow_map_texture_size",
"contents": "r_particle_shadow_map_texture_size \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1536"
},
{
"trigger": "r_particle_shadows",
"contents": "r_particle_shadows \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_particle_shadows_cast_on_particles",
"contents": "r_particle_shadows_cast_on_particles \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_particle_shadows_cast_on_particles_scale",
"contents": "r_particle_shadows_cast_on_particles_scale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_particle_shadows_cast_on_world",
"contents": "r_particle_shadows_cast_on_world \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_particle_timescale",
"contents": "r_particle_timescale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "r_pipeline_stats_command_flush",
"contents": "r_pipeline_stats_command_flush \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Experimental: Set to 1 to enable full GPU pipeline flushing after each command list. "
},
{
"trigger": "r_pipeline_stats_flush_before_sleeping",
"contents": "r_pipeline_stats_flush_before_sleeping \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Experimental: Set to 1 to enable GPU pipeline flushes right before the render thread sleeps to wait for more work. "
},
{
"trigger": "r_pipeline_stats_present_flush",
"contents": "r_pipeline_stats_present_flush \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Experimental: Set to 1 to enable full GPU pipeline flushing after each present. "
},
{
"trigger": "r_pipeline_stats_use_flush_api",
"contents": "r_pipeline_stats_use_flush_api \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Experimental: Set to 1 to use the ID3D11DeviceContext11::Flush() to flush the GPU pipeline instead of queries. "
},
{
"trigger": "r_pixelvisibility_partial",
"contents": "r_pixelvisibility_partial \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_pixelvisibility_spew",
"contents": "r_pixelvisibility_spew \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "r_player_fog_distance_multiplier",
"contents": "r_player_fog_distance_multiplier \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1.7"
},
{
"trigger": "r_player_fog_maxdensity_multiplier",
"contents": "r_player_fog_maxdensity_multiplier \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.6"
},
{
"trigger": "r_player_visibility_mode",
"contents": "r_player_visibility_mode \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "r_player_visibility_stencil",
"contents": "r_player_visibility_stencil \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_player_visibility_strength",
"contents": "r_player_visibility_strength \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1.1"
},
{
"trigger": "r_post_bloom_debug",
"contents": "r_post_bloom_debug \"${1:value}\"",
"kind": "snippet",
"details": "1 = bloom output (before thresholding), 2 = quarter res downsample, 3 = quarter res effects bloom 4 = quarter res effects raw "
},
{
"trigger": "r_propsmaxdist",
"contents": "r_propsmaxdist \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1200. Maximum visible distance "
},
{
"trigger": "r_RainAllowInSplitScreen",
"contents": "r_RainAllowInSplitScreen \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Allows rain in splitscreen "
},
{
"trigger": "r_RainParticleDensity",
"contents": "r_RainParticleDensity \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Density of Particle Rain 0-1 "
},
{
"trigger": "r_refraction_clip_plane_adjust",
"contents": "r_refraction_clip_plane_adjust \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "r_render_to_cubemap_begin_mixing_roughness",
"contents": "r_render_to_cubemap_begin_mixing_roughness \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.25"
},
{
"trigger": "r_render_to_cubemap_debug",
"contents": "r_render_to_cubemap_debug \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "r_render_world_node_bounds",
"contents": "r_render_world_node_bounds \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Render world node bounds "
},
{
"trigger": "r_renderdoc_open_captures",
"contents": "r_renderdoc_open_captures \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_rendersun",
"contents": "r_rendersun \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Render sun lighting "
},
{
"trigger": "r_replay_post_effect",
"contents": "r_replay_post_effect \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "r_reset_character_decals",
"contents": "r_reset_character_decals \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "r_ropetranslucent",
"contents": "r_ropetranslucent \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_screen_size_expansion",
"contents": "r_screen_size_expansion \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "r_shadows",
"contents": "r_shadows \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_show_build_info",
"contents": "r_show_build_info \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Build information. Leave this enabled when submitting bug screenshots and videos, please! "
},
{
"trigger": "r_show_hipoly_draw_calls",
"contents": "r_show_hipoly_draw_calls \"${1:value}\"",
"kind": "snippet",
"details": "Transparent wireframe overlay for draw calls with triangle count higher than specified number "
},
{
"trigger": "r_showdebugoverlays",
"contents": "r_showdebugoverlays \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Set to render debug overlays "
},
{
"trigger": "r_showdebugrendertarget",
"contents": "r_showdebugrendertarget \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Set the debug render target to show, 0 == disable "
},
{
"trigger": "r_showsceneobjectbounds",
"contents": "r_showsceneobjectbounds \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Show scenesystem object bounding boxes "
},
{
"trigger": "r_showsunshadowdebugrendertargets",
"contents": "r_showsunshadowdebugrendertargets \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Set to render sun shadow render targets "
},
{
"trigger": "r_showsunshadowdebugsplitvis",
"contents": "r_showsunshadowdebugsplitvis \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Set to render sun shadow split visibility debugger "
},
{
"trigger": "r_size_cull_threshold",
"contents": "r_size_cull_threshold \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.33. Threshold of screen size percentage below which objects get culled "
},
{
"trigger": "r_size_cull_threshold_fade",
"contents": "r_size_cull_threshold_fade \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 7.5. % above the screen size percentage where we will start fading out (==0 will disable fading). "
},
{
"trigger": "r_size_cull_threshold_shadow",
"contents": "r_size_cull_threshold_shadow \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.2. Threshold of sun shadow map size percentage below which objects get culled "
},
{
"trigger": "r_skinning_enabled",
"contents": "r_skinning_enabled \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_skip_precache_validation_check",
"contents": "r_skip_precache_validation_check \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_smooth_morph_normals",
"contents": "r_smooth_morph_normals \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_ssao",
"contents": "r_ssao \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Set to use screen-space ambient occlusion "
},
{
"trigger": "r_ssao_bias",
"contents": "r_ssao_bias \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2.5"
},
{
"trigger": "r_ssao_blur",
"contents": "r_ssao_blur \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_ssao_radius",
"contents": "r_ssao_radius \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 8"
},
{
"trigger": "r_ssao_strength",
"contents": "r_ssao_strength \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3"
},
{
"trigger": "r_stereo_multiview_instancing",
"contents": "r_stereo_multiview_instancing \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Use multiview instancing for stereo rendering. "
},
{
"trigger": "r_strip_invisible_during_sceneobject_update",
"contents": "r_strip_invisible_during_sceneobject_update \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "r_suppress_redundant_state_changes",
"contents": "r_suppress_redundant_state_changes \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_temp",
"contents": "r_temp \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_texture_budget_dynamic",
"contents": "r_texture_budget_dynamic \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Dynamically adjust texture streaming budget based on GPU memory usage. "
},
{
"trigger": "r_texture_budget_threshold",
"contents": "r_texture_budget_threshold \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.9. Reduce texture memory pool size when this percentage of the budget is full. "
},
{
"trigger": "r_texture_budget_update_period",
"contents": "r_texture_budget_update_period \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.5. Time (in seconds) between updating texture memory budget. "
},
{
"trigger": "r_texture_eager_eviction",
"contents": "r_texture_eager_eviction \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "r_texture_hookup_uses_threadpool",
"contents": "r_texture_hookup_uses_threadpool \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Async Texture hookup uses its own threadpool instead of the global pool. "
},
{
"trigger": "r_texture_lod_scale",
"contents": "r_texture_lod_scale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Scale factor for requested texture size (texture streaming) "
},
{
"trigger": "r_texture_nonstreaming_load",
"contents": "r_texture_nonstreaming_load \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Allow immediately loading mips of textures (when possible) when their headers are loaded, saving IO & reducing latency. "
},
{
"trigger": "r_texture_pool_increase_rate",
"contents": "r_texture_pool_increase_rate \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 64. Increase texture memory pool size by this many MB / s when under budget. "
},
{
"trigger": "r_texture_pool_reduce_rate",
"contents": "r_texture_pool_reduce_rate \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 256. Reduce texture memory pool size by this many MB / s when over budget. "
},
{
"trigger": "r_texture_pool_size",
"contents": "r_texture_pool_size \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1600. Total size of the texture pool in MB "
},
{
"trigger": "r_texture_stream_max_resolution",
"contents": "r_texture_stream_max_resolution \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. Maximum resolution for top mip level in streaming textures. -1 = ignored. "
},
{
"trigger": "r_texture_stream_mip_bias",
"contents": "r_texture_stream_mip_bias \"${1:value}\"",
"kind": "snippet",
"details": "Biases the mip level the texture streaming system choses to stream for each texture. "
},
{
"trigger": "r_texture_stream_resolution_bias",
"contents": "r_texture_stream_resolution_bias \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "r_texture_stream_resolution_bias_decrease_rate",
"contents": "r_texture_stream_resolution_bias_decrease_rate \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.1"
},
{
"trigger": "r_texture_stream_resolution_bias_increase_rate",
"contents": "r_texture_stream_resolution_bias_increase_rate \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.05"
},
{
"trigger": "r_texture_stream_resolution_bias_min",
"contents": "r_texture_stream_resolution_bias_min \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "r_texture_stream_resolution_bias_update_period",
"contents": "r_texture_stream_resolution_bias_update_period \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.5"
},
{
"trigger": "r_texture_stream_throttle_amount",
"contents": "r_texture_stream_throttle_amount \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 10"
},
{
"trigger": "r_texture_stream_throttle_count",
"contents": "r_texture_stream_throttle_count \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3"
},
{
"trigger": "r_texture_stream_throttle_count_over_budget",
"contents": "r_texture_stream_throttle_count_over_budget \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "r_texture_streaming_timesliced",
"contents": "r_texture_streaming_timesliced \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_texture_streamout_unthrottle_ms",
"contents": "r_texture_streamout_unthrottle_ms \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.2. After hitting throttling limits for streamout, allow it to continue up to this number of milliseconds. "
},
{
"trigger": "r_texturefilteringquality",
"contents": "r_texturefilteringquality \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. 0: Bilinear, 1: Trilinear, 2: Aniso 2x, 3: Aniso 4x, 4: Aniso 8x, 5: Aniso 16x "
},
{
"trigger": "r_threaded_particles",
"contents": "r_threaded_particles \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_threaded_scene_object_update",
"contents": "r_threaded_scene_object_update \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_timestamp_query_multiplier",
"contents": "r_timestamp_query_multiplier \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Set the TIMESTAMP query cycle multiplier, for drivers that lie "
},
{
"trigger": "r_translucent",
"contents": "r_translucent \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Enable rendering of translucent geometry "
},
{
"trigger": "r_use_memory_budget_model",
"contents": "r_use_memory_budget_model \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Use a model of GPU memory use to determine budget rather than querying the OS. "
},
{
"trigger": "r_validate_texture_streaming",
"contents": "r_validate_texture_streaming \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Dumps state of texture streaming at the next frame boundary. "
},
{
"trigger": "r_vconsole_foregroundforcerender",
"contents": "r_vconsole_foregroundforcerender \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. When VConsole is in the foreground, force all engine & tools to render "
},
{
"trigger": "r_wait_on_present",
"contents": "r_wait_on_present \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "r_world_allow_bindless_desc",
"contents": "r_world_allow_bindless_desc \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "r_world_frame_load_threshold_ms",
"contents": "r_world_frame_load_threshold_ms \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 10"
},
{
"trigger": "r_world_wind_dir",
"contents": "r_world_wind_dir \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "r_world_wind_frequency_grass",
"contents": "r_world_wind_frequency_grass \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.03"
},
{
"trigger": "r_world_wind_frequency_trees",
"contents": "r_world_wind_frequency_trees \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.003"
},
{
"trigger": "r_world_wind_offset_speed",
"contents": "r_world_wind_offset_speed \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "r_world_wind_smooth_time",
"contents": "r_world_wind_smooth_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2"
},
{
"trigger": "r_world_wind_strength",
"contents": "r_world_wind_strength \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 40"
},
{
"trigger": "r_worldlod",
"contents": "r_worldlod \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Set to enable world LOD "
},
{
"trigger": "r_zprepass_normals",
"contents": "r_zprepass_normals \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. 0: Use normals reconstructed from depth. 1: Output correct normals in z prepass. "
},
{
"trigger": "radarvisdistance",
"contents": "radarvisdistance \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1000. at this distance and beyond you need to be point right at someone to see themMin: 10 "
},
{
"trigger": "radarvismaxdot",
"contents": "radarvismaxdot \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.996. how closely you have to point at someone to see them beyond max distance0 Max: 1"
},
{
"trigger": "radarvismethod",
"contents": "radarvismethod \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. 0 for traditional method, 1 for more realistic method0 Max: 1"
},
{
"trigger": "radarvispow",
"contents": "radarvispow \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.4. the degree to which you can point away from a target, and still see them on radar. "
},
{
"trigger": "ragdoll_debug_item_detachment",
"contents": "ragdoll_debug_item_detachment \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "ragdoll_friction_scale",
"contents": "ragdoll_friction_scale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.6"
},
{
"trigger": "ragdoll_gravity_scale",
"contents": "ragdoll_gravity_scale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "ragdoll_impact_strength",
"contents": "ragdoll_impact_strength \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 500"
},
{
"trigger": "ragdoll_lru_debug_removal",
"contents": "ragdoll_lru_debug_removal \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "ragdoll_lru_min_age",
"contents": "ragdoll_lru_min_age \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 10"
},
{
"trigger": "ragdoll_override_root_orientation",
"contents": "ragdoll_override_root_orientation \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "ragdoll_prop_settle",
"contents": "ragdoll_prop_settle \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Enable more aggressive ragdoll settling "
},
{
"trigger": "ragdoll_prop_sleepaftertime",
"contents": "ragdoll_prop_sleepaftertime \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 4. After this many seconds of being basically stationary, the ragdoll will go to sleep. "
},
{
"trigger": "ragdoll_prop_sleepdisabletime",
"contents": "ragdoll_prop_sleepdisabletime \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1.5. Ragdoll is not allowed to physically sleep until this timer has elapsed. "
},
{
"trigger": "ragdoll_relax_limts",
"contents": "ragdoll_relax_limts \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "ragdoll_scale_sleep_tolerance",
"contents": "ragdoll_scale_sleep_tolerance \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "ragdoll_validate_targetpose",
"contents": "ragdoll_validate_targetpose \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "ragdoll_visualize_creation_skeleton",
"contents": "ragdoll_visualize_creation_skeleton \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "ragdoll_visualize_targetpose",
"contents": "ragdoll_visualize_targetpose \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "rate",
"contents": "rate \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 786432. Min bytes/sec the host can receive dataMin: 98304 Max: 1000000"
},
{
"trigger": "rcon_address",
"contents": "rcon_address \"${1:value}\"",
"kind": "snippet",
"details": "Address of remote server if sending unconnected rcon commands (format x.x.x.x:p) "
},
{
"trigger": "rcon_connected_clients_allow",
"contents": "rcon_connected_clients_allow \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Allow clients to use rcon commands on server. "
},
{
"trigger": "rcon_password",
"contents": "rcon_password \"${1:value}\"",
"kind": "snippet",
"details": "remote console password. "
},
{
"trigger": "recast_mark_overhang",
"contents": "recast_mark_overhang \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Enable/disable overhang detection "
},
{
"trigger": "recast_partitioning",
"contents": "recast_partitioning \"${1:value}\"",
"kind": "snippet",
"details": "0 = watershed, 1 = monotone, 2 = layers "
},
{
"trigger": "replay_debug",
"contents": "replay_debug \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "report_cliententitysim",
"contents": "report_cliententitysim \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. List all clientside simulations and time - will report and turn itself off. "
},
{
"trigger": "report_clientthinklist",
"contents": "report_clientthinklist \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. List all clientside entities thinking and time - will report and turn itself off. "
},
{
"trigger": "report_connection_failure_percentage",
"contents": "report_connection_failure_percentage \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "resourcesystem_multiframe_finalize_time_msec",
"contents": "resourcesystem_multiframe_finalize_time_msec \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 10. Max time to spend finalizing resources per frame in miliseconds. "
},
{
"trigger": "rope_averagelight",
"contents": "rope_averagelight \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Makes ropes use average of cubemap lighting instead of max intensity. "
},
{
"trigger": "rope_collide",
"contents": "rope_collide \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Collide rope with the world "
},
{
"trigger": "rope_shake",
"contents": "rope_shake \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "rope_smooth_enlarge",
"contents": "rope_smooth_enlarge \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1.4. How much to enlarge ropes in screen space for antialiasing effect "
},
{
"trigger": "rope_smooth_maxalpha",
"contents": "rope_smooth_maxalpha \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.5. Alpha for rope antialiasing effect "
},
{
"trigger": "rope_smooth_maxalphawidth",
"contents": "rope_smooth_maxalphawidth \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1.75"
},
{
"trigger": "rope_smooth_minalpha",
"contents": "rope_smooth_minalpha \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.2. Alpha for rope antialiasing effect "
},
{
"trigger": "rope_smooth_minwidth",
"contents": "rope_smooth_minwidth \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.3. When using smoothing, this is the min screenspace width it lets a rope shrink to "
},
{
"trigger": "rope_subdiv",
"contents": "rope_subdiv \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2. Rope subdivision amount0 Max: 8"
},
{
"trigger": "rope_wind_dist",
"contents": "rope_wind_dist \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1000. Don't use CPU applying small wind gusts to ropes when they're past this distance. "
},
{
"trigger": "rr_dacmode",
"contents": "rr_dacmode \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. If set to 1, enable special functionality for DAC "
},
{
"trigger": "rr_debugclassname",
"contents": "rr_debugclassname \"${1:value}\"",
"kind": "snippet",
"details": "If set, rr_debugclassname will print only response tests where 'classname' corresponds to this variable. Use to filter for a specific character. "
},
{
"trigger": "rr_debugresponseconcept",
"contents": "rr_debugresponseconcept \"${1:value}\"",
"kind": "snippet",
"details": "If set, rr_debugresponseconcept will print only responses testing for the specified concept "
},
{
"trigger": "rr_debugresponses",
"contents": "rr_debugresponses \"${1:value}\"",
"kind": "snippet",
"details": "Show verbose matching output (1 for simple, 2 for rule scoring, 3 for noisy). If set to 4, it will only show response success/failure for npc_selected NPCs. "
},
{
"trigger": "rr_debugrule",
"contents": "rr_debugrule \"${1:value}\"",
"kind": "snippet",
"details": "If set to the name of the rule, that rule's score will be shown whenever a concept is passed into the response rules system. "
},
{
"trigger": "rr_dumpresponses",
"contents": "rr_dumpresponses \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Dump all response_rules.txt and rules (requires restart) "
},
{
"trigger": "rr_followup_maxdist",
"contents": "rr_followup_maxdist \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1800. 'then ANY' or 'then ALL' response followups will be dispatched only to characters within this distance. "
},
{
"trigger": "rr_thenany_score_slop",
"contents": "rr_thenany_score_slop \"${1:value}\"",
"kind": "snippet",
"details": "When computing respondents for a 'THEN ANY' rule, all rule-matching scores within this much of the best score will be considered. "
},
{
"trigger": "rtx_force_default_hitgroup",
"contents": "rtx_force_default_hitgroup \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Forces all ray traced geometry to use default hit shaders instead of specialized ones. "
},
{
"trigger": "rubikon_joint_always_draw_at_pivot_point",
"contents": "rubikon_joint_always_draw_at_pivot_point \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "rubikon_joint_deepdebugging",
"contents": "rubikon_joint_deepdebugging \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "safezonex",
"contents": "safezonex \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. The percentage of the screen width that is considered safe from overscan. Cannot result in a width less than the height.0 Max: 1"
},
{
"trigger": "safezoney",
"contents": "safezoney \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. The percentage of the screen height that is considered safe from overscanMin: 0.8 Max: 1"
},
{
"trigger": "save_async",
"contents": "save_async \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "save_fake_hitch",
"contents": "save_fake_hitch \"${1:value}\"",
"kind": "snippet",
"details": "Force a busy wait for the specified number of milliseconds during save to simulate a hitch "
},
{
"trigger": "save_history_count",
"contents": "save_history_count \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Keep this many old copies in history of autosaves and quicksaves. "
},
{
"trigger": "save_maxarray_spew",
"contents": "save_maxarray_spew \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 10. Max number of array entries to spew when using SaveRestoreIO spewing. "
},
{
"trigger": "save_screenshot",
"contents": "save_screenshot \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2. 0 = none, 1 = non-autosave, 2 = always, 3 = bug_only "
},
{
"trigger": "save_spew",
"contents": "save_spew \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sc_aggregate_fragment_merging",
"contents": "sc_aggregate_fragment_merging \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "sc_aggregate_gpu_culling",
"contents": "sc_aggregate_gpu_culling \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Toggles GPU culling of aggregate meshes "
},
{
"trigger": "sc_aggregate_gpu_culling_conservative_bounds",
"contents": "sc_aggregate_gpu_culling_conservative_bounds \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sc_aggregate_gpu_culling_show_culled",
"contents": "sc_aggregate_gpu_culling_show_culled \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. SceneSystem/Aggregates/Show GPU Culled Meshes "
},
{
"trigger": "sc_aggregate_gpu_occlusion_culling",
"contents": "sc_aggregate_gpu_occlusion_culling \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "sc_aggregate_material_solo",
"contents": "sc_aggregate_material_solo \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "sc_allow_dithered_lod",
"contents": "sc_allow_dithered_lod \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Allow use of dithered lod transitions "
},
{
"trigger": "sc_allow_dynamic_constant_batching",
"contents": "sc_allow_dynamic_constant_batching \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "sc_allow_precomputed_vismembers",
"contents": "sc_allow_precomputed_vismembers \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "sc_allow_secondary_contexts",
"contents": "sc_allow_secondary_contexts \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "sc_batch_layer_cb_updates",
"contents": "sc_batch_layer_cb_updates \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "sc_bounds_group_cull",
"contents": "sc_bounds_group_cull \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "sc_cache_envmap_lpv_lookup",
"contents": "sc_cache_envmap_lpv_lookup \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "sc_check_world",
"contents": "sc_check_world \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sc_clutter_density_full_size",
"contents": "sc_clutter_density_full_size \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.05. Screen-size where clutter will be full density "
},
{
"trigger": "sc_clutter_density_none_size",
"contents": "sc_clutter_density_none_size \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.01. Screen-size where clutter will be gone "
},
{
"trigger": "sc_clutter_draw",
"contents": "sc_clutter_draw \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. SceneSystem/Aggregates/Draw Aggregates "
},
{
"trigger": "sc_disable_baked_lighting",
"contents": "sc_disable_baked_lighting \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sc_disable_culling_boxes",
"contents": "sc_disable_culling_boxes \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sc_disable_procedural_layer_rendering",
"contents": "sc_disable_procedural_layer_rendering \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sc_disable_shadow_fastpath",
"contents": "sc_disable_shadow_fastpath \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sc_disable_shadow_materials",
"contents": "sc_disable_shadow_materials \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sc_disable_spotlight_shadows",
"contents": "sc_disable_spotlight_shadows \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sc_disable_world_materials",
"contents": "sc_disable_world_materials \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sc_disableThreading",
"contents": "sc_disableThreading \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sc_dithered_lod_transition_amt",
"contents": "sc_dithered_lod_transition_amt \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.075. Percentage of the transition between two lods we will apply a dither0 Max: 0.2"
},
{
"trigger": "sc_draw_aggregate_meshes",
"contents": "sc_draw_aggregate_meshes \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. SceneSystem/Aggregates/Draw Aggregates "
},
{
"trigger": "sc_dump_lists",
"contents": "sc_dump_lists \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sc_enable_discard",
"contents": "sc_enable_discard \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "sc_extended_stats",
"contents": "sc_extended_stats \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sc_force_lod_level",
"contents": "sc_force_lod_level \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "sc_force_materials_batchable",
"contents": "sc_force_materials_batchable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sc_force_push_constant_update_every_draw",
"contents": "sc_force_push_constant_update_every_draw \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sc_force_single_display_list_per_layer",
"contents": "sc_force_single_display_list_per_layer \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sc_force_translation_in_projection",
"contents": "sc_force_translation_in_projection \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. If enabled, the camera's translation will be included in the projection matrix. "
},
{
"trigger": "sc_hdr_enabled_override",
"contents": "sc_hdr_enabled_override \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. Override default setting for HDR rendering. -1 default, 0 NoHdr, 1 Hdr, 2 Hdr 1010102 3 Hdr 111110 "
},
{
"trigger": "sc_keep_all_layers",
"contents": "sc_keep_all_layers \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sc_layer_batch_threshold",
"contents": "sc_layer_batch_threshold \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 128"
},
{
"trigger": "sc_layer_batch_threshold_fullsort",
"contents": "sc_layer_batch_threshold_fullsort \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 80"
},
{
"trigger": "sc_lod_distance_scale_override",
"contents": "sc_lod_distance_scale_override \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "sc_log_submits",
"contents": "sc_log_submits \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Log out display list submits from scenesystem "
},
{
"trigger": "sc_max_framebuffer_copies_per_layer",
"contents": "sc_max_framebuffer_copies_per_layer \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "sc_mesh_backface_culling",
"contents": "sc_mesh_backface_culling \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "sc_new_morph_atlasing",
"contents": "sc_new_morph_atlasing \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "sc_no_cull",
"contents": "sc_no_cull \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sc_no_vis",
"contents": "sc_no_vis \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sc_only_render_opaque",
"contents": "sc_only_render_opaque \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sc_only_render_shadowcasters",
"contents": "sc_only_render_shadowcasters \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sc_override_shadow_fade_max_dist",
"contents": "sc_override_shadow_fade_max_dist \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "sc_override_shadow_fade_min_dist",
"contents": "sc_override_shadow_fade_min_dist \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "sc_parallel_render_a_view",
"contents": "sc_parallel_render_a_view \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sc_queue_reflection_views_to_layers",
"contents": "sc_queue_reflection_views_to_layers \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "sc_reject_all_objects",
"contents": "sc_reject_all_objects \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sc_shadow_depth_bias",
"contents": "sc_shadow_depth_bias \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 256"
},
{
"trigger": "sc_shadow_depth_bias_clamp",
"contents": "sc_shadow_depth_bias_clamp \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "sc_shadow_depth_bias_state_override",
"contents": "sc_shadow_depth_bias_state_override \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sc_shadow_slopescale_depth_bias",
"contents": "sc_shadow_slopescale_depth_bias \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2.13"
},
{
"trigger": "sc_show_cs_skinning_stats",
"contents": "sc_show_cs_skinning_stats \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. SceneSystem/Compute Skinning Stats "
},
{
"trigger": "sc_show_gpu_profiler",
"contents": "sc_show_gpu_profiler \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. SceneSystem/GPU Profiler "
},
{
"trigger": "sc_show_rejected_objects",
"contents": "sc_show_rejected_objects \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "sc_show_rejected_objects_range",
"contents": "sc_show_rejected_objects_range \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "sc_show_texture_visualizer",
"contents": "sc_show_texture_visualizer \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. SceneSystem/Texture Visualizer "
},
{
"trigger": "sc_show_tonemap_visualizer",
"contents": "sc_show_tonemap_visualizer \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. SceneSystem/Tonemap Visualizer "
},
{
"trigger": "sc_skip_identical_rt_binds",
"contents": "sc_skip_identical_rt_binds \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sc_skip_traversal",
"contents": "sc_skip_traversal \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sc_spew_cmt_usage",
"contents": "sc_spew_cmt_usage \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sc_throw_away_all_layers",
"contents": "sc_throw_away_all_layers \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sc_use_clear_subrect",
"contents": "sc_use_clear_subrect \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sc_visualize_batches",
"contents": "sc_visualize_batches \"${1:value}\"",
"kind": "snippet",
"details": "color per batch "
},
{
"trigger": "sc_visualize_sceneobjects",
"contents": "sc_visualize_sceneobjects \"${1:value}\"",
"kind": "snippet",
"details": "1 = visualize bounds, 2 = visualize sceneobject mesh materials, 3 = required texture size, 4 = bounds group, 5 = LOD, 6 == LPV Binding "
},
{
"trigger": "scene_clientflex",
"contents": "scene_clientflex \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Do client side flex animation. "
},
{
"trigger": "scene_maxcaptionradius",
"contents": "scene_maxcaptionradius \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1200. Only show closed captions if recipient is within this many units of speaking actor (0==disabled). "
},
{
"trigger": "scene_print",
"contents": "scene_print \"${1:value}\"",
"kind": "snippet",
"details": "When playing back a scene, print timing and event info to console. "
},
{
"trigger": "scene_vcdautosave",
"contents": "scene_vcdautosave \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Create a savegame before VCD playback "
},
{
"trigger": "screenmessage_notifytime",
"contents": "screenmessage_notifytime \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 8. How long to display screen message text "
},
{
"trigger": "screenmessage_show",
"contents": "screenmessage_show \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. Enable display of console messages on screen. 1 = Enabled, 0 = Disabled, -1 = Enabled if vgui is not present "
},
{
"trigger": "screenshot_height",
"contents": "screenshot_height \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. Screenshot height. -1 for screen height. "
},
{
"trigger": "screenshot_prefix",
"contents": "screenshot_prefix \"${1:value}\"",
"kind": "snippet",
"details": "Set the screenshot auto naming prefix. "
},
{
"trigger": "screenshot_subdir",
"contents": "screenshot_subdir \"${1:value}\"",
"kind": "snippet",
"details": "Set the screenshot directory. "
},
{
"trigger": "screenshot_width",
"contents": "screenshot_width \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. Screenshot width. -1 for screen width. "
},
{
"trigger": "script_attach_debugger_at_startup",
"contents": "script_attach_debugger_at_startup \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "script_break_in_native_debugger_on_error",
"contents": "script_break_in_native_debugger_on_error \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sensitivity",
"contents": "sensitivity \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1.25. Mouse sensitivity.Min: 0.0001 Max: 8"
},
{
"trigger": "servercfgfile",
"contents": "servercfgfile \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "shake_show",
"contents": "shake_show \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Displays a list of the active screen shakes. "
},
{
"trigger": "shatterglass_cleanup",
"contents": "shatterglass_cleanup \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "shatterglass_cleanup_max",
"contents": "shatterglass_cleanup_max \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 150"
},
{
"trigger": "shatterglass_debug",
"contents": "shatterglass_debug \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "shatterglass_distort",
"contents": "shatterglass_distort \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "shatterglass_edge_uv_scale",
"contents": "shatterglass_edge_uv_scale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.05"
},
{
"trigger": "shatterglass_hit_tolerance",
"contents": "shatterglass_hit_tolerance \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2"
},
{
"trigger": "shatterglass_shard_lifetime",
"contents": "shatterglass_shard_lifetime \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 15"
},
{
"trigger": "shatterglass_subdiv_size",
"contents": "shatterglass_subdiv_size \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1.5"
},
{
"trigger": "shatterglass_voronoi_size",
"contents": "shatterglass_voronoi_size \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 15"
},
{
"trigger": "show_visibility_boxes",
"contents": "show_visibility_boxes \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Enable or Disable debug display of visibility boxes "
},
{
"trigger": "silence_dsp",
"contents": "silence_dsp \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. When on, silences all DSP mixes. "
},
{
"trigger": "sk_autoaim_mode",
"contents": "sk_autoaim_mode \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "sk_player_arm",
"contents": "sk_player_arm \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "sk_player_chest",
"contents": "sk_player_chest \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "sk_player_head",
"contents": "sk_player_head \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2"
},
{
"trigger": "sk_player_leg",
"contents": "sk_player_leg \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "sk_player_stomach",
"contents": "sk_player_stomach \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "skel_constraints_enable",
"contents": "skel_constraints_enable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "skel_debug",
"contents": "skel_debug \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "skeleton_instance_lod_optimization",
"contents": "skeleton_instance_lod_optimization \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Compute LOD mask internally like since 2016, i.e. force all LOD groups' bones to compute "
},
{
"trigger": "skeleton_instance_scaleset_enable",
"contents": "skeleton_instance_scaleset_enable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "skeleton_instance_smear_boneflags",
"contents": "skeleton_instance_smear_boneflags \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Smear boneflags across the model. Costs computation, but tests to make sure your bone flags are consistent. "
},
{
"trigger": "skill",
"contents": "skill \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Game skill level.Min: 1 Max: 3"
},
{
"trigger": "slope_drop_blend_max_distance",
"contents": "slope_drop_blend_max_distance \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 6. The distance when the max speed is used "
},
{
"trigger": "slope_drop_blend_max_speed",
"contents": "slope_drop_blend_max_speed \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 160. The max speed (in units/second) at which the slope offset can change "
},
{
"trigger": "slope_drop_blend_min_distance",
"contents": "slope_drop_blend_min_distance \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. The distance when the min speed is used "
},
{
"trigger": "slope_drop_blend_min_player_speed",
"contents": "slope_drop_blend_min_player_speed \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. The minimum player speed (in units/second) at which the slope offset blends at 100% speed "
},
{
"trigger": "slope_drop_blend_min_speed",
"contents": "slope_drop_blend_min_speed \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 5. The min speed (in units/second) at which the slope offset can change "
},
{
"trigger": "slope_drop_debug",
"contents": "slope_drop_debug \"${1:value}\"",
"kind": "snippet",
"details": "Toggles a test dropping the view offset based on the slope "
},
{
"trigger": "slope_drop_debug_draw",
"contents": "slope_drop_debug_draw \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Draw debug info for the slope drop "
},
{
"trigger": "slope_drop_enable",
"contents": "slope_drop_enable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Toggles a test dropping the view offset based on the slope "
},
{
"trigger": "slope_drop_max_offset",
"contents": "slope_drop_max_offset \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 16. The maximum distance to adjust the view height "
},
{
"trigger": "slope_drop_off_ground_blend_speed",
"contents": "slope_drop_off_ground_blend_speed \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 160. The speed with which the slope drop is blended out when the entity leaves the ground "
},
{
"trigger": "slope_drop_on_land_blend_time",
"contents": "slope_drop_on_land_blend_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.2. Time in seconds to blend the slope drop when landing on the ground. "
},
{
"trigger": "smoke_grenade_ct_color",
"contents": "smoke_grenade_ct_color \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "smoke_grenade_custom_color",
"contents": "smoke_grenade_custom_color \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. 0 = Gray (classic), 1 = Red, 2 = Orange, 3 = Skyblue, 4 = Yellow, 5 = Green, , 6 = Blue, 7 = Purple, 8 = pink "
},
{
"trigger": "smoke_grenade_t_color",
"contents": "smoke_grenade_t_color \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "smoke_param1",
"contents": "smoke_param1 \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 6.26"
},
{
"trigger": "smoke_param2",
"contents": "smoke_param2 \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 8.27"
},
{
"trigger": "smoke_param3",
"contents": "smoke_param3 \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.13"
},
{
"trigger": "smoke_param4",
"contents": "smoke_param4 \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "smoke_param5",
"contents": "smoke_param5 \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "smoke_use_noise_texture",
"contents": "smoke_use_noise_texture \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "smoke_volume_lod_ratio_change",
"contents": "smoke_volume_lod_ratio_change \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.6"
},
{
"trigger": "smoothstairs",
"contents": "smoothstairs \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Smooth player eye z coordinate when traversing stairs. "
},
{
"trigger": "snd_async_spew_blocking",
"contents": "snd_async_spew_blocking \"${1:value}\"",
"kind": "snippet",
"details": "Spew message to console any time async sound loading blocks on file i/o. "
},
{
"trigger": "snd_autodetect_latency",
"contents": "snd_autodetect_latency \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "snd_boxverb_simd",
"contents": "snd_boxverb_simd \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Enable SIMD code path for shoebox reverb processor. "
},
{
"trigger": "snd_boxverb_simd_svf",
"contents": "snd_boxverb_simd_svf \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. 0 = use biquad instead of svf, 1 = use vectorized svf, 2 = use scalar svf "
},
{
"trigger": "snd_break_on_start_soundevent",
"contents": "snd_break_on_start_soundevent \"${1:value}\"",
"kind": "snippet",
"details": "Use to debug break on any soundevent that is started matching this name "
},
{
"trigger": "snd_compare_KV_convert",
"contents": "snd_compare_KV_convert \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "snd_deathcamera_volume",
"contents": "snd_deathcamera_volume \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.16. Volume of Deathcam Timers0 Max: 1"
},
{
"trigger": "snd_delay_sound_ms_max",
"contents": "snd_delay_sound_ms_max \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 40. Sound device synchronization max delay (ms)0 Max: 250"
},
{
"trigger": "snd_delay_sound_ms_shift",
"contents": "snd_delay_sound_ms_shift \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 23. Sound device synchronization shift (ms)0 Max: 50"
},
{
"trigger": "snd_diffusor_simd",
"contents": "snd_diffusor_simd \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Enable SIMD code path for diffusor processor. "
},
{
"trigger": "snd_disable_mixer_duck",
"contents": "snd_disable_mixer_duck \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "snd_disable_mixer_solo",
"contents": "snd_disable_mixer_solo \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "snd_disable_radar_visualize",
"contents": "snd_disable_radar_visualize \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "snd_dsp_distance_max",
"contents": "snd_dsp_distance_max \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2000"
},
{
"trigger": "snd_dsp_distance_min",
"contents": "snd_dsp_distance_min \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 20"
},
{
"trigger": "snd_duckerattacktime",
"contents": "snd_duckerattacktime \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.5"
},
{
"trigger": "snd_duckerreleasetime",
"contents": "snd_duckerreleasetime \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2.5"
},
{
"trigger": "snd_duckerthreshold",
"contents": "snd_duckerthreshold \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.15"
},
{
"trigger": "snd_ducktovolume",
"contents": "snd_ducktovolume \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.55"
},
{
"trigger": "snd_enable_imgui",
"contents": "snd_enable_imgui \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Game/Sound System Debugger "
},
{
"trigger": "snd_enable_subgraph_corenull_passthrough",
"contents": "snd_enable_subgraph_corenull_passthrough \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "snd_enable_subgraph_log",
"contents": "snd_enable_subgraph_log \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "snd_envelope_rate",
"contents": "snd_envelope_rate \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.9"
},
{
"trigger": "snd_filter",
"contents": "snd_filter \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "snd_foliage_db_loss",
"contents": "snd_foliage_db_loss \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 4. foliage dB loss per 1200 units "
},
{
"trigger": "snd_gain",
"contents": "snd_gain \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "snd_gain_max",
"contents": "snd_gain_max \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "snd_gain_min",
"contents": "snd_gain_min \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.01"
},
{
"trigger": "snd_gamevoicevolume",
"contents": "snd_gamevoicevolume \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Game v.o. volume0 Max: 1"
},
{
"trigger": "snd_gamevolume",
"contents": "snd_gamevolume \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Game volume0 Max: 1"
},
{
"trigger": "snd_headphone_eq",
"contents": "snd_headphone_eq \"${1:value}\"",
"kind": "snippet",
"details": "Select Headphone EQ Preset "
},
{
"trigger": "snd_list",
"contents": "snd_list \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "snd_mainmenu_music_break_time_max",
"contents": "snd_mainmenu_music_break_time_max \"${1:value}\"",
"kind": "snippet",
"details": "Maximum amount of time to pause between playing main menu music "
},
{
"trigger": "snd_mainmenu_music_break_time_min",
"contents": "snd_mainmenu_music_break_time_min \"${1:value}\"",
"kind": "snippet",
"details": "Minimum amount of time to pause between playing main menu music "
},
{
"trigger": "snd_mapobjective_volume",
"contents": "snd_mapobjective_volume \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.04. Volume of Map Objective Music0 Max: 1"
},
{
"trigger": "snd_max_pitch_shift_inaccuracy",
"contents": "snd_max_pitch_shift_inaccuracy \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.08"
},
{
"trigger": "snd_menumusic_volume",
"contents": "snd_menumusic_volume \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.04. Volume of Menu / Non-gameplay music0 Max: 1"
},
{
"trigger": "snd_mergemethod",
"contents": "snd_mergemethod \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Sound merge method (0 == sum and clip, 1 == max, 2 == avg). "
},
{
"trigger": "snd_mix_async",
"contents": "snd_mix_async \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "snd_mixahead",
"contents": "snd_mixahead \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.001"
},
{
"trigger": "snd_mixer_master_dsp",
"contents": "snd_mixer_master_dsp \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "snd_mixer_master_level",
"contents": "snd_mixer_master_level \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "snd_music_selection",
"contents": "snd_music_selection \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Tracking rotating music for players with no music packs equipped. "
},
{
"trigger": "snd_musicvolume",
"contents": "snd_musicvolume \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Music volume0 Max: 1"
},
{
"trigger": "snd_mute_losefocus",
"contents": "snd_mute_losefocus \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "snd_mute_mvp_music_live_players",
"contents": "snd_mute_mvp_music_live_players \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. If set, MVP music is muted if players from both teams are still alive. "
},
{
"trigger": "snd_mvp_volume",
"contents": "snd_mvp_volume \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.16. Volume of MVP Music0 Max: 1"
},
{
"trigger": "snd_new_visualize",
"contents": "snd_new_visualize \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Displays soundevent name played at it's 3d position "
},
{
"trigger": "snd_occlusion_bounces",
"contents": "snd_occlusion_bounces \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "snd_occlusion_debug",
"contents": "snd_occlusion_debug \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "snd_occlusion_debug_listener_pos",
"contents": "snd_occlusion_debug_listener_pos \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "snd_occlusion_indirect_max",
"contents": "snd_occlusion_indirect_max \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.7"
},
{
"trigger": "snd_occlusion_indirect_min",
"contents": "snd_occlusion_indirect_min \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.01"
},
{
"trigger": "snd_occlusion_indirect_radius",
"contents": "snd_occlusion_indirect_radius \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 120"
},
{
"trigger": "snd_occlusion_min_wall_thickness",
"contents": "snd_occlusion_min_wall_thickness \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 4"
},
{
"trigger": "snd_occlusion_override",
"contents": "snd_occlusion_override \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "snd_occlusion_rays",
"contents": "snd_occlusion_rays \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 4"
},
{
"trigger": "snd_occlusion_report",
"contents": "snd_occlusion_report \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "snd_occlusion_visualize",
"contents": "snd_occlusion_visualize \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "snd_op_test_convar",
"contents": "snd_op_test_convar \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 720"
},
{
"trigger": "snd_opvar_set_point_debug",
"contents": "snd_opvar_set_point_debug \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "snd_opvar_set_point_update_interval",
"contents": "snd_opvar_set_point_update_interval \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.2"
},
{
"trigger": "snd_rear_stereo_scale",
"contents": "snd_rear_stereo_scale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "snd_refdb",
"contents": "snd_refdb \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 60. Reference dB at snd_refdist "
},
{
"trigger": "snd_refdist",
"contents": "snd_refdist \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 36. Reference distance for snd_refdb "
},
{
"trigger": "snd_report_verbose_error",
"contents": "snd_report_verbose_error \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. If set to 1, report more error found when playing sounds. "
},
{
"trigger": "snd_roundaction_volume",
"contents": "snd_roundaction_volume \"${1:value}\"",
"kind": "snippet",
"details": "Volume of Move Action Music0 Max: 1"
},
{
"trigger": "snd_roundend_volume",
"contents": "snd_roundend_volume \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.16. Volume of Won/Lost Music0 Max: 1"
},
{
"trigger": "snd_roundstart_volume",
"contents": "snd_roundstart_volume \"${1:value}\"",
"kind": "snippet",
"details": "Volume of Round Start Music0 Max: 1"
},
{
"trigger": "snd_sequencer_show_bpm",
"contents": "snd_sequencer_show_bpm \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "snd_sequencer_show_events",
"contents": "snd_sequencer_show_events \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "snd_sequencer_show_quantize_queue",
"contents": "snd_sequencer_show_quantize_queue \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "snd_showclassname",
"contents": "snd_showclassname \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "snd_showstart",
"contents": "snd_showstart \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "snd_sos_block_global_stack",
"contents": "snd_sos_block_global_stack \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "snd_sos_block_stop_global_stack",
"contents": "snd_sos_block_stop_global_stack \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "snd_sos_calc_angle_debug",
"contents": "snd_sos_calc_angle_debug \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "snd_sos_debug_trigger_opvar",
"contents": "snd_sos_debug_trigger_opvar \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "snd_sos_default_update_stack",
"contents": "snd_sos_default_update_stack \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "snd_sos_hide_simple_parameter_overwrite_warnings",
"contents": "snd_sos_hide_simple_parameter_overwrite_warnings \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "snd_sos_ingame_debug",
"contents": "snd_sos_ingame_debug \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "snd_sos_limit_self",
"contents": "snd_sos_limit_self \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "snd_sos_list_operator_updates",
"contents": "snd_sos_list_operator_updates \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "snd_sos_max_event_base_depth",
"contents": "snd_sos_max_event_base_depth \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 4"
},
{
"trigger": "snd_sos_opvar_debug",
"contents": "snd_sos_opvar_debug \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "snd_sos_pause_system",
"contents": "snd_sos_pause_system \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "snd_sos_print_field_references",
"contents": "snd_sos_print_field_references \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "snd_sos_print_full_field_info",
"contents": "snd_sos_print_full_field_info \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "snd_sos_report_entity_deleted",
"contents": "snd_sos_report_entity_deleted \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "snd_sos_show_block_debug",
"contents": "snd_sos_show_block_debug \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Spew data about the list of block entries. "
},
{
"trigger": "snd_sos_show_entry_match_free",
"contents": "snd_sos_show_entry_match_free \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "snd_sos_show_mixgroup_path_errors",
"contents": "snd_sos_show_mixgroup_path_errors \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "snd_sos_show_operator_event_and_stack",
"contents": "snd_sos_show_operator_event_and_stack \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "snd_sos_show_operator_event_filter",
"contents": "snd_sos_show_operator_event_filter \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "snd_sos_show_operator_field_filter",
"contents": "snd_sos_show_operator_field_filter \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "snd_sos_show_operator_init",
"contents": "snd_sos_show_operator_init \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "snd_sos_show_operator_not_executing",
"contents": "snd_sos_show_operator_not_executing \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "snd_sos_show_operator_operator_filter",
"contents": "snd_sos_show_operator_operator_filter \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "snd_sos_show_operator_pause_entry",
"contents": "snd_sos_show_operator_pause_entry \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "snd_sos_show_operator_shutdown",
"contents": "snd_sos_show_operator_shutdown \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "snd_sos_show_operator_stop_entry",
"contents": "snd_sos_show_operator_stop_entry \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "snd_sos_show_operator_updates",
"contents": "snd_sos_show_operator_updates \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "snd_sos_show_opvar_updates",
"contents": "snd_sos_show_opvar_updates \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "snd_sos_show_opvar_updates_filter",
"contents": "snd_sos_show_opvar_updates_filter \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "snd_sos_show_parameter_overwrite_warnings",
"contents": "snd_sos_show_parameter_overwrite_warnings \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "snd_sos_show_queuetotrack",
"contents": "snd_sos_show_queuetotrack \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "snd_sos_show_soundevent_overwrites",
"contents": "snd_sos_show_soundevent_overwrites \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "snd_sos_show_soundevent_param_overwrite",
"contents": "snd_sos_show_soundevent_param_overwrite \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "snd_sos_show_soundevent_start",
"contents": "snd_sos_show_soundevent_start \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "snd_sos_show_track_list",
"contents": "snd_sos_show_track_list \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "snd_sos_show_voice_elapsed_time",
"contents": "snd_sos_show_voice_elapsed_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "snd_sos_soundevent_deferred_interval_time",
"contents": "snd_sos_soundevent_deferred_interval_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.1"
},
{
"trigger": "snd_sos_soundevent_filter",
"contents": "snd_sos_soundevent_filter \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "snd_sos_soundevent_max_deferred_time",
"contents": "snd_sos_soundevent_max_deferred_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 5"
},
{
"trigger": "snd_sos_use_case_sensitive_soundevents",
"contents": "snd_sos_use_case_sensitive_soundevents \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "snd_sound_areas_debug",
"contents": "snd_sound_areas_debug \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "snd_sound_areas_debug_interval",
"contents": "snd_sound_areas_debug_interval \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.2"
},
{
"trigger": "snd_soundmixer",
"contents": "snd_soundmixer \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "snd_soundmixer_version",
"contents": "snd_soundmixer_version \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2"
},
{
"trigger": "snd_spatialize_lerp",
"contents": "snd_spatialize_lerp \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "snd_steamaudio_active_hrtf",
"contents": "snd_steamaudio_active_hrtf \"${1:value}\"",
"kind": "snippet",
"details": "Index of active HRTF. "
},
{
"trigger": "snd_steamaudio_default_hrtf_volume_gain",
"contents": "snd_steamaudio_default_hrtf_volume_gain \"${1:value}\"",
"kind": "snippet",
"details": "Adjust overall volume of the default HRTF by the specified gain (dB). "
},
{
"trigger": "snd_steamaudio_dynamicpathing_max_samples",
"contents": "snd_steamaudio_dynamicpathing_max_samples \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 16"
},
{
"trigger": "snd_steamaudio_enable_custom_hrtf",
"contents": "snd_steamaudio_enable_custom_hrtf \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Enable custom HRTF loading. "
},
{
"trigger": "snd_steamaudio_enable_pathing",
"contents": "snd_steamaudio_enable_pathing \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. This variable is checked by soundstack to globally enabling pathing for audio processing. "
},
{
"trigger": "snd_steamaudio_enable_perspective_correction",
"contents": "snd_steamaudio_enable_perspective_correction \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Enable perspective correction for 3D audio. "
},
{
"trigger": "snd_steamaudio_enable_probeneighborhood_caching",
"contents": "snd_steamaudio_enable_probeneighborhood_caching \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Enable caching listener probe neighborhood for pathing. "
},
{
"trigger": "snd_steamaudio_enable_reverb",
"contents": "snd_steamaudio_enable_reverb \"${1:value}\"",
"kind": "snippet",
"details": "Enable Steam Audio Reverb processor. "
},
{
"trigger": "snd_steamaudio_hybrid_reverb_overlap",
"contents": "snd_steamaudio_hybrid_reverb_overlap \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.25. Set the overlap fraction (0 to 1) for hybrid reverb. "
},
{
"trigger": "snd_steamaudio_hybrid_reverb_transition_time",
"contents": "snd_steamaudio_hybrid_reverb_transition_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Set the transition time (in seconds) between convolution and parametric reverb. "
},
{
"trigger": "snd_steamaudio_invalid_path_length",
"contents": "snd_steamaudio_invalid_path_length \"${1:value}\"",
"kind": "snippet",
"details": "Path length of invalid path in inches. Set this to .0 to use direct distance as path length. "
},
{
"trigger": "snd_steamaudio_ir_duration",
"contents": "snd_steamaudio_ir_duration \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2. The time delay between a sound being emitted and the last audible reflection in Steam Audio. "
},
{
"trigger": "snd_steamaudio_load_pathing_data",
"contents": "snd_steamaudio_load_pathing_data \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. If set, baked pathing data is loaded. Steam Audio Hammer entities can successfully use pathing in this case. "
},
{
"trigger": "snd_steamaudio_load_reverb_data",
"contents": "snd_steamaudio_load_reverb_data \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. If set, baked reverb data is loaded. Reset it to zero during an format changes of baked data until all data is updated. "
},
{
"trigger": "snd_steamaudio_max_convolution_sources",
"contents": "snd_steamaudio_max_convolution_sources \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 4. The maximum number of simultaneous sources that can be modeled by Steam Audio. "
},
{
"trigger": "snd_steamaudio_max_hrtf_normalization_gain_db",
"contents": "snd_steamaudio_max_hrtf_normalization_gain_db \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 6. Maximum gain any HRTF could have during volume normalization. "
},
{
"trigger": "snd_steamaudio_max_occlusion_samples",
"contents": "snd_steamaudio_max_occlusion_samples \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 64. The maximum number of rays that can be traced for volumetric occlusion by Steam Audio. "
},
{
"trigger": "snd_steamaudio_normalize_default_hrtf_volume",
"contents": "snd_steamaudio_normalize_default_hrtf_volume \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Normalize volume of default HRTF dataset across all directions. "
},
{
"trigger": "snd_steamaudio_num_bounces",
"contents": "snd_steamaudio_num_bounces \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 128. The maximum number of times any ray can bounce when using Steam Audio. "
},
{
"trigger": "snd_steamaudio_num_diffuse_samples",
"contents": "snd_steamaudio_num_diffuse_samples \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2048. The number of directions considered for ray bounce by Steam Audio. "
},
{
"trigger": "snd_steamaudio_num_rays",
"contents": "snd_steamaudio_num_rays \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 65536. The number of rays to trace for reflection modeling by Steam Audio. "
},
{
"trigger": "snd_steamaudio_num_threads",
"contents": "snd_steamaudio_num_threads \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2. Sets the number of threads used for realtime reflection by Steam Audio. "
},
{
"trigger": "snd_steamaudio_pathing_caching_threshold",
"contents": "snd_steamaudio_pathing_caching_threshold \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 5"
},
{
"trigger": "snd_steamaudio_pathing_enable_caching",
"contents": "snd_steamaudio_pathing_enable_caching \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "snd_steamaudio_pathing_order",
"contents": "snd_steamaudio_pathing_order \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. The amount of directional detail in the simulated by Steam Audio. "
},
{
"trigger": "snd_steamaudio_pathing_order_rendering",
"contents": "snd_steamaudio_pathing_order_rendering \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. The amount of directional detail in the rendered audio by Steam Audio. "
},
{
"trigger": "snd_steamaudio_perspective_correction_factor",
"contents": "snd_steamaudio_perspective_correction_factor \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Perspective correction factor, ratio of screen size and view depth from screen, for 3D audio. "
},
{
"trigger": "snd_steamaudio_perspective_correction_front_only",
"contents": "snd_steamaudio_perspective_correction_front_only \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Use perspective correction for 3D audio only in the frontal directions. "
},
{
"trigger": "snd_steamaudio_reverb_level_db",
"contents": "snd_steamaudio_reverb_level_db \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -3. Adjust overall volume (dB) of the output from Steam Audio Reverb processor. "
},
{
"trigger": "snd_steamaudio_reverb_order",
"contents": "snd_steamaudio_reverb_order \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Ambisonics order to use for simulating reverb. "
},
{
"trigger": "snd_steamaudio_reverb_order_rendering",
"contents": "snd_steamaudio_reverb_order_rendering \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Ambisonics order to use for convolution reverb. 0th order = 1 channel, 1st order = 4 channels. "
},
{
"trigger": "snd_steamaudio_reverb_update_rate",
"contents": "snd_steamaudio_reverb_update_rate \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 30. Set the maximum update rate (in Hz) for reverb. "
},
{
"trigger": "snd_steamaudio_source_pathing_debug",
"contents": "snd_steamaudio_source_pathing_debug \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Enable path visualization for steam_audio_source operator. "
},
{
"trigger": "snd_steamaudio_source_pathing_debug_duration",
"contents": "snd_steamaudio_source_pathing_debug_duration \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.01. Duration for which path remains visible. Should be close to update rate of the sound operator stack. "
},
{
"trigger": "snd_steamaudio_source_pathing_enable_validation",
"contents": "snd_steamaudio_source_pathing_enable_validation \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Enable real-time pathing validation against dynamic geometry. "
},
{
"trigger": "snd_tensecondwarning_volume",
"contents": "snd_tensecondwarning_volume \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.04. Volume of Ten Second Warnings0 Max: 1"
},
{
"trigger": "snd_toolvolume",
"contents": "snd_toolvolume \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Volume of sounds in tools (e.g. Hammer, SFM)0 Max: 1"
},
{
"trigger": "snd_ui_spatialization_spread",
"contents": "snd_ui_spatialization_spread \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "snd_use_baked_occlusion",
"contents": "snd_use_baked_occlusion \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "snd_vmix_override_mix_decay_time",
"contents": "snd_vmix_override_mix_decay_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. If set > 0, overrides how long the decay time is on all mix graphs (in seconds). "
},
{
"trigger": "snd_vmix_show_input_updates",
"contents": "snd_vmix_show_input_updates \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. If set to 1, show all incoming updates to vmix inputs. "
},
{
"trigger": "snd_voipvolume",
"contents": "snd_voipvolume \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Voice volume0 Max: 2"
},
{
"trigger": "sos_debug_emit",
"contents": "sos_debug_emit \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sound_device_override",
"contents": "sound_device_override \"${1:value}\"",
"kind": "snippet",
"details": "ID of the sound device to use "
},
{
"trigger": "soundevent_check_networked_entity",
"contents": "soundevent_check_networked_entity \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "soundpatch_captionlength",
"contents": "soundpatch_captionlength \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2. How long looping soundpatch captions should display for. "
},
{
"trigger": "soundscape_debug",
"contents": "soundscape_debug \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. When on, draws lines to all env_soundscape entities. Green lines show the active soundscape, red lines show soundscapes that aren't in range, and white lines show soundscapes that are in range, but not the active soundscape. "
},
{
"trigger": "soundscape_fadetime",
"contents": "soundscape_fadetime \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3. Time to crossfade sound effects between soundscapes "
},
{
"trigger": "soundscape_message",
"contents": "soundscape_message \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "soundscape_radius_debug",
"contents": "soundscape_radius_debug \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Prints current volume of radius sounds "
},
{
"trigger": "soundscape_update_include_bots",
"contents": "soundscape_update_include_bots \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Enable to calculate soundscape audio params for bots. "
},
{
"trigger": "soundsystem_device_used",
"contents": "soundsystem_device_used \"${1:value}\"",
"kind": "snippet",
"details": "Sound device in use (changing this does not change the soundsystem). "
},
{
"trigger": "soundsystem_update_async",
"contents": "soundsystem_update_async \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "spawngroup_ignore_timeouts",
"contents": "spawngroup_ignore_timeouts \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "speaker_config",
"contents": "speaker_config \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. Min: -1 Max: -1"
},
{
"trigger": "spec_autodirector",
"contents": "spec_autodirector \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Auto-director chooses best view modes while spectating "
},
{
"trigger": "spec_centerchasecam",
"contents": "spec_centerchasecam \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Looks at the target player's center, instead of his eye position, in chase came mode "
},
{
"trigger": "spec_chasedistance",
"contents": "spec_chasedistance \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 96. Chase cam's ideal distance from targetMin: 16 Max: 296"
},
{
"trigger": "spec_chasedistancespeed",
"contents": "spec_chasedistancespeed \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 144. Chase cam's ideal distance from targetMin: 48 "
},
{
"trigger": "spec_death_panel_replay_position",
"contents": "spec_death_panel_replay_position \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.75"
},
{
"trigger": "spec_freeze_deathanim_time",
"contents": "spec_freeze_deathanim_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.8. The time that the death cam will spend watching the player's ragdoll before going into the freeze death cam. "
},
{
"trigger": "spec_freeze_time",
"contents": "spec_freeze_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3. Time spend frozen in observer freeze cam. "
},
{
"trigger": "spec_freeze_time_lock",
"contents": "spec_freeze_time_lock \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Time players are prevented from skipping the freeze cam "
},
{
"trigger": "spec_freeze_traveltime",
"contents": "spec_freeze_traveltime \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.3. Time taken to zoom in to frame a target in observer freeze cam. "
},
{
"trigger": "spec_glow_decay_time",
"contents": "spec_glow_decay_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2. Time to decay glow from 1.0 to spec_glow_silent_factor after spec_glow_full_time.0 "
},
{
"trigger": "spec_glow_full_time",
"contents": "spec_glow_full_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Noisy players stay at full brightness for this long.0 "
},
{
"trigger": "spec_glow_silent_factor",
"contents": "spec_glow_silent_factor \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.4. Lurking player xray glow scaling.0 Max: 1"
},
{
"trigger": "spec_glow_spike_factor",
"contents": "spec_glow_spike_factor \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1.2. Noisy player xray glow scaling (pop when noise is made). Make >1 to add a 'spike' to noise-making playersMin: 1 Max: 3"
},
{
"trigger": "spec_glow_spike_time",
"contents": "spec_glow_spike_time \"${1:value}\"",
"kind": "snippet",
"details": "Time for noisy player glow 'spike' to show that they made noise very recently.0 "
},
{
"trigger": "spec_hide_players",
"contents": "spec_hide_players \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Toggle the visibility of scoreboard players. "
},
{
"trigger": "spec_replay_autostart",
"contents": "spec_replay_autostart \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Auto-start Killer Replay when available "
},
{
"trigger": "spec_replay_bot",
"contents": "spec_replay_bot \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Enable Spectator Hltv Replay when killed by bot "
},
{
"trigger": "spec_replay_cache_ragdolls",
"contents": "spec_replay_cache_ragdolls \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. when set to 0, ragdolls will settle dynamically before and after Killer Replay "
},
{
"trigger": "spec_replay_colorcorrection",
"contents": "spec_replay_colorcorrection \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.5. Amount of color correction in deathcam replay "
},
{
"trigger": "spec_replay_enable",
"contents": "spec_replay_enable \"${1:value}\"",
"kind": "snippet",
"details": "Enable Killer Replay, requires hltv server running (0:off, 1:default, 2:force) "
},
{
"trigger": "spec_replay_fadein",
"contents": "spec_replay_fadein \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.75. Amount of time in seconds it takes to visually fade into replay, or into real-time after replay "
},
{
"trigger": "spec_replay_fadeout",
"contents": "spec_replay_fadeout \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.75. Amount of time in seconds it takes to visually fade out of replay, or out of real-time before replay "
},
{
"trigger": "spec_replay_fullframe",
"contents": "spec_replay_fullframe \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Send full frame on every hltv replay transition "
},
{
"trigger": "spec_replay_leadup_time",
"contents": "spec_replay_leadup_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 5.3438. Replay time in seconds before the highlighted event "
},
{
"trigger": "spec_replay_message_time",
"contents": "spec_replay_message_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 9.5. How long to show the message about Killer Replay after death. The best setting is a bit shorter than spec_replay_autostart_delay + spec_replay_leadup_time + spec_replay_winddown_time "
},
{
"trigger": "spec_replay_on_death",
"contents": "spec_replay_on_death \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. When > 0, sets the mode whereas players see delayed replay, and are segregated into a domain of chat and voice separate from the alive players "
},
{
"trigger": "spec_replay_others_experimental",
"contents": "spec_replay_others_experimental \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Replay the last death of the round, if possible. Disabled on official servers by default. Experimental. "
},
{
"trigger": "spec_replay_outline",
"contents": "spec_replay_outline \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Enable outline selecting victim in hltv replay: 0 - none; 1 - ouline YOU; 2 - outline YOU, with red ragdoll outline; 3 - normal spectator outlines "
},
{
"trigger": "spec_replay_rate_base",
"contents": "spec_replay_rate_base \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Base time scale of Killer Replay.Experimental. "
},
{
"trigger": "spec_replay_rate_limit",
"contents": "spec_replay_rate_limit \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3. Minimum allowable pause between replay requests in seconds "
},
{
"trigger": "spec_replay_rate_slowdown",
"contents": "spec_replay_rate_slowdown \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. The part of Killer Replay right before death is played at this rate "
},
{
"trigger": "spec_replay_rate_slowdown_length",
"contents": "spec_replay_rate_slowdown_length \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.5. The part of Killer Replay right before death is played at this rate "
},
{
"trigger": "spec_replay_review_sound",
"contents": "spec_replay_review_sound \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. When set to non-0, a sound effect is played during Killer Replay "
},
{
"trigger": "spec_replay_round_delay",
"contents": "spec_replay_round_delay \"${1:value}\"",
"kind": "snippet",
"details": "Round can be delayed by this much due to someone watching a replay; must be at least 3-4 seconds, otherwise the last replay will always be interrupted by round start, assuming normal pause between round_end and round_start events (7 seconds) and freezecam delay (2 seconds) and 7.4 second full replay (5.4 second pre-death and ~2 seconds post-death) and replay in/out switching (up to a second) "
},
{
"trigger": "spec_replay_sound_fadein",
"contents": "spec_replay_sound_fadein \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.05. Amount of time in seconds it takes to fade in the audio before or after replay "
},
{
"trigger": "spec_replay_sound_fadeout",
"contents": "spec_replay_sound_fadeout \"${1:value}\"",
"kind": "snippet",
"details": "Amount of time in seconds it takes to fade out the audio before or after replay "
},
{
"trigger": "spec_replay_victim_pov",
"contents": "spec_replay_victim_pov \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Killer Replay - replay from victim's point of view (1); the default is killer's (0). Experimental. "
},
{
"trigger": "spec_replay_winddown_time",
"contents": "spec_replay_winddown_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2. The trailing time, in seconds, of replay past the event, including fade-out "
},
{
"trigger": "spec_show_xray",
"contents": "spec_show_xray \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. If set to 1, you can see player outlines and name IDs through walls - who you can see depends on your team and mode "
},
{
"trigger": "spec_track",
"contents": "spec_track \"${1:value}\"",
"kind": "snippet",
"details": "Tracks an entity in spec mode "
},
{
"trigger": "spec_usenumberkeys_nobinds",
"contents": "spec_usenumberkeys_nobinds \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. If set to 1, map voting and spectator view use the raw number keys instead of the weapon binds (slot1, slot2, etc). "
},
{
"trigger": "spec_xray_dropped_defusekits",
"contents": "spec_xray_dropped_defusekits \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Whether to X-ray dropped defuse kits. "
},
{
"trigger": "spec_xray_dropped_unoccluded",
"contents": "spec_xray_dropped_unoccluded \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Whether to always X-ray dropped c4 and defuse kits. "
},
{
"trigger": "splitscreen_mode",
"contents": "splitscreen_mode \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "ss_mimic",
"contents": "ss_mimic \"${1:value}\"",
"kind": "snippet",
"details": "Split screen users mimic base player's CUserCmds "
},
{
"trigger": "ss_voice_hearpartner",
"contents": "ss_voice_hearpartner \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Route voice between splitscreen players on same system. "
},
{
"trigger": "stats_collect_gpu",
"contents": "stats_collect_gpu \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. While doing stats_display, collect GPU perf counters. Used for stats_print_gpu. "
},
{
"trigger": "stats_display",
"contents": "stats_display \"${1:value}\"",
"kind": "snippet",
"details": "Displays perf statistics information "
},
{
"trigger": "stats_highlight_interval",
"contents": "stats_highlight_interval \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 10. Interval between hightlight screens in the transition stats panel "
},
{
"trigger": "steam_controller_haptics",
"contents": "steam_controller_haptics \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "steamworks_sessionid_client",
"contents": "steamworks_sessionid_client \"${1:value}\"",
"kind": "snippet",
"details": "The client session ID for the new steamworks gamestats. "
},
{
"trigger": "steamworks_sessionid_lifetime_client",
"contents": "steamworks_sessionid_lifetime_client \"${1:value}\"",
"kind": "snippet",
"details": "The full client session ID for the new steamworks gamestats. "
},
{
"trigger": "steamworks_sessionid_server",
"contents": "steamworks_sessionid_server \"${1:value}\"",
"kind": "snippet",
"details": "The server session ID for the new steamworks gamestats. "
},
{
"trigger": "sticky_tooltips",
"contents": "sticky_tooltips \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Don't ever hide tooltips. Helpful when debugging complicated tooltip layouts. "
},
{
"trigger": "sv_accelerate",
"contents": "sv_accelerate \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 5.5"
},
{
"trigger": "sv_accelerate_debug_speed",
"contents": "sv_accelerate_debug_speed \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sv_accelerate_use_weapon_speed",
"contents": "sv_accelerate_use_weapon_speed \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "sv_air_max_horizontal_parachute_speed",
"contents": "sv_air_max_horizontal_parachute_speed \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 240"
},
{
"trigger": "sv_air_max_wishspeed",
"contents": "sv_air_max_wishspeed \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 30"
},
{
"trigger": "sv_air_pushaway_dist",
"contents": "sv_air_pushaway_dist \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "sv_airaccelerate",
"contents": "sv_airaccelerate \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 12"
},
{
"trigger": "sv_airaccelerate_parachute",
"contents": "sv_airaccelerate_parachute \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2.6"
},
{
"trigger": "sv_airaccelerate_rappel",
"contents": "sv_airaccelerate_rappel \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2.2"
},
{
"trigger": "sv_allchat",
"contents": "sv_allchat \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Players can receive all other players' text chat, no death restrictions "
},
{
"trigger": "sv_allow_votes",
"contents": "sv_allow_votes \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Allow voting? "
},
{
"trigger": "sv_alltalk",
"contents": "sv_alltalk \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Players can hear all other players' voice communication, no team restrictions "
},
{
"trigger": "sv_alternateticks",
"contents": "sv_alternateticks \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. If set, server only simulates entities on even numbered ticks. "
},
{
"trigger": "sv_always_play_damage_headshot_feedback",
"contents": "sv_always_play_damage_headshot_feedback \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. If true, we always play damage headshot feedback, even through smokes and objects. "
},
{
"trigger": "sv_anim_queue_changes",
"contents": "sv_anim_queue_changes \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sv_auto_adjust_bot_difficulty",
"contents": "sv_auto_adjust_bot_difficulty \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Adjust the difficulty of bots each round based on contribution score. "
},
{
"trigger": "sv_auto_full_alltalk_during_warmup_half_end",
"contents": "sv_auto_full_alltalk_during_warmup_half_end \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. When enabled will automatically turn on full all talk mode in warmup, at halftime and at the end of the match "
},
{
"trigger": "sv_autobunnyhopping",
"contents": "sv_autobunnyhopping \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Players automatically re-jump while holding jump button "
},
{
"trigger": "sv_autobuyammo",
"contents": "sv_autobuyammo \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Enable automatic ammo purchase when inside buy zones during buy periods "
},
{
"trigger": "sv_autoexec_mapname_cfg",
"contents": "sv_autoexec_mapname_cfg \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Execute a mapname cfg file on the server automatically in custom game modes that require it. "
},
{
"trigger": "sv_autosave",
"contents": "sv_autosave \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Set to 1 to autosave game on level transition. Does not affect autosave triggers. "
},
{
"trigger": "sv_backspeed",
"contents": "sv_backspeed \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.6. How much to slow down backwards motion "
},
{
"trigger": "sv_banid_dev_enabled",
"contents": "sv_banid_dev_enabled \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sv_banid_enabled",
"contents": "sv_banid_enabled \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Whether server supports banid command "
},
{
"trigger": "sv_bot_buy_decoy_weight",
"contents": "sv_bot_buy_decoy_weight \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Given a bot will buy a grenade, controls the odds of the grenade type. Proportional to all other sv_bot_buy_*_weight convars.0 "
},
{
"trigger": "sv_bot_buy_flash_weight",
"contents": "sv_bot_buy_flash_weight \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Given a bot will buy a grenade, controls the odds of the grenade type. Proportional to all other sv_bot_buy_*_weight convars.0 "
},
{
"trigger": "sv_bot_buy_grenade_chance",
"contents": "sv_bot_buy_grenade_chance \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 33. Chance bots will buy a grenade with leftover money (after prim, sec and armor). Input as percent (0-100.0)0 Max: 100"
},
{
"trigger": "sv_bot_buy_hegrenade_weight",
"contents": "sv_bot_buy_hegrenade_weight \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 6. Given a bot will buy a grenade, controls the odds of the grenade type. Proportional to all other sv_bot_buy_*_weight convars.0 "
},
{
"trigger": "sv_bot_buy_molotov_weight",
"contents": "sv_bot_buy_molotov_weight \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Given a bot will buy a grenade, controls the odds of the grenade type. Proportional to all other sv_bot_buy_*_weight convars.0 "
},
{
"trigger": "sv_bot_buy_smoke_weight",
"contents": "sv_bot_buy_smoke_weight \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Given a bot will buy a grenade, controls the odds of the grenade type. Proportional to all other sv_bot_buy_*_weight convars.0 "
},
{
"trigger": "sv_bot_difficulty_kbm",
"contents": "sv_bot_difficulty_kbm \"${1:value}\"",
"kind": "snippet",
"details": "Bot difficulty while playing with Keyboard/Mouse device "
},
{
"trigger": "sv_bot_parallel_threat_detection",
"contents": "sv_bot_parallel_threat_detection \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Perform bot threat detection in parallel "
},
{
"trigger": "sv_bots_get_easier_each_win",
"contents": "sv_bots_get_easier_each_win \"${1:value}\"",
"kind": "snippet",
"details": "If > 0, some # of bots will lower thier difficulty each time they win. The argument defines how many will lower their difficulty each time. "
},
{
"trigger": "sv_bots_get_harder_after_each_wave",
"contents": "sv_bots_get_harder_after_each_wave \"${1:value}\"",
"kind": "snippet",
"details": "If > 0, some # of bots will raise thier difficulty each time CTs beat a Guardian wave. The argument defines how many will raise their difficulty each time "
},
{
"trigger": "sv_bounce",
"contents": "sv_bounce \"${1:value}\"",
"kind": "snippet",
"details": "Bounce multiplier for when physically simulated objects collide with other objects. "
},
{
"trigger": "sv_buy_status_override",
"contents": "sv_buy_status_override \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. Override for buy status map info. 0 = everyone can buy, 1 = ct only, 2 = t only 3 = nobody "
},
{
"trigger": "sv_chat_proximity",
"contents": "sv_chat_proximity \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "sv_cheats",
"contents": "sv_cheats \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Allow cheats on server "
},
{
"trigger": "sv_client_predict",
"contents": "sv_client_predict \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. This can be used to force the value of cl_predict for connected clients (only while they are connected). -1 = let clients set cl_predict to anything 0 = force cl_predict to 0 1 = force cl_predict to 1 "
},
{
"trigger": "sv_clip_penetration_traces_to_players",
"contents": "sv_clip_penetration_traces_to_players \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "sv_clockcorrection_msecs",
"contents": "sv_clockcorrection_msecs \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 30. The server tries to keep each player's m_nTickBase withing this many msecs of the server absolute tickcount "
},
{
"trigger": "sv_cluster",
"contents": "sv_cluster \"${1:value}\"",
"kind": "snippet",
"details": "Data center cluster this server lives in. "
},
{
"trigger": "sv_coaching_enabled",
"contents": "sv_coaching_enabled \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Allows spectating and communicating with a team ( 'coach t' or 'coach ct' ) "
},
{
"trigger": "sv_competitive_minspec",
"contents": "sv_competitive_minspec \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Enable to force certain client convars to minimum/maximum values to help prevent competitive advantages. "
},
{
"trigger": "sv_compute_per_bot_difficulty",
"contents": "sv_compute_per_bot_difficulty \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. 0 = compute all bot difficulties equally, 1 = compute unique bot difficulty for each bot "
},
{
"trigger": "sv_cs_player_speed_has_hostage",
"contents": "sv_cs_player_speed_has_hostage \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 200"
},
{
"trigger": "sv_csgo_shoot_assert_lagcompensation_error",
"contents": "sv_csgo_shoot_assert_lagcompensation_error \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sv_csgo_shoot_force_full_interp",
"contents": "sv_csgo_shoot_force_full_interp \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sv_csgo_shoot_force_use_target_time",
"contents": "sv_csgo_shoot_force_use_target_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sv_csgo_shoot_lagcompensation_max_error",
"contents": "sv_csgo_shoot_lagcompensation_max_error \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Warn if lag compensated head hitbox position doesn't match that on client. "
},
{
"trigger": "sv_csgo_shoot_log",
"contents": "sv_csgo_shoot_log \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sv_csgo_shoot_log_attack_cmds_only",
"contents": "sv_csgo_shoot_log_attack_cmds_only \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "sv_csgo_shoot_use_full_interp",
"contents": "sv_csgo_shoot_use_full_interp \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "sv_csgo_shoot_verify",
"contents": "sv_csgo_shoot_verify \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sv_csgo_shoot_verify_on_attack_only",
"contents": "sv_csgo_shoot_verify_on_attack_only \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Only run lag compensation error check when primary attack goes down. "
},
{
"trigger": "sv_damage_print_enable",
"contents": "sv_damage_print_enable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. 0: no damage print in console. 1: damage print in console on death. 2: damage print in console only at next round restart. "
},
{
"trigger": "sv_deadtalk",
"contents": "sv_deadtalk \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Dead players can speak (voice, text) to the living "
},
{
"trigger": "sv_debug_overlays_bandwidth",
"contents": "sv_debug_overlays_bandwidth \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 65536. Broadcast server debug overlays traffic "
},
{
"trigger": "sv_debug_overlays_broadcast",
"contents": "sv_debug_overlays_broadcast \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Broadcast server debug overlays "
},
{
"trigger": "sv_debug_player_use",
"contents": "sv_debug_player_use \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Visualizes +use logic. Green cross=trace success, Red cross=trace too far, Green box=radius success "
},
{
"trigger": "sv_debugroundstats",
"contents": "sv_debugroundstats \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sv_dev_damage_use_netvars",
"contents": "sv_dev_damage_use_netvars \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Whether we should use network vars (true) or legacy messages (false). "
},
{
"trigger": "sv_disable_immunity_alpha",
"contents": "sv_disable_immunity_alpha \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. If set, clients won't slam the player model render settings each frame for immunity [mod authors use this] "
},
{
"trigger": "sv_disable_observer_interpolation",
"contents": "sv_disable_observer_interpolation \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Disallow interpolating between observer targets on this server. "
},
{
"trigger": "sv_disable_querycache",
"contents": "sv_disable_querycache \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. debug - disable trace query cache "
},
{
"trigger": "sv_disable_radar",
"contents": "sv_disable_radar \"${1:value}\"",
"kind": "snippet",
"details": "0: regular radar; 1: always disabled; 2: disabled in warmup "
},
{
"trigger": "sv_disable_reliable_delta_retransmit",
"contents": "sv_disable_reliable_delta_retransmit \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Assume that a reliable entity delta will be ack'ed and send future deltas relative to the last reliable delta. "
},
{
"trigger": "sv_disable_teamselect_menu",
"contents": "sv_disable_teamselect_menu \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Disable teamselect menu on clients "
},
{
"trigger": "sv_disconnected_player_data_hold_time",
"contents": "sv_disconnected_player_data_hold_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 60. Duration, in seconds, to hold onto the data of disconnected players, for scoreboard display. "
},
{
"trigger": "sv_distance_guaranteed_damage_feedback",
"contents": "sv_distance_guaranteed_damage_feedback \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1070. Attacks made within this radius are guaranteed to generate damage feedback sounds. "
},
{
"trigger": "sv_dm_gamemoderules_controls_rounds",
"contents": "sv_dm_gamemoderules_controls_rounds \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "sv_dz_cash_bundle_size",
"contents": "sv_dz_cash_bundle_size \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 50. Size of a cash bundle "
},
{
"trigger": "sv_dz_cash_mega_bundle_size",
"contents": "sv_dz_cash_mega_bundle_size \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 13. Size of a mega cash bundle "
},
{
"trigger": "sv_dz_contractkill_reward",
"contents": "sv_dz_contractkill_reward \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 10. Cash bundles to award for a successful contract kill "
},
{
"trigger": "sv_dz_hostage_rescue_reward",
"contents": "sv_dz_hostage_rescue_reward \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 18. Number of cash bundles to award for rescuing a hostage "
},
{
"trigger": "sv_dz_show_enemy_name_scope_range",
"contents": "sv_dz_show_enemy_name_scope_range \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "sv_dz_squad_wipe_reward",
"contents": "sv_dz_squad_wipe_reward \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2. Number of cash bundles to award for eliminating a squad "
},
{
"trigger": "sv_enable_alternate_baselines",
"contents": "sv_enable_alternate_baselines \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Allow alternate baseline system, set to 2 for debugging spew. "
},
{
"trigger": "sv_enable_delta_packing",
"contents": "sv_enable_delta_packing \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. When enabled, this allows for entity packing to use the property changes for building up the data. This is many times faster, but can be disabled for error checking. "
},
{
"trigger": "sv_enablebunnyhopping",
"contents": "sv_enablebunnyhopping \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Allow player speed to exceed maximum running speed "
},
{
"trigger": "sv_endmatch_item_drop_interval",
"contents": "sv_endmatch_item_drop_interval \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. The time between drops on the end match scoreboard "
},
{
"trigger": "sv_endmatch_item_drop_interval_ancient",
"contents": "sv_endmatch_item_drop_interval_ancient \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3.5. The time between drops on the end match scoreboard for ancient items "
},
{
"trigger": "sv_endmatch_item_drop_interval_legendary",
"contents": "sv_endmatch_item_drop_interval_legendary \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2. The time between drops on the end match scoreboard for legendary items "
},
{
"trigger": "sv_endmatch_item_drop_interval_mythical",
"contents": "sv_endmatch_item_drop_interval_mythical \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1.25. The time between drops on the end match scoreboard for mythical items "
},
{
"trigger": "sv_endmatch_item_drop_interval_rare",
"contents": "sv_endmatch_item_drop_interval_rare \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. The time between drops on the end match scoreboard for rare items "
},
{
"trigger": "sv_ent_showonlyhitbox",
"contents": "sv_ent_showonlyhitbox \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "sv_ents_write_alarm",
"contents": "sv_ents_write_alarm \"${1:value}\"",
"kind": "snippet",
"details": "Print callstack every time CNetworkGameServerBase::WriteEntityUpdate takes more than this amount of milliseconds "
},
{
"trigger": "sv_extra_client_connect_time",
"contents": "sv_extra_client_connect_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 15. Seconds after client connect during which extra frames are buffered to prevent non-delta'd update "
},
{
"trigger": "sv_extract_ammo_from_dropped_weapons",
"contents": "sv_extract_ammo_from_dropped_weapons \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sv_extreme_strafe_accuracy_fishtail",
"contents": "sv_extreme_strafe_accuracy_fishtail \"${1:value}\"",
"kind": "snippet",
"details": "Number of degrees of aim 'fishtail' when making an extreme strafe direction changeMin: -5 Max: 5"
},
{
"trigger": "sv_fade_player_visibility_farz",
"contents": "sv_fade_player_visibility_farz \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sv_fake_dropped_ucmd_interval",
"contents": "sv_fake_dropped_ucmd_interval \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "sv_falldamage_scale",
"contents": "sv_falldamage_scale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "sv_falldamage_to_below_player_multiplier",
"contents": "sv_falldamage_to_below_player_multiplier \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Scale damage when distributed across two players "
},
{
"trigger": "sv_falldamage_to_below_player_ratio",
"contents": "sv_falldamage_to_below_player_ratio \"${1:value}\"",
"kind": "snippet",
"details": "Landing on a another player's head gives them this ratio of the damage. "
},
{
"trigger": "sv_filterban",
"contents": "sv_filterban \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Set packet filtering by IP mode "
},
{
"trigger": "sv_fistpunch_damage",
"contents": "sv_fistpunch_damage \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 10"
},
{
"trigger": "sv_fistpunch_damage_hard",
"contents": "sv_fistpunch_damage_hard \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 20"
},
{
"trigger": "sv_fistpunch_damage_to_player_multiplier",
"contents": "sv_fistpunch_damage_to_player_multiplier \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1.5"
},
{
"trigger": "sv_fistpunch_impact_sounds",
"contents": "sv_fistpunch_impact_sounds \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "sv_fistpunch_viewmove",
"contents": "sv_fistpunch_viewmove \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 40"
},
{
"trigger": "sv_flashbang_strength",
"contents": "sv_flashbang_strength \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3. Flashbang strengthMin: 2 Max: 8"
},
{
"trigger": "sv_footsteps",
"contents": "sv_footsteps \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Play footstep sound for players "
},
{
"trigger": "sv_force_team_intro_random",
"contents": "sv_force_team_intro_random \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "sv_force_team_intro_variant",
"contents": "sv_force_team_intro_variant \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "sv_force_transmit_ents",
"contents": "sv_force_transmit_ents \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Will transmit all entities to client, regardless of PVS conditions (will still skip based on transmit flags, however). "
},
{
"trigger": "sv_fps_max",
"contents": "sv_fps_max \"${1:value}\"",
"kind": "snippet",
"details": "Dedicated server frame rate limiter. 0=tick rate. Only applies to the dedicated server. "
},
{
"trigger": "sv_friction",
"contents": "sv_friction \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 5.2. World friction. "
},
{
"trigger": "sv_full_alltalk",
"contents": "sv_full_alltalk \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Any player (including Spectator team) can speak to any other player "
},
{
"trigger": "sv_game_mode_flags",
"contents": "sv_game_mode_flags \"${1:value}\"",
"kind": "snippet",
"details": "Dedicated server game mode flags to run "
},
{
"trigger": "sv_gameinstructor_disable",
"contents": "sv_gameinstructor_disable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Force all clients to disable their game instructors. "
},
{
"trigger": "sv_gameinstructor_enable",
"contents": "sv_gameinstructor_enable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Force all clients to enable their game instructors. "
},
{
"trigger": "sv_gravity",
"contents": "sv_gravity \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 800. World gravity. "
},
{
"trigger": "sv_grenade_trajectory_prac_pipreview",
"contents": "sv_grenade_trajectory_prac_pipreview \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Shows grenade trajectory practice picture-in-picture preview. "
},
{
"trigger": "sv_grenade_trajectory_prac_trailtime",
"contents": "sv_grenade_trajectory_prac_trailtime \"${1:value}\"",
"kind": "snippet",
"details": "Shows grenade trajectory practice visualization for this number of seconds.0 Max: 8"
},
{
"trigger": "sv_grenade_trajectory_time_spectator",
"contents": "sv_grenade_trajectory_time_spectator \"${1:value}\"",
"kind": "snippet",
"details": "Length of time grenade trajectory remains visible as a spectator.0 Max: 8"
},
{
"trigger": "sv_guardian_extra_equipment_ct",
"contents": "sv_guardian_extra_equipment_ct \"${1:value}\"",
"kind": "snippet",
"details": "Extra starting equipment for CT players in guardian modes "
},
{
"trigger": "sv_guardian_extra_equipment_t",
"contents": "sv_guardian_extra_equipment_t \"${1:value}\"",
"kind": "snippet",
"details": "Extra starting equipment for Terrorist players in guardian modes "
},
{
"trigger": "sv_guardian_health_refresh_per_wave",
"contents": "sv_guardian_health_refresh_per_wave \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 50. Health given to survivors per wave in guardian mode. "
},
{
"trigger": "sv_guardian_heavy_all",
"contents": "sv_guardian_heavy_all \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sv_guardian_heavy_count",
"contents": "sv_guardian_heavy_count \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "sv_guardian_max_wave_for_heavy",
"contents": "sv_guardian_max_wave_for_heavy \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "sv_guardian_min_wave_for_heavy",
"contents": "sv_guardian_min_wave_for_heavy \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "sv_guardian_refresh_ammo_for_items_on_waves",
"contents": "sv_guardian_refresh_ammo_for_items_on_waves \"${1:value}\"",
"kind": "snippet",
"details": "List of additional weapons to refill ammo on waves. "
},
{
"trigger": "sv_guardian_reset_c4_every_wave",
"contents": "sv_guardian_reset_c4_every_wave \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sv_guardian_respawn_health",
"contents": "sv_guardian_respawn_health \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 50. Starting health of guardian players when respawned.Min: 1 "
},
{
"trigger": "sv_guardian_spawn_health_ct",
"contents": "sv_guardian_spawn_health_ct \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 100. Starting health in guardian modes. "
},
{
"trigger": "sv_guardian_spawn_health_t",
"contents": "sv_guardian_spawn_health_t \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 100. Starting health in guardian modes. "
},
{
"trigger": "sv_guardian_starting_equipment_humans",
"contents": "sv_guardian_starting_equipment_humans \"${1:value}\"",
"kind": "snippet",
"details": "Extra starting equipment for human players in guardian modes "
},
{
"trigger": "sv_health_approach_enabled",
"contents": "sv_health_approach_enabled \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "sv_health_approach_speed",
"contents": "sv_health_approach_speed \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 10"
},
{
"trigger": "sv_hegrenade_damage_multiplier",
"contents": "sv_hegrenade_damage_multiplier \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "sv_hegrenade_radius_multiplier",
"contents": "sv_hegrenade_radius_multiplier \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "sv_hibernate_postgame_delay",
"contents": "sv_hibernate_postgame_delay \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 5. # of seconds to wait after final client leaves before hibernating. "
},
{
"trigger": "sv_hibernate_when_empty",
"contents": "sv_hibernate_when_empty \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Puts the server into extremely low CPU usage mode when no clients connected "
},
{
"trigger": "sv_hide_roundtime_until_seconds",
"contents": "sv_hide_roundtime_until_seconds \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "sv_highlight_distance",
"contents": "sv_highlight_distance \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 500"
},
{
"trigger": "sv_highlight_duration",
"contents": "sv_highlight_duration \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3.5"
},
{
"trigger": "sv_hitbox_debug",
"contents": "sv_hitbox_debug \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sv_holiday_mode",
"contents": "sv_holiday_mode \"${1:value}\"",
"kind": "snippet",
"details": "0 = OFF, 1 = Halloween, 2 = Winter "
},
{
"trigger": "sv_hosting_lobby",
"contents": "sv_hosting_lobby \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sv_human_autojoin_team",
"contents": "sv_human_autojoin_team \"${1:value}\"",
"kind": "snippet",
"details": "Force human players on to a team. 0 to disable. "
},
{
"trigger": "sv_ignoregrenaderadio",
"contents": "sv_ignoregrenaderadio \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Turn off Fire in the hole messages "
},
{
"trigger": "sv_infinite_ammo",
"contents": "sv_infinite_ammo \"${1:value}\"",
"kind": "snippet",
"details": "Player's active weapon will never run out of ammo "
},
{
"trigger": "sv_instancebaselines",
"contents": "sv_instancebaselines \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Enable instanced baselines. Saves network overhead. "
},
{
"trigger": "sv_invites_only_mainmenu",
"contents": "sv_invites_only_mainmenu \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. If turned on, will ignore all invites when user is playing a match "
},
{
"trigger": "sv_jump_impulse",
"contents": "sv_jump_impulse \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 301.9933. Initial upward velocity for player jumps; sqrt(2*gravity*height).0 "
},
{
"trigger": "sv_jump_spam_penalty_time",
"contents": "sv_jump_spam_penalty_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.0156. For subtick jumps, if this much time has elapsed since the last time the user has pressed the jump key, pretend they hadn't. Lowering this makes bunnyhopping easier. "
},
{
"trigger": "sv_kick_ban_duration",
"contents": "sv_kick_ban_duration \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 15. How long should a kick ban from the server should last (in minutes) "
},
{
"trigger": "sv_kick_players_with_cooldown",
"contents": "sv_kick_players_with_cooldown \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. (0: do not kick on insecure servers; 1: kick players with Untrusted status or convicted by Overwatch; 2: kick players with any cooldown) "
},
{
"trigger": "sv_knife_attack_extend_from_player_aabb",
"contents": "sv_knife_attack_extend_from_player_aabb \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "sv_ladder_angle",
"contents": "sv_ladder_angle \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -0.707. Cos of angle of incidence to ladder perpendicular for applying ladder_dampenMin: -1 Max: 1"
},
{
"trigger": "sv_ladder_dampen",
"contents": "sv_ladder_dampen \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.2. Amount to dampen perpendicular movement on a ladder0 Max: 1"
},
{
"trigger": "sv_ladder_scale_speed",
"contents": "sv_ladder_scale_speed \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.7799. Scale top speed on ladders0 Max: 1"
},
{
"trigger": "sv_ladder_slack_z_mult",
"contents": "sv_ladder_slack_z_mult \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.026. Difference in Z increases toward the middle of the slack ladder. "
},
{
"trigger": "sv_lagcompensationforcerestore",
"contents": "sv_lagcompensationforcerestore \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Don't test validity of a lag comp restore, just do it. "
},
{
"trigger": "sv_lan",
"contents": "sv_lan \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Server is a lan server ( no heartbeat, no authentication, no non-class C addresses ) "
},
{
"trigger": "sv_lightquery_debug",
"contents": "sv_lightquery_debug \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sv_log_change_offsets",
"contents": "sv_log_change_offsets \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Log change offsets to game/varchangeinfoN.log files. "
},
{
"trigger": "sv_log_onefile",
"contents": "sv_log_onefile \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Log server information to only one file. "
},
{
"trigger": "sv_logbans",
"contents": "sv_logbans \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Log server bans in the server logs. "
},
{
"trigger": "sv_logblocks",
"contents": "sv_logblocks \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. If true when log when a query is blocked (can cause very large log files) "
},
{
"trigger": "sv_logecho",
"contents": "sv_logecho \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Echo log information to the console. "
},
{
"trigger": "sv_logfile",
"contents": "sv_logfile \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Log server information in the log file. "
},
{
"trigger": "sv_logflush",
"contents": "sv_logflush \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Flush the log file to disk on each write (slow). "
},
{
"trigger": "sv_logsdir",
"contents": "sv_logsdir \"${1:value}\"",
"kind": "snippet",
"details": "Folder in the game directory where server logs will be stored. "
},
{
"trigger": "sv_mapvetopickvote_maps",
"contents": "sv_mapvetopickvote_maps \"${1:value}\"",
"kind": "snippet",
"details": "Which maps are used for map veto pick sequence "
},
{
"trigger": "sv_mapvetopickvote_phase_duration",
"contents": "sv_mapvetopickvote_phase_duration \"${1:value}\"",
"kind": "snippet",
"details": "How many seconds each phase lasts "
},
{
"trigger": "sv_mapvetopickvote_rnd",
"contents": "sv_mapvetopickvote_rnd \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. When enabled will shuffle veto pick maps list order every time "
},
{
"trigger": "sv_massreport",
"contents": "sv_massreport \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sv_matchend_drops_enabled",
"contents": "sv_matchend_drops_enabled \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Rewards gameplay time is always accumulated for players, but drops at the end of the match can be prevented "
},
{
"trigger": "sv_matchpause_auto_5v5",
"contents": "sv_matchpause_auto_5v5 \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. When enabled will automatically pause the match at next freeze time if less than 5 players are connected on each team. "
},
{
"trigger": "sv_max_allowed_net_graph",
"contents": "sv_max_allowed_net_graph \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Determines max allowed net_graph value for clients. "
},
{
"trigger": "sv_max_change_offsets",
"contents": "sv_max_change_offsets \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 40. How many network changes to track before requiring full diff check. "
},
{
"trigger": "sv_max_deathmatch_respawns_per_tick",
"contents": "sv_max_deathmatch_respawns_per_tick \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "sv_max_distance_transmit_footsteps",
"contents": "sv_max_distance_transmit_footsteps \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1250. Maximum distance to transmit footstep sound effects. "
},
{
"trigger": "sv_max_queries_sec",
"contents": "sv_max_queries_sec \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3. Maximum queries per second to respond to from a single IP address. "
},
{
"trigger": "sv_max_queries_sec_global",
"contents": "sv_max_queries_sec_global \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 60. Maximum queries per second to respond to from anywhere. "
},
{
"trigger": "sv_max_queries_window",
"contents": "sv_max_queries_window \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 30. Window over which to average queries per second averages. "
},
{
"trigger": "sv_max_unreliable_delta_size",
"contents": "sv_max_unreliable_delta_size \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 4096. Maximum allowable entity delta size over unreliable delivery. "
},
{
"trigger": "sv_max_usercmd_future_ticks",
"contents": "sv_max_usercmd_future_ticks \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 8. Prevents clients from running usercmds too far in the future. Prevents speed hacks. "
},
{
"trigger": "sv_maxclientframes",
"contents": "sv_maxclientframes \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 128"
},
{
"trigger": "sv_maxrate",
"contents": "sv_maxrate \"${1:value}\"",
"kind": "snippet",
"details": "Max bandwidth rate allowed on server, 0 == unlimited0 Max: 1000000"
},
{
"trigger": "sv_maxreplay",
"contents": "sv_maxreplay \"${1:value}\"",
"kind": "snippet",
"details": "Maximum replay time in seconds0 Max: 15"
},
{
"trigger": "sv_maxspeed",
"contents": "sv_maxspeed \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 320"
},
{
"trigger": "sv_maxunlag",
"contents": "sv_maxunlag \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.2. Maximum lag compensation in seconds0 Max: 1"
},
{
"trigger": "sv_maxvelocity",
"contents": "sv_maxvelocity \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3500. Maximum speed any ballistically moving object is allowed to attain per axis. "
},
{
"trigger": "sv_memlimit",
"contents": "sv_memlimit \"${1:value}\"",
"kind": "snippet",
"details": "If set, whenever a game ends, if the total memory used by the server is greater than this # of megabytes, the server will exit. "
},
{
"trigger": "sv_merge_changes_after_tick_with_calcdelta",
"contents": "sv_merge_changes_after_tick_with_calcdelta \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. This fixes bugs where pure calcdelta is used due to recipient changing but it doesn't pick up a field change where the value was changed back to same value as the from snapshot even though the destination fields change list does note the change. Set to 2 to spew any changes merged in by this fix. "
},
{
"trigger": "sv_min_jump_landing_sound",
"contents": "sv_min_jump_landing_sound \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 260"
},
{
"trigger": "sv_minrate",
"contents": "sv_minrate \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 98304. Min bandwidth rate allowed on server, 0 == unlimited0 Max: 1000000"
},
{
"trigger": "sv_mmqueue_reservation",
"contents": "sv_mmqueue_reservation \"${1:value}\"",
"kind": "snippet",
"details": "Server queue reservation "
},
{
"trigger": "sv_mmqueue_reservation_extended_timeout",
"contents": "sv_mmqueue_reservation_extended_timeout \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 21. Extended time in seconds before mmqueue reservation expires.Min: 5 Max: 180"
},
{
"trigger": "sv_mmqueue_reservation_timeout",
"contents": "sv_mmqueue_reservation_timeout \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 21. Time in seconds before mmqueue reservation expires.Min: 5 Max: 180"
},
{
"trigger": "sv_mover_maxslope",
"contents": "sv_mover_maxslope \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.7. The maximum slope the player can overcome [-] "
},
{
"trigger": "sv_mover_pogodampingratio",
"contents": "sv_mover_pogodampingratio \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. The capsule pogo stick damping ratio [-] "
},
{
"trigger": "sv_mover_pogofrequency",
"contents": "sv_mover_pogofrequency \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 10. The capsule pogo stick frequency [hz]. "
},
{
"trigger": "sv_mute_players_with_social_penalties",
"contents": "sv_mute_players_with_social_penalties \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "sv_networkvar_perfieldtracking",
"contents": "sv_networkvar_perfieldtracking \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Track individual field offset changes, rather than a single dirty flag for the whole entity. "
},
{
"trigger": "sv_networkvar_validate",
"contents": "sv_networkvar_validate \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Validate each StateChanged against known offsets. "
},
{
"trigger": "sv_no_navmesh",
"contents": "sv_no_navmesh \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Block loading of the navmesh. Unplayable, only used for memory sampling. "
},
{
"trigger": "sv_noclipaccelerate",
"contents": "sv_noclipaccelerate \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 5"
},
{
"trigger": "sv_noclipduringpause",
"contents": "sv_noclipduringpause \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. If cheats are enabled, then you can noclip with the game paused (for doing screenshots, etc.). "
},
{
"trigger": "sv_noclipfriction",
"contents": "sv_noclipfriction \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 4. Friction during noclip move. "
},
{
"trigger": "sv_noclipspeed",
"contents": "sv_noclipspeed \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1200"
},
{
"trigger": "sv_nomvp",
"contents": "sv_nomvp \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Disable MVP awards. "
},
{
"trigger": "sv_nonemesis",
"contents": "sv_nonemesis \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Disable nemesis and revenge. "
},
{
"trigger": "sv_nowinpanel",
"contents": "sv_nowinpanel \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Turn on/off win panel on server "
},
{
"trigger": "sv_optimizedmovement",
"contents": "sv_optimizedmovement \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "sv_outofammo_indicator",
"contents": "sv_outofammo_indicator \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sv_parallel_checktransmit",
"contents": "sv_parallel_checktransmit \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2. Set to 1 to use threaded checkentities for transmit/pvs on listen servers, 2 for dedicated servers. "
},
{
"trigger": "sv_parallel_packentities",
"contents": "sv_parallel_packentities \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2. Set to 1 to use threaded snapshot sending on listen servers, 2 for dedicated servers. "
},
{
"trigger": "sv_parallel_sendsnapshot",
"contents": "sv_parallel_sendsnapshot \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2. 0: run all send jobs on main thread; 1: send jobs run asynchronously (except on dedicated server); 2: send jobs asynchronously; 3: send jobs run in parallel but block to not overlap the next tick; 4: main server clients' send jobs run in parallel, then HLTV server jobs; this approximately matches pre-async profile for a single HLTV server configuration "
},
{
"trigger": "sv_party_mode",
"contents": "sv_party_mode \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Party!! "
},
{
"trigger": "sv_password",
"contents": "sv_password \"${1:value}\"",
"kind": "snippet",
"details": "Server password for entry into multiplayer games "
},
{
"trigger": "sv_pausable",
"contents": "sv_pausable \"${1:value}\"",
"kind": "snippet",
"details": "Is the server pausable. "
},
{
"trigger": "sv_pausable_dev",
"contents": "sv_pausable_dev \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Whether listen server is pausable when running -dev and playing solo against bots "
},
{
"trigger": "sv_pausable_dev_ds",
"contents": "sv_pausable_dev_ds \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Whether dedicated server is pausable when running -dev and playing solo against bots "
},
{
"trigger": "sv_pause_on_console_open",
"contents": "sv_pause_on_console_open \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. 1 = Pause the game when pressing ~ to open the console. CTRL+~ opens the console without pause. "
},
{
"trigger": "sv_penetration_type",
"contents": "sv_penetration_type \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2. What type of penetration to use. 1 = CS:GO, 2 = CS2 "
},
{
"trigger": "sv_phys_animated_hierarchy",
"contents": "sv_phys_animated_hierarchy \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "sv_phys_debug_callback_entities",
"contents": "sv_phys_debug_callback_entities \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Print all entities that get touch callbacks. Each entity is printed only once. "
},
{
"trigger": "sv_phys_enabled",
"contents": "sv_phys_enabled \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Enable all physics simulation "
},
{
"trigger": "sv_phys_sleep_enable",
"contents": "sv_phys_sleep_enable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Enable sleeping for dynamic physics bodies. "
},
{
"trigger": "sv_phys_stop_at_collision",
"contents": "sv_phys_stop_at_collision \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "sv_phys_visualize_awake",
"contents": "sv_phys_visualize_awake \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sv_player_search_range",
"contents": "sv_player_search_range \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 64"
},
{
"trigger": "sv_playerradio_use_allowlist",
"contents": "sv_playerradio_use_allowlist \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. playerradio commands may only use responses from an allow list of commands. "
},
{
"trigger": "sv_prime_accounts_only",
"contents": "sv_prime_accounts_only \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. When this setting is enabled only prime users can connect to this game server. "
},
{
"trigger": "sv_pure_kick_clients",
"contents": "sv_pure_kick_clients \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. If set to 1, the server will kick clients with mismatching files. Otherwise, it will issue a warning to the client. "
},
{
"trigger": "sv_pure_trace",
"contents": "sv_pure_trace \"${1:value}\"",
"kind": "snippet",
"details": "If set to 1, the server will print a message whenever a client is verifying a CRC for a file. "
},
{
"trigger": "sv_pushaway_clientside",
"contents": "sv_pushaway_clientside \"${1:value}\"",
"kind": "snippet",
"details": "Clientside physics push away (0=off, 1=only localplayer, 1=all players) "
},
{
"trigger": "sv_pushaway_clientside_size",
"contents": "sv_pushaway_clientside_size \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 15. Minimum size of pushback objects "
},
{
"trigger": "sv_pushaway_force",
"contents": "sv_pushaway_force \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -214748.3648. How hard physics objects are pushed away from the players on the server. "
},
{
"trigger": "sv_pushaway_hostage_force",
"contents": "sv_pushaway_hostage_force \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 20000. How hard the hostage is pushed away from physics objects (falls off with inverse square of distance). "
},
{
"trigger": "sv_pushaway_max_force",
"contents": "sv_pushaway_max_force \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2000. Maximum amount of force applied to physics objects by players. "
},
{
"trigger": "sv_pushaway_max_hostage_force",
"contents": "sv_pushaway_max_hostage_force \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1000. Maximum of how hard the hostage is pushed away from physics objects. "
},
{
"trigger": "sv_pushaway_max_player_force",
"contents": "sv_pushaway_max_player_force \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 20. Maximum of how hard the player is pushed away from physics objects. "
},
{
"trigger": "sv_pushaway_min_player_speed",
"contents": "sv_pushaway_min_player_speed \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 75. If a player is moving slower than this, don't push away physics objects (enables ducking behind things). "
},
{
"trigger": "sv_pushaway_player_force",
"contents": "sv_pushaway_player_force \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 450. How hard the player is pushed away from physics objects (falls off with inverse square of distance). "
},
{
"trigger": "sv_pvs_entity",
"contents": "sv_pvs_entity \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. If set, only allows this ent index to network (other than players and things that force sending). "
},
{
"trigger": "sv_pvs_max_distance",
"contents": "sv_pvs_max_distance \"${1:value}\"",
"kind": "snippet",
"details": "if set, adds a maximum range to PVS/PAS checks "
},
{
"trigger": "sv_pvs_random",
"contents": "sv_pvs_random \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. If set, objects blink in/out of pvs randomly. "
},
{
"trigger": "sv_radio_throttle_window",
"contents": "sv_radio_throttle_window \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 10. The number of seconds before radio command tokens refresh. "
},
{
"trigger": "sv_ragdoll_lru_debug",
"contents": "sv_ragdoll_lru_debug \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sv_rcon_banpenalty",
"contents": "sv_rcon_banpenalty \"${1:value}\"",
"kind": "snippet",
"details": "Number of minutes to ban users who fail rcon authentication0 "
},
{
"trigger": "sv_rcon_log",
"contents": "sv_rcon_log \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Enable/disable rcon logging. "
},
{
"trigger": "sv_rcon_maxfailures",
"contents": "sv_rcon_maxfailures \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 10. Max number of times a user can fail rcon authentication before being bannedMin: 1 Max: 20"
},
{
"trigger": "sv_rcon_minfailures",
"contents": "sv_rcon_minfailures \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 5. Number of times a user can fail rcon authentication in sv_rcon_minfailuretime before being bannedMin: 1 Max: 20"
},
{
"trigger": "sv_rcon_minfailuretime",
"contents": "sv_rcon_minfailuretime \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 30. Number of seconds to track failed rcon authenticationsMin: 1 "
},
{
"trigger": "sv_record_item_time_data",
"contents": "sv_record_item_time_data \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Turn on recording of per player item time data into the server log. "
},
{
"trigger": "sv_regeneration_force_on",
"contents": "sv_regeneration_force_on \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Cheat to test regenerative health systems "
},
{
"trigger": "sv_regeneration_wait_time",
"contents": "sv_regeneration_wait_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "sv_region",
"contents": "sv_region \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. The region of the world to report this server in. "
},
{
"trigger": "sv_remapper_loopsoundfix",
"contents": "sv_remapper_loopsoundfix \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sv_remapper_range_multiplier",
"contents": "sv_remapper_range_multiplier \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "sv_remove_ent_from_pvs",
"contents": "sv_remove_ent_from_pvs \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "sv_replaysdir",
"contents": "sv_replaysdir \"${1:value}\"",
"kind": "snippet",
"details": "Directory to store replays in "
},
{
"trigger": "sv_reserve_slots_for_reconnecting_players_kick_prior",
"contents": "sv_reserve_slots_for_reconnecting_players_kick_prior \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Kick a previously connected player with the same steamID if a replacement comes along "
},
{
"trigger": "sv_rollangle",
"contents": "sv_rollangle \"${1:value}\"",
"kind": "snippet",
"details": "Max view roll angle "
},
{
"trigger": "sv_rollspeed",
"contents": "sv_rollspeed \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 200"
},
{
"trigger": "sv_runcmds",
"contents": "sv_runcmds \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "sv_script_think_interval",
"contents": "sv_script_think_interval \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.1"
},
{
"trigger": "sv_search_key",
"contents": "sv_search_key \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "sv_search_team_key",
"contents": "sv_search_team_key \"${1:value}\"",
"kind": "snippet",
"details": "When initiating team search, set this key to match with known opponents team "
},
{
"trigger": "sv_sendtables",
"contents": "sv_sendtables \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Force full sendtable sending path. "
},
{
"trigger": "sv_sequence_debug",
"contents": "sv_sequence_debug \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "sv_sequence_debug2",
"contents": "sv_sequence_debug2 \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "sv_sequence_model_substring",
"contents": "sv_sequence_model_substring \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "sv_server_graphic1",
"contents": "sv_server_graphic1 \"${1:value}\"",
"kind": "snippet",
"details": "A 360x60 (<16kb) image file in /csgo/ that will be displayed to spectators. "
},
{
"trigger": "sv_server_graphic2",
"contents": "sv_server_graphic2 \"${1:value}\"",
"kind": "snippet",
"details": "A 220x45 (<16kb) image file in /csgo/ that will be displayed to spectators. "
},
{
"trigger": "sv_server_side_animation",
"contents": "sv_server_side_animation \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "sv_server_verify_blood_on_player",
"contents": "sv_server_verify_blood_on_player \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "sv_shared_team_pvs",
"contents": "sv_shared_team_pvs \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. PVS is shared between teams "
},
{
"trigger": "sv_shield_bash_damage_to_nonplayer",
"contents": "sv_shield_bash_damage_to_nonplayer \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 30"
},
{
"trigger": "sv_shield_bash_damage_to_players",
"contents": "sv_shield_bash_damage_to_players \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 90"
},
{
"trigger": "sv_shield_explosive_damage_cap",
"contents": "sv_shield_explosive_damage_cap \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 99"
},
{
"trigger": "sv_shield_explosive_damage_crouch_bonus",
"contents": "sv_shield_explosive_damage_crouch_bonus \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 10"
},
{
"trigger": "sv_shield_explosive_damage_mindist",
"contents": "sv_shield_explosive_damage_mindist \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 30"
},
{
"trigger": "sv_shield_explosive_damage_mult",
"contents": "sv_shield_explosive_damage_mult \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 4"
},
{
"trigger": "sv_shield_explosive_damage_scale",
"contents": "sv_shield_explosive_damage_scale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.5"
},
{
"trigger": "sv_shield_hitpoints",
"contents": "sv_shield_hitpoints \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 850"
},
{
"trigger": "sv_show_bot_difficulty_in_name",
"contents": "sv_show_bot_difficulty_in_name \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. 0 = hide bot difficulty in bot name, 1 = show bot difficulty in bot name "
},
{
"trigger": "sv_show_move_collisions",
"contents": "sv_show_move_collisions \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Enable this to visualize collisions between player and geometry. "
},
{
"trigger": "sv_show_ragdoll_playernames",
"contents": "sv_show_ragdoll_playernames \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sv_show_team_equipment_force_on",
"contents": "sv_show_team_equipment_force_on \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Force on if not prohibited "
},
{
"trigger": "sv_show_team_equipment_prohibit",
"contents": "sv_show_team_equipment_prohibit \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Determines whether +cl_show_team_equipment is prohibited. "
},
{
"trigger": "sv_show_teammate_death_notification",
"contents": "sv_show_teammate_death_notification \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Show chat notification upon teammate death "
},
{
"trigger": "sv_show_voip_indicator_for_enemies",
"contents": "sv_show_voip_indicator_for_enemies \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Makes it so the voip icon is shown over enemies as well as allies when they are talking "
},
{
"trigger": "sv_showbullethits",
"contents": "sv_showbullethits \"${1:value}\"",
"kind": "snippet",
"details": "1=show hits and near misses, 2=show hits only "
},
{
"trigger": "sv_showhitregistration",
"contents": "sv_showhitregistration \"${1:value}\"",
"kind": "snippet",
"details": "Display lag_compensated hitboxes. 0 = off, 1 = server only, 2 = client only, 3 = both server and client "
},
{
"trigger": "sv_showimpacts",
"contents": "sv_showimpacts \"${1:value}\"",
"kind": "snippet",
"details": "Shows client (red) and server (blue) bullet impact point (1=both, 2=client-only, 3=server-only) "
},
{
"trigger": "sv_showimpacts_penetration",
"contents": "sv_showimpacts_penetration \"${1:value}\"",
"kind": "snippet",
"details": "Shows extra data when bullets penetrate. (use sv_showimpacts_time to increase time shown) "
},
{
"trigger": "sv_showimpacts_time",
"contents": "sv_showimpacts_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 4. Duration bullet impact indicators remain before disappearing0 Max: 10"
},
{
"trigger": "sv_showladders",
"contents": "sv_showladders \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Show bbox and dismount points for all ladders (must be set before level load.) "
},
{
"trigger": "sv_showlagcompensation_rec",
"contents": "sv_showlagcompensation_rec \"${1:value}\"",
"kind": "snippet",
"details": "If > 0, show lag compensation hitboxes as they're recorded. Value is for how long. "
},
{
"trigger": "sv_showplayerhitboxes",
"contents": "sv_showplayerhitboxes \"${1:value}\"",
"kind": "snippet",
"details": "Show lag compensated hitboxes for the specified player index whenever a player fires. "
},
{
"trigger": "sv_shutdown_immediately_on_request",
"contents": "sv_shutdown_immediately_on_request \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. The server will always shutdown on receiving the shutdown request, even if not hibernating "
},
{
"trigger": "sv_skel_constraints_enable",
"contents": "sv_skel_constraints_enable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sv_skip_update_animations",
"contents": "sv_skip_update_animations \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Enable to skip game animations "
},
{
"trigger": "sv_skirmish_id",
"contents": "sv_skirmish_id \"${1:value}\"",
"kind": "snippet",
"details": "Dedicated server skirmish id to run "
},
{
"trigger": "sv_skyname",
"contents": "sv_skyname \"${1:value}\"",
"kind": "snippet",
"details": "Current name of the skybox texture "
},
{
"trigger": "sv_smoke_volume_blind_start",
"contents": "sv_smoke_volume_blind_start \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.2"
},
{
"trigger": "sv_snapshot_unlimited",
"contents": "sv_snapshot_unlimited \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. For debugging, don't throw away old snapshots so that if you break in debugger (on remote client or server) it won't require an uncompressed update to resume. You may run out of memory of course... "
},
{
"trigger": "sv_sniper_tracer_innacuracy",
"contents": "sv_sniper_tracer_innacuracy \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.085. How inaccurate a sniper shot can be before we trip sv_sniper_tracer_mode behavior. "
},
{
"trigger": "sv_sniper_tracer_innacuracy_length",
"contents": "sv_sniper_tracer_innacuracy_length \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 200. How far should the tracer draw if we trip sv_sniper_tracer_mode behavior. "
},
{
"trigger": "sv_sniper_tracer_mode",
"contents": "sv_sniper_tracer_mode \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Mode for sniper tracers. 0: legacy, 1: hide when more than sv_sniper_tracer_innacuracy inaccurate. "
},
{
"trigger": "sv_spawn_afk_bomb_drop_time",
"contents": "sv_spawn_afk_bomb_drop_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 15. Players that have never moved since they spawned will drop the bomb after this amount of time. "
},
{
"trigger": "sv_spec_hear",
"contents": "sv_spec_hear \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Determines who spectators can hear: 0: only spectators; 1: all players; 2: spectated team; 3: self only; 4: nobody "
},
{
"trigger": "sv_spec_use_tournament_content_standards",
"contents": "sv_spec_use_tournament_content_standards \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sv_specaccelerate",
"contents": "sv_specaccelerate \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 5"
},
{
"trigger": "sv_specnoclip",
"contents": "sv_specnoclip \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "sv_specspeed",
"contents": "sv_specspeed \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1200"
},
{
"trigger": "sv_staminajumpcost",
"contents": "sv_staminajumpcost \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.08. Stamina penalty for jumping0 "
},
{
"trigger": "sv_staminalandcost",
"contents": "sv_staminalandcost \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.05. Stamina penalty for landing0 "
},
{
"trigger": "sv_staminamax",
"contents": "sv_staminamax \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 80. Maximum stamina penalty0 Max: 100"
},
{
"trigger": "sv_staminarecoveryrate",
"contents": "sv_staminarecoveryrate \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 60. Rate at which stamina recovers (units/sec)0 "
},
{
"trigger": "sv_stats",
"contents": "sv_stats \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Collect CPU usage stats "
},
{
"trigger": "sv_steamgroup",
"contents": "sv_steamgroup \"${1:value}\"",
"kind": "snippet",
"details": "The ID of the steam group that this server belongs to. You can find your group's ID on the admin profile page in the steam community. "
},
{
"trigger": "sv_steamgroup_exclusive",
"contents": "sv_steamgroup_exclusive \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. If set, only members of Steam group will be able to join the server when it's empty, public people will be able to join the server only if it has players. "
},
{
"trigger": "sv_stepsize",
"contents": "sv_stepsize \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 18"
},
{
"trigger": "sv_stopspeed",
"contents": "sv_stopspeed \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 80. Minimum stopping speed when on ground. "
},
{
"trigger": "sv_stressbots",
"contents": "sv_stressbots \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. If set to 1, the server calculates data and fills packets to bots. Used for perf testing. "
},
{
"trigger": "sv_strict_notarget",
"contents": "sv_strict_notarget \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. If set, notarget will cause entities to never think they are in the pvs "
},
{
"trigger": "sv_suppress_friendlyfire_decals",
"contents": "sv_suppress_friendlyfire_decals \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "sv_suppress_viewpunch",
"contents": "sv_suppress_viewpunch \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sv_tags",
"contents": "sv_tags \"${1:value}\"",
"kind": "snippet",
"details": "Server tags. Used to provide extra information to clients when they're browsing for servers. Separate tags with a comma. "
},
{
"trigger": "sv_talk_after_dying_time",
"contents": "sv_talk_after_dying_time \"${1:value}\"",
"kind": "snippet",
"details": "The number of seconds a player can continue talking after dying as if they were still alive "
},
{
"trigger": "sv_talk_enemy_dead",
"contents": "sv_talk_enemy_dead \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Dead players can hear all dead enemy communication (voice, chat) "
},
{
"trigger": "sv_talk_enemy_living",
"contents": "sv_talk_enemy_living \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Living players can hear all living enemy communication (voice, chat) "
},
{
"trigger": "sv_teamid_overhead",
"contents": "sv_teamid_overhead \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Shows teamID over player's heads. 0 = off, 1 = on "
},
{
"trigger": "sv_teamid_overhead_always_prohibit",
"contents": "sv_teamid_overhead_always_prohibit \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Determines whether cl_teamid_overhead_always is prohibited. "
},
{
"trigger": "sv_teamid_overhead_maxdist",
"contents": "sv_teamid_overhead_maxdist \"${1:value}\"",
"kind": "snippet",
"details": "If >0, server will override cl_teamid_overhead_maxdist "
},
{
"trigger": "sv_teamid_overhead_maxdist_spec",
"contents": "sv_teamid_overhead_maxdist_spec \"${1:value}\"",
"kind": "snippet",
"details": "If >0, server will override cl_teamid_overhead_maxdist_spec "
},
{
"trigger": "sv_temp_baseline_string_table_buffer_size",
"contents": "sv_temp_baseline_string_table_buffer_size \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 524288. Buffer size for writing string table baselines "
},
{
"trigger": "sv_timebetweenducks",
"contents": "sv_timebetweenducks \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.4. Minimum time before recognizing consecutive duck key0 Max: 2"
},
{
"trigger": "sv_timeout",
"contents": "sv_timeout \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 20. After this many seconds without a message from fully connected client, the client is dropped "
},
{
"trigger": "sv_turbophysics",
"contents": "sv_turbophysics \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Turns on turbo physics "
},
{
"trigger": "sv_turning_inaccuracy_angle_min",
"contents": "sv_turning_inaccuracy_angle_min \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 4"
},
{
"trigger": "sv_turning_inaccuracy_decay",
"contents": "sv_turning_inaccuracy_decay \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.8"
},
{
"trigger": "sv_turning_inaccuracy_enabled",
"contents": "sv_turning_inaccuracy_enabled \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sv_unify_random_seed",
"contents": "sv_unify_random_seed \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Should we securely share seeds between the client and server? "
},
{
"trigger": "sv_unlag",
"contents": "sv_unlag \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Enables player lag compensation "
},
{
"trigger": "sv_unlag_debug",
"contents": "sv_unlag_debug \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "sv_unlag_fixstuck",
"contents": "sv_unlag_fixstuck \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Disallow backtracking a player for lag compensation if it will cause them to become stuck "
},
{
"trigger": "sv_unlockedchapters",
"contents": "sv_unlockedchapters \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Highest unlocked game chapter. "
},
{
"trigger": "sv_update_animgraph_movement_in_finish",
"contents": "sv_update_animgraph_movement_in_finish \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Whether we should update animgraph movement in FinishMove. "
},
{
"trigger": "sv_usenetworkvars",
"contents": "sv_usenetworkvars \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Use networkvar system. "
},
{
"trigger": "sv_usercmd_custom_random_seed",
"contents": "sv_usercmd_custom_random_seed \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. When enabled server will populate an additional random seed independent of the client "
},
{
"trigger": "sv_usercmd_queue_spew_threshold",
"contents": "sv_usercmd_queue_spew_threshold \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 10. Spew warning if command queue has grown above this many backlogged commands. "
},
{
"trigger": "sv_usestepsimulation",
"contents": "sv_usestepsimulation \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. use old stepsimulation system. "
},
{
"trigger": "sv_versus_screen_scene_id",
"contents": "sv_versus_screen_scene_id \"${1:value}\"",
"kind": "snippet",
"details": "Determines which scene is used for the versus screen. "
},
{
"trigger": "sv_visiblemaxplayers",
"contents": "sv_visiblemaxplayers \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. Overrides the max players reported to prospective clients "
},
{
"trigger": "sv_voice_proximity",
"contents": "sv_voice_proximity \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "sv_voicecodec",
"contents": "sv_voicecodec \"${1:value}\"",
"kind": "snippet",
"details": "Specifies which voice codec DLL to use in a game. Set to the name of the DLL without the extension. "
},
{
"trigger": "sv_voiceenable",
"contents": "sv_voiceenable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "sv_vote_allow_in_warmup",
"contents": "sv_vote_allow_in_warmup \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Allow voting during warmup? "
},
{
"trigger": "sv_vote_allow_spectators",
"contents": "sv_vote_allow_spectators \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Allow spectators to initiate votes? "
},
{
"trigger": "sv_vote_command_delay",
"contents": "sv_vote_command_delay \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2. How long after a vote passes until the action happens Max: 4.5"
},
{
"trigger": "sv_vote_count_spectator_votes",
"contents": "sv_vote_count_spectator_votes \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Allow spectators to vote on issues? "
},
{
"trigger": "sv_vote_creation_timer",
"contents": "sv_vote_creation_timer \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 120. How often someone can individually call a vote. "
},
{
"trigger": "sv_vote_disallow_kick_on_match_point",
"contents": "sv_vote_disallow_kick_on_match_point \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Disallow vote kicking on the match point round. "
},
{
"trigger": "sv_vote_failure_timer",
"contents": "sv_vote_failure_timer \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 300. A vote that fails cannot be re-submitted for this long "
},
{
"trigger": "sv_vote_issue_changelevel_allowed",
"contents": "sv_vote_issue_changelevel_allowed \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Can people hold votes to change levels? "
},
{
"trigger": "sv_vote_issue_kick_allowed",
"contents": "sv_vote_issue_kick_allowed \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Can people hold votes to kick players from the server? "
},
{
"trigger": "sv_vote_issue_loadbackup_allowed",
"contents": "sv_vote_issue_loadbackup_allowed \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Can people hold votes to load match from backup? "
},
{
"trigger": "sv_vote_issue_loadbackup_spec_authoritative",
"contents": "sv_vote_issue_loadbackup_spec_authoritative \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. When enabled, admins load match from backup without players vote "
},
{
"trigger": "sv_vote_issue_loadbackup_spec_only",
"contents": "sv_vote_issue_loadbackup_spec_only \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. When enabled, only admins load match from backup "
},
{
"trigger": "sv_vote_issue_loadbackup_spec_safe",
"contents": "sv_vote_issue_loadbackup_spec_safe \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. When enabled, admins load match from backup in safe time of the round only "
},
{
"trigger": "sv_vote_issue_matchready_allowed",
"contents": "sv_vote_issue_matchready_allowed \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Can people hold votes to ready/unready the match? "
},
{
"trigger": "sv_vote_issue_nextlevel_allowed",
"contents": "sv_vote_issue_nextlevel_allowed \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Can people hold votes to set the next level? "
},
{
"trigger": "sv_vote_issue_nextlevel_allowextend",
"contents": "sv_vote_issue_nextlevel_allowextend \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Allow players to extend the current map? "
},
{
"trigger": "sv_vote_issue_nextlevel_choicesmode",
"contents": "sv_vote_issue_nextlevel_choicesmode \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Present players with a list of lowest playtime maps to choose from? "
},
{
"trigger": "sv_vote_issue_nextlevel_prevent_change",
"contents": "sv_vote_issue_nextlevel_prevent_change \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Not allowed to vote for a nextlevel if one has already been set. "
},
{
"trigger": "sv_vote_issue_pause_match_allowed",
"contents": "sv_vote_issue_pause_match_allowed \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Can people hold votes to pause/unpause the match? "
},
{
"trigger": "sv_vote_issue_pause_match_spec_only",
"contents": "sv_vote_issue_pause_match_spec_only \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. When enabled, only admins start technical pause "
},
{
"trigger": "sv_vote_issue_restart_game_allowed",
"contents": "sv_vote_issue_restart_game_allowed \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Can people hold votes to restart the game? "
},
{
"trigger": "sv_vote_issue_scramble_teams_allowed",
"contents": "sv_vote_issue_scramble_teams_allowed \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Can people hold votes to scramble the teams? "
},
{
"trigger": "sv_vote_issue_surrrender_allowed",
"contents": "sv_vote_issue_surrrender_allowed \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Can people hold votes to surrender? "
},
{
"trigger": "sv_vote_issue_swap_teams_allowed",
"contents": "sv_vote_issue_swap_teams_allowed \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Can people hold votes to swap the teams? "
},
{
"trigger": "sv_vote_issue_timeout_allowed",
"contents": "sv_vote_issue_timeout_allowed \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Can people hold votes to time out? "
},
{
"trigger": "sv_vote_kick_ban_duration",
"contents": "sv_vote_kick_ban_duration \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 15. How long should a kick vote ban someone from the server? (in minutes) "
},
{
"trigger": "sv_vote_quorum_ratio",
"contents": "sv_vote_quorum_ratio \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.501. The minimum ratio of players needed to vote on an issue to resolve it.Min: 0.01 Max: 1"
},
{
"trigger": "sv_vote_timer_duration",
"contents": "sv_vote_timer_duration \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 15. How long to allow voting on an issue "
},
{
"trigger": "sv_vote_to_changelevel_before_match_point",
"contents": "sv_vote_to_changelevel_before_match_point \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Restricts vote to change level to rounds prior to match point (default 0, vote is never disallowed) "
},
{
"trigger": "sv_warmup_to_freezetime_delay",
"contents": "sv_warmup_to_freezetime_delay \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 4. Delay between end of warmup and start of match.Min: 3 Max: 20"
},
{
"trigger": "sv_watchtransmit",
"contents": "sv_watchtransmit \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -2. Watch NetworkStateChanged info for this entity index. "
},
{
"trigger": "sv_water_slow_amount",
"contents": "sv_water_slow_amount \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.9"
},
{
"trigger": "sv_wateraccelerate",
"contents": "sv_wateraccelerate \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 10"
},
{
"trigger": "sv_waterdist",
"contents": "sv_waterdist \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 12. Vertical view fixup when eyes are near water plane. "
},
{
"trigger": "sv_waterfriction",
"contents": "sv_waterfriction \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "sv_weapon_require_use_grace_period",
"contents": "sv_weapon_require_use_grace_period \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "sv_weapon_swap_difficulty_near_hi_pri",
"contents": "sv_weapon_swap_difficulty_near_hi_pri \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2. 0 = Cone searches easily reach past high priority items to swap weapons. 1 = Cone searches are narrowed and require that the weapon is strictly closer. 2 = cone searches are disabled near high priority items "
},
{
"trigger": "sv_workshop_allow_other_maps",
"contents": "sv_workshop_allow_other_maps \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. When hosting a workshop collection, users can play other workshop map on this server when it is empty and then mapcycle into this server collection. "
},
{
"trigger": "sys_minidumpexpandedspew",
"contents": "sys_minidumpexpandedspew \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "sys_minidumpspewlines",
"contents": "sys_minidumpspewlines \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2000. Lines of crash dump console spew to keep. "
},
{
"trigger": "target_scan_use_query_cache",
"contents": "target_scan_use_query_cache \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "teleport_trigger_debug",
"contents": "teleport_trigger_debug \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "test_restoreonnewmodel",
"contents": "test_restoreonnewmodel \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "testscript_debug",
"contents": "testscript_debug \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Debug test scripts. "
},
{
"trigger": "think_limit",
"contents": "think_limit \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 10. Maximum think time in milliseconds, warning is printed if this is exceeded. "
},
{
"trigger": "thirdperson_lockcamera",
"contents": "thirdperson_lockcamera \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "throttle_expensive_ai",
"contents": "throttle_expensive_ai \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "timedemo_end",
"contents": "timedemo_end \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. Ends timedemo on given tick. "
},
{
"trigger": "timedemo_start",
"contents": "timedemo_start \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. Starts timedemo on given tick. "
},
{
"trigger": "tool_spawned_model_scales",
"contents": "tool_spawned_model_scales \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "tr_best_course_time",
"contents": "tr_best_course_time \"${1:value}\"",
"kind": "snippet",
"details": "The player's best time for the timed obstacle course "
},
{
"trigger": "tr_completed_training",
"contents": "tr_completed_training \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Whether the local player has completed the initial training portion of the training map "
},
{
"trigger": "tr_valve_course_time",
"contents": "tr_valve_course_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 352. Valve's best time for the timed obstacle course "
},
{
"trigger": "trusted_launch",
"contents": "trusted_launch \"${1:value}\"",
"kind": "snippet",
"details": "Trusted launch status "
},
{
"trigger": "tv_advertise_watchable",
"contents": "tv_advertise_watchable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. GOTV advertises the match as watchable via game UI, clients watching via UI will not need to type password "
},
{
"trigger": "tv_allow_autorecording_index",
"contents": "tv_allow_autorecording_index \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. When >=0 restricts autorecording only to the specified TV index "
},
{
"trigger": "tv_allow_camera_man",
"contents": "tv_allow_camera_man \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Auto director allows spectators to become camera man "
},
{
"trigger": "tv_allow_camera_man_steamid",
"contents": "tv_allow_camera_man_steamid \"${1:value}\"",
"kind": "snippet",
"details": "Allows tournament production cameraman to run csgo.exe -interactivecaster on SteamID 7650123456XXX and be the camera man. "
},
{
"trigger": "tv_allow_camera_man_steamid2",
"contents": "tv_allow_camera_man_steamid2 \"${1:value}\"",
"kind": "snippet",
"details": "Allows tournament production tv cameraman to run csgo.exe -interactivecaster on SteamID 7650123456XXX and be the tv camera man. "
},
{
"trigger": "tv_allow_static_shots",
"contents": "tv_allow_static_shots \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Auto director uses fixed level cameras for shots "
},
{
"trigger": "tv_autorecord",
"contents": "tv_autorecord \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Automatically records all games as SourceTV demos. "
},
{
"trigger": "tv_autoretry",
"contents": "tv_autoretry \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Relay proxies retry connection after network timeout "
},
{
"trigger": "tv_broadcast",
"contents": "tv_broadcast \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Automatically broadcasts all games as GOTV demos through Steam. "
},
{
"trigger": "tv_broadcast_drop_fragments",
"contents": "tv_broadcast_drop_fragments \"${1:value}\"",
"kind": "snippet",
"details": "Drop every Nth fragment "
},
{
"trigger": "tv_broadcast_keyframe_interval",
"contents": "tv_broadcast_keyframe_interval \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3. The frequency, in seconds, of sending keyframes and delta fragments to the broadcast relay server "
},
{
"trigger": "tv_broadcast_keyframe_interval1",
"contents": "tv_broadcast_keyframe_interval1 \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3. The frequency, in seconds, of sending keyframes and delta fragments to the broadcast1 relay server "
},
{
"trigger": "tv_broadcast_max_requests",
"contents": "tv_broadcast_max_requests \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 20. Max number of broadcast http requests in flight. If there is a network issue, the requests may start piling up, degrading server performance. If more than the specified number of requests are in flight, the new requests are dropped. "
},
{
"trigger": "tv_broadcast_max_requests1",
"contents": "tv_broadcast_max_requests1 \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 20. Max number of broadcast1 http requests in flight. If there is a network issue, the requests may start piling up, degrading server performance. If more than the specified number of requests are in flight, the new requests are dropped. "
},
{
"trigger": "tv_broadcast_origin_auth",
"contents": "tv_broadcast_origin_auth \"${1:value}\"",
"kind": "snippet",
"details": "X-Origin-Auth header of the broadcast POSTs "
},
{
"trigger": "tv_broadcast_origin_auth1",
"contents": "tv_broadcast_origin_auth1 \"${1:value}\"",
"kind": "snippet",
"details": "X-Origin-Auth header of the broadcast1 POSTs "
},
{
"trigger": "tv_broadcast_origin_delay",
"contents": "tv_broadcast_origin_delay \"${1:value}\"",
"kind": "snippet",
"details": "Injection delay request for CDN rebroadcast frameworks, seconds "
},
{
"trigger": "tv_broadcast_startup_resend_interval",
"contents": "tv_broadcast_startup_resend_interval \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 10. The interval, in seconds, of re-sending startup data to the broadcast relay server (useful in case relay crashes, restarts or startup data http request fails) "
},
{
"trigger": "tv_broadcast_terminate",
"contents": "tv_broadcast_terminate \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Terminate every broadcast with a stop command "
},
{
"trigger": "tv_broadcast_url",
"contents": "tv_broadcast_url \"${1:value}\"",
"kind": "snippet",
"details": "URL of the broadcast relay "
},
{
"trigger": "tv_broadcast_url1",
"contents": "tv_broadcast_url1 \"${1:value}\"",
"kind": "snippet",
"details": "URL of the broadcast relay1 "
},
{
"trigger": "tv_broadcast1",
"contents": "tv_broadcast1 \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Automatically broadcasts all games as GOTV[1] demos through Steam. "
},
{
"trigger": "tv_chatgroupsize",
"contents": "tv_chatgroupsize \"${1:value}\"",
"kind": "snippet",
"details": "Set the default chat group size "
},
{
"trigger": "tv_chattimelimit",
"contents": "tv_chattimelimit \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.2. Limits spectators to chat only every n seconds "
},
{
"trigger": "tv_debug",
"contents": "tv_debug \"${1:value}\"",
"kind": "snippet",
"details": "SourceTV debug info. "
},
{
"trigger": "tv_delay",
"contents": "tv_delay \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 120. SourceTV broadcast delay in seconds0 Max: 960"
},
{
"trigger": "tv_delaymapchange",
"contents": "tv_delaymapchange \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Delays map change until broadcast is complete "
},
{
"trigger": "tv_deltacache",
"contents": "tv_deltacache \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2. Enable delta entity bit stream cache "
},
{
"trigger": "tv_demo_starttick",
"contents": "tv_demo_starttick \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "tv_dispatchmode",
"contents": "tv_dispatchmode \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Dispatch clients to relay proxies: 0=never, 1=if appropriate, 2=always "
},
{
"trigger": "tv_enable",
"contents": "tv_enable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Activates SourceTV on server. "
},
{
"trigger": "tv_enable_delta_frames",
"contents": "tv_enable_delta_frames \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Indicates whether or not the tv should use delta frames for storage of intermediate frames. This takes more CPU but significantly less memory. "
},
{
"trigger": "tv_enable_dynamic",
"contents": "tv_enable_dynamic \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. When enabled, changes in tv_enable convars cause immediate startup or shutdown of hltv server "
},
{
"trigger": "tv_enable1",
"contents": "tv_enable1 \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Activates SourceTV[1] on server. "
},
{
"trigger": "tv_extended_logging",
"contents": "tv_extended_logging \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "tv_grouprelaydatareliable",
"contents": "tv_grouprelaydatareliable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. When enabled, this will collect all information for relay sending into a single datagram to ensure that the data stays together through a potentially large number of relays "
},
{
"trigger": "tv_grouprelaydataunreliable",
"contents": "tv_grouprelaydataunreliable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. When enabled, this will collect all information for relay sending into a single datagram to ensure that the data stays together through a potentially large number of relays "
},
{
"trigger": "tv_grouprelaydatavoice",
"contents": "tv_grouprelaydatavoice \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Similar to tv_grouprelaydata, but controls whether or not the voice channels should be routed into the grouped data for the relays "
},
{
"trigger": "tv_instant_replay_full_frame",
"contents": "tv_instant_replay_full_frame \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Send embedded full frames "
},
{
"trigger": "tv_instant_replay_full_frame_build_threaded",
"contents": "tv_instant_replay_full_frame_build_threaded \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Build the full frames on a seperate job thread "
},
{
"trigger": "tv_instant_replay_full_frame_time",
"contents": "tv_instant_replay_full_frame_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 30. Seconds between full frame embeddeds "
},
{
"trigger": "tv_listen_voice_indices",
"contents": "tv_listen_voice_indices \"${1:value}\"",
"kind": "snippet",
"details": "Bitfield of playerslots to listen to voice messages from when connected to SourceTV, default is none "
},
{
"trigger": "tv_listen_voice_indices_h",
"contents": "tv_listen_voice_indices_h \"${1:value}\"",
"kind": "snippet",
"details": "High 32 bits of bitfield of playerslots to listen to voice messages from when connected to SourceTV, default is none "
},
{
"trigger": "tv_log_director_events",
"contents": "tv_log_director_events \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Log game events being considered by the director "
},
{
"trigger": "tv_maxclients",
"contents": "tv_maxclients \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 128. Maximum client number on SourceTV server.0 Max: 255"
},
{
"trigger": "tv_maxclients_relayreserved",
"contents": "tv_maxclients_relayreserved \"${1:value}\"",
"kind": "snippet",
"details": "This number of relay client connections are reserved for SourceTV relays.0 Max: 255"
},
{
"trigger": "tv_maxrate",
"contents": "tv_maxrate \"${1:value}\"",
"kind": "snippet",
"details": "Max SourceTV spectator bandwidth rate allowed, 0 == unlimited "
},
{
"trigger": "tv_name",
"contents": "tv_name \"${1:value}\"",
"kind": "snippet",
"details": "SourceTV host name "
},
{
"trigger": "tv_nochat",
"contents": "tv_nochat \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Don't receive chat messages from other SourceTV spectators "
},
{
"trigger": "tv_overridemaster",
"contents": "tv_overridemaster \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Overrides the SourceTV master root address. "
},
{
"trigger": "tv_password",
"contents": "tv_password \"${1:value}\"",
"kind": "snippet",
"details": "SourceTV password for all clients "
},
{
"trigger": "tv_playcast_delay_prediction",
"contents": "tv_playcast_delay_prediction \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "tv_playcast_delay_resync",
"contents": "tv_playcast_delay_resync \"${1:value}\"",
"kind": "snippet",
"details": "To alleviate intermittent network connectivity problems, this is the number of seconds to wait before actually re-syncing the stream after failure "
},
{
"trigger": "tv_playcast_max_rcvage",
"contents": "tv_playcast_max_rcvage \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 15"
},
{
"trigger": "tv_playcast_max_rtdelay",
"contents": "tv_playcast_max_rtdelay \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 300"
},
{
"trigger": "tv_playcast_origin_auth",
"contents": "tv_playcast_origin_auth \"${1:value}\"",
"kind": "snippet",
"details": "Get request X-Origin-Auth string "
},
{
"trigger": "tv_playcast_retry_timeout",
"contents": "tv_playcast_retry_timeout \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 12. In case of intermittent network problems, how long should playcast retry fragment retrieval before resorting to resync "
},
{
"trigger": "tv_playcast_showerrors",
"contents": "tv_playcast_showerrors \"${1:value}\"",
"kind": "snippet",
"details": "Set to display headers upon error (e.g. \"CF-Ray,CF-Cache-Status,Body\" ) "
},
{
"trigger": "tv_port",
"contents": "tv_port \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 27020. Host SourceTV[0] port "
},
{
"trigger": "tv_port1",
"contents": "tv_port1 \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 27021. Host SourceTV[1] port "
},
{
"trigger": "tv_rate_multiplier",
"contents": "tv_rate_multiplier \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2. Multiply requested rate by this value to adjust Dota TV send rate "
},
{
"trigger": "tv_record_immediate",
"contents": "tv_record_immediate \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. tv_record starting the moment tv_record was executed, not tv_delay earlier "
},
{
"trigger": "tv_relay_hard_shutdown",
"contents": "tv_relay_hard_shutdown \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "tv_relay_quit_after_game",
"contents": "tv_relay_quit_after_game \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Quit after a game has been relayed, do not hibernate "
},
{
"trigger": "tv_relay_rate",
"contents": "tv_relay_rate \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 500000. default rate for relays "
},
{
"trigger": "tv_relay_secret_code",
"contents": "tv_relay_secret_code \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. When enabled, this will use a uniquely generated server code to authenticate relay to relay connections. This code is coordinated via the GC or some external means rather than by clients directly "
},
{
"trigger": "tv_relaypassword",
"contents": "tv_relaypassword \"${1:value}\"",
"kind": "snippet",
"details": "SourceTV password for relay proxies "
},
{
"trigger": "tv_relayradio",
"contents": "tv_relayradio \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Relay team radio commands to TV: 0=off, 1=on "
},
{
"trigger": "tv_relayvoice",
"contents": "tv_relayvoice \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Relay voice data: 0=off, 1=on "
},
{
"trigger": "tv_secret_code",
"contents": "tv_secret_code \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. When enabled, this will use a uniquely generated server code to authenticate relay connections. This code is coordinated via the GC or some external means rather than by clients directly "
},
{
"trigger": "tv_show_allchat",
"contents": "tv_show_allchat \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "tv_spectator_port_offset",
"contents": "tv_spectator_port_offset \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "tv_threaded_merge_entity_deltas",
"contents": "tv_threaded_merge_entity_deltas \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Enable SourceTV threading of delta merging "
},
{
"trigger": "tv_timeout",
"contents": "tv_timeout \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 20. SourceTV connection timeout in seconds. "
},
{
"trigger": "tv_title",
"contents": "tv_title \"${1:value}\"",
"kind": "snippet",
"details": "Set title for SourceTV spectator UI "
},
{
"trigger": "tv_transmitall",
"contents": "tv_transmitall \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Transmit all entities (not only director view) "
},
{
"trigger": "tv_update_hibernation_enabled",
"contents": "tv_update_hibernation_enabled \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Allow SourceTV to control server hibernation state. "
},
{
"trigger": "tv_window_size",
"contents": "tv_window_size \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 16. Specifies the number of seconds worth of frames that the tv replay system should keep in memory. Increasing this greatly increases the amount of memory consumed by the TV system "
},
{
"trigger": "ui_deepstats_radio_heat_figurine",
"contents": "ui_deepstats_radio_heat_figurine \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "ui_deepstats_radio_heat_tab",
"contents": "ui_deepstats_radio_heat_tab \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "ui_deepstats_radio_heat_team",
"contents": "ui_deepstats_radio_heat_team \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "ui_deepstats_toplevel_mode",
"contents": "ui_deepstats_toplevel_mode \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "ui_hud_dist",
"contents": "ui_hud_dist \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 24. distance from the player to the hud "
},
{
"trigger": "ui_inventorysettings_recently_acknowledged",
"contents": "ui_inventorysettings_recently_acknowledged \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "ui_leaderboards_top_public_appid",
"contents": "ui_leaderboards_top_public_appid \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 730"
},
{
"trigger": "ui_lobby_draft_enabled",
"contents": "ui_lobby_draft_enabled \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "ui_mainmenu_bkgnd_movie_1016BB11",
"contents": "ui_mainmenu_bkgnd_movie_1016BB11 \"${1:value}\"",
"kind": "snippet",
"details": "Main menu background movie "
},
{
"trigger": "ui_nearbylobbies_filter3",
"contents": "ui_nearbylobbies_filter3 \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "ui_news_last_read_link",
"contents": "ui_news_last_read_link \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "ui_party_msg_sound_enabled",
"contents": "ui_party_msg_sound_enabled \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. When enabled, lobby messages will play a short sound "
},
{
"trigger": "ui_playsettings_custom_preset",
"contents": "ui_playsettings_custom_preset \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "ui_playsettings_directchallengekey",
"contents": "ui_playsettings_directchallengekey \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "ui_playsettings_flags_listen_casual",
"contents": "ui_playsettings_flags_listen_casual \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "ui_playsettings_flags_listen_competitive",
"contents": "ui_playsettings_flags_listen_competitive \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 16"
},
{
"trigger": "ui_playsettings_flags_listen_cooperative",
"contents": "ui_playsettings_flags_listen_cooperative \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "ui_playsettings_flags_listen_deathmatch",
"contents": "ui_playsettings_flags_listen_deathmatch \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 32"
},
{
"trigger": "ui_playsettings_flags_listen_scrimcomp2v2",
"contents": "ui_playsettings_flags_listen_scrimcomp2v2 \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "ui_playsettings_flags_listen_skirmish",
"contents": "ui_playsettings_flags_listen_skirmish \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "ui_playsettings_flags_listen_survival",
"contents": "ui_playsettings_flags_listen_survival \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "ui_playsettings_flags_official_casual",
"contents": "ui_playsettings_flags_official_casual \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "ui_playsettings_flags_official_competitive",
"contents": "ui_playsettings_flags_official_competitive \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 16"
},
{
"trigger": "ui_playsettings_flags_official_cooperative",
"contents": "ui_playsettings_flags_official_cooperative \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "ui_playsettings_flags_official_deathmatch",
"contents": "ui_playsettings_flags_official_deathmatch \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 32"
},
{
"trigger": "ui_playsettings_flags_official_scrimcomp2v2",
"contents": "ui_playsettings_flags_official_scrimcomp2v2 \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "ui_playsettings_flags_official_skirmish",
"contents": "ui_playsettings_flags_official_skirmish \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "ui_playsettings_flags_official_survival",
"contents": "ui_playsettings_flags_official_survival \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "ui_playsettings_maps_listen_casual",
"contents": "ui_playsettings_maps_listen_casual \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "ui_playsettings_maps_listen_competitive",
"contents": "ui_playsettings_maps_listen_competitive \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "ui_playsettings_maps_listen_deathmatch",
"contents": "ui_playsettings_maps_listen_deathmatch \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "ui_playsettings_maps_listen_scrimcomp2v2",
"contents": "ui_playsettings_maps_listen_scrimcomp2v2 \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "ui_playsettings_maps_listen_skirmish",
"contents": "ui_playsettings_maps_listen_skirmish \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "ui_playsettings_maps_official_casual",
"contents": "ui_playsettings_maps_official_casual \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "ui_playsettings_maps_official_deathmatch",
"contents": "ui_playsettings_maps_official_deathmatch \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "ui_playsettings_maps_workshop",
"contents": "ui_playsettings_maps_workshop \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "ui_playsettings_mode_listen",
"contents": "ui_playsettings_mode_listen \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "ui_playsettings_mode_official_v20",
"contents": "ui_playsettings_mode_official_v20 \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "ui_playsettings_survival_solo",
"contents": "ui_playsettings_survival_solo \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "ui_playsettings_warmup_map_name",
"contents": "ui_playsettings_warmup_map_name \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "ui_popup_weaponupdate_version",
"contents": "ui_popup_weaponupdate_version \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "ui_setting_advertiseforhire_auto",
"contents": "ui_setting_advertiseforhire_auto \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Whether users will automatically advertise for invites (0: off; 1: last; 2: auto) "
},
{
"trigger": "ui_setting_advertiseforhire_auto_last",
"contents": "ui_setting_advertiseforhire_auto_last \"${1:value}\"",
"kind": "snippet",
"details": "Which game mode users last used to advertise for invites "
},
{
"trigger": "ui_show_subscription_alert",
"contents": "ui_show_subscription_alert \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "ui_show_unlock_competitive_alert",
"contents": "ui_show_unlock_competitive_alert \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "ui_steam_overlay_notification_position",
"contents": "ui_steam_overlay_notification_position \"${1:value}\"",
"kind": "snippet",
"details": "Steam overlay notification position "
},
{
"trigger": "ui_steam_overlay_notification_position_horz",
"contents": "ui_steam_overlay_notification_position_horz \"${1:value}\"",
"kind": "snippet",
"details": "Steam overlay notification position horizontal offset0 Max: 100"
},
{
"trigger": "ui_steam_overlay_notification_position_vert",
"contents": "ui_steam_overlay_notification_position_vert \"${1:value}\"",
"kind": "snippet",
"details": "Steam overlay notification position vertical offset0 Max: 100"
},
{
"trigger": "ui_vanitysetting_loadoutslot_ct",
"contents": "ui_vanitysetting_loadoutslot_ct \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "ui_vanitysetting_loadoutslot_t",
"contents": "ui_vanitysetting_loadoutslot_t \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "ui_vanitysetting_team",
"contents": "ui_vanitysetting_team \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "use_fx_queue",
"contents": "use_fx_queue \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. use_fx_queue "
},
{
"trigger": "vconsole_rcon_server_details",
"contents": "vconsole_rcon_server_details \"${1:value}\"",
"kind": "snippet",
"details": "when non-empty allows for easy vconsole connection to the dedicated server. "
},
{
"trigger": "vehicle_debug_impact_damage",
"contents": "vehicle_debug_impact_damage \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "view_punch_decay",
"contents": "view_punch_decay \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 18. Decay factor exponent for view punch "
},
{
"trigger": "viewmodel_always_on",
"contents": "viewmodel_always_on \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Force the view model to draw, even when in 3rd person "
},
{
"trigger": "viewmodel_fov",
"contents": "viewmodel_fov \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 60. Viewmodel FOVMin: 54 Max: 68"
},
{
"trigger": "viewmodel_offset_randomize",
"contents": "viewmodel_offset_randomize \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. randomly change viewmodel offsets to visualize range "
},
{
"trigger": "viewmodel_offset_x",
"contents": "viewmodel_offset_x \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. viewmodel_offset_xMin: -2 Max: 2.5"
},
{
"trigger": "viewmodel_offset_y",
"contents": "viewmodel_offset_y \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. viewmodel_offset_yMin: -2 Max: 2"
},
{
"trigger": "viewmodel_offset_z",
"contents": "viewmodel_offset_z \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1. viewmodel_offset_zMin: -2 Max: 2"
},
{
"trigger": "viewmodel_presetpos",
"contents": "viewmodel_presetpos \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. 1:\"Desktop\", 2:\"Couch\", 3:\"Classic\" "
},
{
"trigger": "violence_ablood",
"contents": "violence_ablood \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Draw alien blood "
},
{
"trigger": "violence_agibs",
"contents": "violence_agibs \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Show alien gib entities "
},
{
"trigger": "violence_hblood",
"contents": "violence_hblood \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Draw human blood "
},
{
"trigger": "violence_hgibs",
"contents": "violence_hgibs \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Show human gib entities "
},
{
"trigger": "vis_enable",
"contents": "vis_enable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Enable precomputed visibility when true "
},
{
"trigger": "vis_force",
"contents": "vis_force \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "vis_sunlight_enable",
"contents": "vis_sunlight_enable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Toggle whether to use sunlight PVS for sunlight views (0 = sky PVS, 1 = sunlight PVS) "
},
{
"trigger": "vismon_poll_frequency",
"contents": "vismon_poll_frequency \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.5"
},
{
"trigger": "vismon_trace_limit",
"contents": "vismon_trace_limit \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 12"
},
{
"trigger": "vm_camera",
"contents": "vm_camera \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "vm_camera_interp_speed",
"contents": "vm_camera_interp_speed \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 8"
},
{
"trigger": "vm_camera_no_roll",
"contents": "vm_camera_no_roll \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "vm_camera_scale",
"contents": "vm_camera_scale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "vm_debug",
"contents": "vm_debug \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "vm_draw_always",
"contents": "vm_draw_always \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "voice_all_icons",
"contents": "voice_all_icons \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Draw all players' voice icons "
},
{
"trigger": "voice_always_sample_mic",
"contents": "voice_always_sample_mic \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. For systems experiencing a hang/stall when using voice chat. "
},
{
"trigger": "voice_clientdebug",
"contents": "voice_clientdebug \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "voice_debugfeedbackfrom",
"contents": "voice_debugfeedbackfrom \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "voice_fadeouttime",
"contents": "voice_fadeouttime \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.005"
},
{
"trigger": "voice_initial_buffer_ms",
"contents": "voice_initial_buffer_ms \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 200"
},
{
"trigger": "voice_loopback",
"contents": "voice_loopback \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "voice_min_buffer_ms",
"contents": "voice_min_buffer_ms \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 100"
},
{
"trigger": "voice_modenable",
"contents": "voice_modenable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. Enable/disable voice in this mod. "
},
{
"trigger": "voice_player_speaking_delay_threshold",
"contents": "voice_player_speaking_delay_threshold \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.5"
},
{
"trigger": "voice_sequence_maximum_wait_time",
"contents": "voice_sequence_maximum_wait_time \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.5. When receiving packets out of sequence, wait this many seconds for missing sequences to arrive "
},
{
"trigger": "voice_serverdebug",
"contents": "voice_serverdebug \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "voice_stall_ms",
"contents": "voice_stall_ms \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 250"
},
{
"trigger": "voice_test_log_send",
"contents": "voice_test_log_send \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "voice_threshold",
"contents": "voice_threshold \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 4000"
},
{
"trigger": "voice_threshold_delay",
"contents": "voice_threshold_delay \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.5"
},
{
"trigger": "voice_vox",
"contents": "voice_vox \"${1:value}\"",
"kind": "snippet",
"details": "Voice chat uses a vox-style always on "
},
{
"trigger": "voice_vox_current_peak",
"contents": "voice_vox_current_peak \"${1:value}\"",
"kind": "snippet",
"details": "Current peak value (out of 64k) of the incoming voice stream "
},
{
"trigger": "volume",
"contents": "volume \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Sound volume0 Max: 1"
},
{
"trigger": "volume_fog_clipmap_update",
"contents": "volume_fog_clipmap_update \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "volume_fog_clipmaps_enabled",
"contents": "volume_fog_clipmaps_enabled \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "volume_fog_depth",
"contents": "volume_fog_depth \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 128"
},
{
"trigger": "volume_fog_disable",
"contents": "volume_fog_disable \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "volume_fog_dither_scale",
"contents": "volume_fog_dither_scale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 3"
},
{
"trigger": "volume_fog_enable_jitter",
"contents": "volume_fog_enable_jitter \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "volume_fog_enable_stereo",
"contents": "volume_fog_enable_stereo \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "volume_fog_enlarge_frusta",
"contents": "volume_fog_enlarge_frusta \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 2"
},
{
"trigger": "volume_fog_height",
"contents": "volume_fog_height \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 160"
},
{
"trigger": "volume_fog_intermediate_textures_hdr",
"contents": "volume_fog_intermediate_textures_hdr \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "volume_fog_jitter_offset_random",
"contents": "volume_fog_jitter_offset_random \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "volume_fog_show_volumes",
"contents": "volume_fog_show_volumes \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "volume_fog_width",
"contents": "volume_fog_width \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 240"
},
{
"trigger": "vphys2_friction_factor",
"contents": "vphys2_friction_factor \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Change global friction factor "
},
{
"trigger": "vphys2_restitution_factor",
"contents": "vphys2_restitution_factor \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Change global restitution factor "
},
{
"trigger": "vphysics_force_apply_magnitude",
"contents": "vphysics_force_apply_magnitude \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1"
},
{
"trigger": "vphysics_return_implicit_velocity",
"contents": "vphysics_return_implicit_velocity \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "vprof_counters",
"contents": "vprof_counters \"${1:value}\"",
"kind": "snippet",
"details": ""
},
{
"trigger": "vprof_counters_show_minmax",
"contents": "vprof_counters_show_minmax \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "vprof_scope_entity_clientthink",
"contents": "vprof_scope_entity_clientthink \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Does nothing whatsoever. "
},
{
"trigger": "vprof_scope_entity_gamephys",
"contents": "vprof_scope_entity_gamephys \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "vprof_scope_entity_thinks",
"contents": "vprof_scope_entity_thinks \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "vprof_think_limit",
"contents": "vprof_think_limit \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "weapon_accuracy_forcespread",
"contents": "weapon_accuracy_forcespread \"${1:value}\"",
"kind": "snippet",
"details": "Force spread to the specified value. "
},
{
"trigger": "weapon_accuracy_logging",
"contents": "weapon_accuracy_logging \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "weapon_accuracy_nospread",
"contents": "weapon_accuracy_nospread \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Disable weapon inaccuracy spread "
},
{
"trigger": "weapon_accuracy_reset_on_deploy",
"contents": "weapon_accuracy_reset_on_deploy \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. On deploy, forcibly reset weapon accuracy to zero. "
},
{
"trigger": "weapon_accuracy_shotgun_spread_patterns",
"contents": "weapon_accuracy_shotgun_spread_patterns \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "weapon_air_spread_scale",
"contents": "weapon_air_spread_scale \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Scale factor for jumping inaccuracy, set to 0 to make jumping accuracy equal to standing0 "
},
{
"trigger": "weapon_all_nametag",
"contents": "weapon_all_nametag \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "weapon_all_stattrak",
"contents": "weapon_all_stattrak \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "weapon_auto_cleanup_time",
"contents": "weapon_auto_cleanup_time \"${1:value}\"",
"kind": "snippet",
"details": "If set to non-zero, weapons will delete themselves after the specified time (in seconds) if no players are near. "
},
{
"trigger": "weapon_debug_inaccuracy_only_up",
"contents": "weapon_debug_inaccuracy_only_up \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Force weapon inaccuracy to be in exactly the up direction "
},
{
"trigger": "weapon_debug_max_inaccuracy",
"contents": "weapon_debug_max_inaccuracy \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false. Force all shots to have maximum inaccuracy "
},
{
"trigger": "weapon_debug_spread_gap",
"contents": "weapon_debug_spread_gap \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 0.67"
},
{
"trigger": "weapon_debug_spread_show",
"contents": "weapon_debug_spread_show \"${1:value}\"",
"kind": "snippet",
"details": "Enables display of weapon accuracy; 1: show accuracy box, 3: show accuracy with dynamic crosshair "
},
{
"trigger": "weapon_land_dip_amt",
"contents": "weapon_land_dip_amt \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 20. The amount the gun should dip when the player lands after a jump. "
},
{
"trigger": "weapon_max_before_cleanup",
"contents": "weapon_max_before_cleanup \"${1:value}\"",
"kind": "snippet",
"details": "If set to non-zero, will remove the oldest dropped weapon to maintain the specified number of dropped weapons in the world. "
},
{
"trigger": "weapon_molotov_maxdetonateslope",
"contents": "weapon_molotov_maxdetonateslope \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 30. Maximum angle of slope on which the molotov will detonate0 Max: 90"
},
{
"trigger": "weapon_near_empty_sound",
"contents": "weapon_near_empty_sound \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "weapon_random_stickers",
"contents": "weapon_random_stickers \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "weapon_reticle_knife_show",
"contents": "weapon_reticle_knife_show \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true. When enabled will show knife reticle on clients. Used for game modes requiring target id display when holding a knife. "
},
{
"trigger": "weapon_skin_force_legacy",
"contents": "weapon_skin_force_legacy \"${1:value}\"",
"kind": "snippet",
"details": "Def val: -1"
},
{
"trigger": "weapon_skins",
"contents": "weapon_skins \"${1:value}\"",
"kind": "snippet",
"details": "Def val: true"
},
{
"trigger": "weapon_skins_for_bots",
"contents": "weapon_skins_for_bots \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "weapon_skins_on_default",
"contents": "weapon_skins_on_default \"${1:value}\"",
"kind": "snippet",
"details": "Def val: false"
},
{
"trigger": "weapon_sound_falloff_multiplier",
"contents": "weapon_sound_falloff_multiplier \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Scaling for falloff of weapon firing sounds "
},
{
"trigger": "webapi_values_init_buffer_size",
"contents": "webapi_values_init_buffer_size \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 65536. Initial buffer size for buffers in the WebAPIValues buffer pool "
},
{
"trigger": "webapi_values_max_pool_size_mb",
"contents": "webapi_values_max_pool_size_mb \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 400. Maximum size in bytes of the WebAPIValues buffer pool "
},
{
"trigger": "zoom_sensitivity_ratio",
"contents": "zoom_sensitivity_ratio \"${1:value}\"",
"kind": "snippet",
"details": "Def val: 1. Additional mouse sensitivity scale factor applied when FOV is zoomed in.Min: 0.01 Max: 3"
},
]
}